0: Wandb run: atmorep-phwx1akk-18560904
0: l50133:2252469:2252469 [0] NCCL INFO Bootstrap : Using ib0:10.128.11.184<0>
0: l50133:2252469:2252469 [0] NCCL INFO NET/Plugin: No plugin found (libnccl-net.so)
0: l50133:2252469:2252469 [0] NCCL INFO NET/Plugin: Plugin load returned 2 : libnccl-net.so: cannot open shared object file: No such file or directory : when loading libnccl-net.so
0: l50133:2252469:2252469 [0] NCCL INFO NET/Plugin: Using internal network plugin.
0: l50133:2252469:2252469 [0] NCCL INFO cudaDriverVersion 12060
0: NCCL version 2.21.5+cuda12.4
1: l50145:2725267:2725267 [0] NCCL INFO cudaDriverVersion 12060
1: l50145:2725267:2725267 [0] NCCL INFO Bootstrap : Using ib0:10.128.11.192<0>
1: l50145:2725267:2725267 [0] NCCL INFO NET/Plugin: No plugin found (libnccl-net.so)
1: l50145:2725267:2725267 [0] NCCL INFO NET/Plugin: Plugin load returned 2 : libnccl-net.so: cannot open shared object file: No such file or directory : when loading libnccl-net.so
1: l50145:2725267:2725267 [0] NCCL INFO NET/Plugin: Using internal network plugin.
1: l50145:2725267:2725510 [0] NCCL INFO NET/IB : Using [0]mlx5_0:1/IB [1]mlx5_1:1/IB [RO]; OOB ib0:10.128.11.192<0>
1: l50145:2725267:2725510 [0] NCCL INFO Using non-device net plugin version 0
1: l50145:2725267:2725510 [0] NCCL INFO Using network IB
1: l50145:2725267:2725510 [0] NCCL INFO DMA-BUF is available on GPU device 0
0: l50133:2252469:2253034 [0] NCCL INFO NET/IB : Using [0]mlx5_0:1/IB [1]mlx5_1:1/IB [RO]; OOB ib0:10.128.11.184<0>
0: l50133:2252469:2253034 [0] NCCL INFO Using non-device net plugin version 0
0: l50133:2252469:2253034 [0] NCCL INFO Using network IB
0: l50133:2252469:2253034 [0] NCCL INFO DMA-BUF is available on GPU device 0
0: l50133:2252469:2253034 [0] NCCL INFO ncclCommInitRank comm 0x55555f0e8940 rank 0 nranks 2 cudaDev 0 nvmlDev 0 busId 3000 commId 0x644d9e44981b71c8 - Init START
1: l50145:2725267:2725510 [0] NCCL INFO ncclCommInitRank comm 0x55555ec9c280 rank 1 nranks 2 cudaDev 0 nvmlDev 0 busId 3000 commId 0x644d9e44981b71c8 - Init START
0: l50133:2252469:2253034 [0] NCCL INFO Setting affinity for GPU 0 to ffff0000,00000000,00000000,00000000,ffff0000,00000000
1: l50145:2725267:2725510 [0] NCCL INFO Setting affinity for GPU 0 to ffff0000,00000000,00000000,00000000,ffff0000,00000000
1: l50145:2725267:2725510 [0] NCCL INFO comm 0x55555ec9c280 rank 1 nRanks 2 nNodes 2 localRanks 1 localRank 0 MNNVL 0
1: l50145:2725267:2725510 [0] NCCL INFO Trees [0] -1/-1/-1->1->0 [1] -1/-1/-1->1->0 [2] 0/-1/-1->1->-1 [3] 0/-1/-1->1->-1
1: l50145:2725267:2725510 [0] NCCL INFO P2P Chunksize set to 131072
0: l50133:2252469:2253034 [0] NCCL INFO comm 0x55555f0e8940 rank 0 nRanks 2 nNodes 2 localRanks 1 localRank 0 MNNVL 0
0: l50133:2252469:2253034 [0] NCCL INFO Channel 00/04 :    0   1
0: l50133:2252469:2253034 [0] NCCL INFO Channel 01/04 :    0   1
0: l50133:2252469:2253034 [0] NCCL INFO Channel 02/04 :    0   1
0: l50133:2252469:2253034 [0] NCCL INFO Channel 03/04 :    0   1
0: l50133:2252469:2253034 [0] NCCL INFO Trees [0] 1/-1/-1->0->-1 [1] 1/-1/-1->0->-1 [2] -1/-1/-1->0->1 [3] -1/-1/-1->0->1
0: l50133:2252469:2253034 [0] NCCL INFO P2P Chunksize set to 131072
0: l50133:2252469:2253034 [0] NCCL INFO Channel 00/0 : 1[0] -> 0[0] [receive] via NET/IB/0
0: l50133:2252469:2253034 [0] NCCL INFO Channel 01/0 : 1[0] -> 0[0] [receive] via NET/IB/1
0: l50133:2252469:2253034 [0] NCCL INFO Channel 02/0 : 1[0] -> 0[0] [receive] via NET/IB/0
0: l50133:2252469:2253034 [0] NCCL INFO Channel 03/0 : 1[0] -> 0[0] [receive] via NET/IB/1
0: l50133:2252469:2253034 [0] NCCL INFO Channel 00/0 : 0[0] -> 1[0] [send] via NET/IB/0
1: l50145:2725267:2725510 [0] NCCL INFO Channel 00/0 : 0[0] -> 1[0] [receive] via NET/IB/0
0: l50133:2252469:2253034 [0] NCCL INFO Channel 01/0 : 0[0] -> 1[0] [send] via NET/IB/1
0: l50133:2252469:2253034 [0] NCCL INFO Channel 02/0 : 0[0] -> 1[0] [send] via NET/IB/0
1: l50145:2725267:2725510 [0] NCCL INFO Channel 01/0 : 0[0] -> 1[0] [receive] via NET/IB/1
0: l50133:2252469:2253034 [0] NCCL INFO Channel 03/0 : 0[0] -> 1[0] [send] via NET/IB/1
1: l50145:2725267:2725510 [0] NCCL INFO Channel 02/0 : 0[0] -> 1[0] [receive] via NET/IB/0
1: l50145:2725267:2725510 [0] NCCL INFO Channel 03/0 : 0[0] -> 1[0] [receive] via NET/IB/1
1: l50145:2725267:2725510 [0] NCCL INFO Channel 00/0 : 1[0] -> 0[0] [send] via NET/IB/0
1: l50145:2725267:2725510 [0] NCCL INFO Channel 01/0 : 1[0] -> 0[0] [send] via NET/IB/1
1: l50145:2725267:2725510 [0] NCCL INFO Channel 02/0 : 1[0] -> 0[0] [send] via NET/IB/0
1: l50145:2725267:2725510 [0] NCCL INFO Channel 03/0 : 1[0] -> 0[0] [send] via NET/IB/1
1: l50145:2725267:2725513 [0] NCCL INFO NCCL_IB_TIMEOUT set by environment to 250.
1: l50145:2725267:2725513 [0] NCCL INFO NCCL_IB_RETRY_CNT set by environment to 50.
0: l50133:2252469:2253037 [0] NCCL INFO NCCL_IB_TIMEOUT set by environment to 250.
0: l50133:2252469:2253037 [0] NCCL INFO NCCL_IB_RETRY_CNT set by environment to 50.
0: l50133:2252469:2253034 [0] NCCL INFO Connected all rings
1: l50145:2725267:2725510 [0] NCCL INFO Connected all rings
0: l50133:2252469:2253034 [0] NCCL INFO Connected all trees
1: l50145:2725267:2725510 [0] NCCL INFO Connected all trees
1: l50145:2725267:2725510 [0] NCCL INFO threadThresholds 8/8/64 | 16/8/64 | 512 | 512
1: l50145:2725267:2725510 [0] NCCL INFO 4 coll channels, 4 collnet channels, 0 nvls channels, 4 p2p channels, 2 p2p channels per peer
0: l50133:2252469:2253034 [0] NCCL INFO threadThresholds 8/8/64 | 16/8/64 | 512 | 512
0: l50133:2252469:2253034 [0] NCCL INFO 4 coll channels, 4 collnet channels, 0 nvls channels, 4 p2p channels, 2 p2p channels per peer
0: l50133:2252469:2253034 [0] NCCL INFO TUNER/Plugin: Plugin load returned 11 : libnccl-net.so: cannot open shared object file: No such file or directory : when loading libnccl-tuner.so
0: l50133:2252469:2253034 [0] NCCL INFO TUNER/Plugin: Using internal tuner plugin.
0: l50133:2252469:2253034 [0] NCCL INFO ncclCommInitRank comm 0x55555f0e8940 rank 0 nranks 2 cudaDev 0 nvmlDev 0 busId 3000 commId 0x644d9e44981b71c8 - Init COMPLETE
1: l50145:2725267:2725510 [0] NCCL INFO TUNER/Plugin: Plugin load returned 11 : libnccl-net.so: cannot open shared object file: No such file or directory : when loading libnccl-tuner.so
1: l50145:2725267:2725510 [0] NCCL INFO TUNER/Plugin: Using internal tuner plugin.
1: l50145:2725267:2725510 [0] NCCL INFO ncclCommInitRank comm 0x55555ec9c280 rank 1 nranks 2 cudaDev 0 nvmlDev 0 busId 3000 commId 0x644d9e44981b71c8 - Init COMPLETE
0: with_ddp : True
0: num_accs_per_task : 1
0: par_rank : 0
0: par_size : 2
0: fields : [['velocity_u', [1, 1024, ['velocity_v', 'temperature'], 0, ['j8dwr5qj', -2]], [96, 105, 114, 123, 137], [12, 3, 6], [3, 18, 18], [0.5, 0.9, 0.2, 0.05]], ['velocity_v', [1, 1024, ['velocity_u', 'temperature'], 0, ['0tlnm5up', -2]], [96, 105, 114, 123, 137], [12, 3, 6], [3, 18, 18], [0.5, 0.9, 0.2, 0.05]], ['specific_humidity', [1, 1024, ['velocity_u', 'velocity_v', 'temperature'], 0, ['v63l01zu', -2]], [96, 105, 114, 123, 137], [12, 3, 6], [3, 18, 18], [0.5, 0.9, 0.2, 0.05]], ['velocity_z', [1, 1024, ['velocity_u', 'velocity_v', 'temperature'], 0, ['9l1errbo', -2]], [96, 105, 114, 123, 137], [12, 3, 6], [3, 18, 18], [0.5, 0.9, 0.2, 0.05]], ['temperature', [1, 1024, ['velocity_u', 'velocity_v', 'specific_humidity'], 0, ['7ojls62c', -2]], [96, 105, 114, 123, 137], [12, 2, 4], [3, 27, 27], [0.5, 0.9, 0.2, 0.05], 'Local'], ['total_precip', [1, 1024, ['velocity_u', 'velocity_v', 'velocity_z', 'specific_humidity'], 0], [0], [12, 6, 12], [3, 9, 9], [0.25, 0.9, 0.1, 0.05]], ['t2m', [1, 1024, ['velocity_u', '
0: velocity_v', 'velocity_z', 'specific_humidity'], 0], [0], [12, 2, 4], [3, 27, 27], [0.5, 0.9, 0.2, 0.05], 'Local']]
0: fields_prediction : [['velocity_u', 0.125], ['velocity_v', 0.125], ['specific_humidity', 0.05], ['velocity_z', 0.01], ['temperature', 0.1], ['total_precip', 0.01], ['t2m', 0.58]]
0: fields_targets : []
0: years_train : [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]
0: years_val : [2021]
0: month : None
0: geo_range_sampling : [[0.0, 360.0], [0.0, 360.0]]
0: time_sampling : 1
0: torch_seed : 5521420987310380410
0: batch_size_validation : 1
0: batch_size : 96
0: num_epochs : 128
0: num_samples_per_epoch : 480
0: num_samples_validate : 128
0: num_loader_workers : 5
0: size_token_info : 8
0: size_token_info_net : 16
0: grad_checkpointing : True
0: with_cls : False
0: with_mixed_precision : True
0: with_layernorm : True
0: coupling_num_heads_per_field : 1
0: dropout_rate : 0.05
0: with_qk_lnorm : True
0: encoder_num_layers : 6
0: encoder_num_heads : 16
0: encoder_num_mlp_layers : 2
0: encoder_att_type : dense
0: decoder_num_layers : 6
0: decoder_num_heads : 16
0: decoder_num_mlp_layers : 2
0: decoder_self_att : False
0: decoder_cross_att_ratio : 0.5
0: decoder_cross_att_rate : 1.0
0: decoder_att_type : dense
0: net_tail_num_nets : 16
0: net_tail_num_layers : 0
0: losses : ['mse_ensemble', 'stats']
0: optimizer_zero : False
0: lr_start : 1e-05
0: lr_max : 2e-05
0: lr_min : 1e-05
0: weight_decay : 0.025
0: lr_decay_rate : 1.025
0: lr_start_epochs : 3
0: model_log_frequency : 256
0: BERT_strategy : BERT
0: forecast_num_tokens : 2
0: BERT_fields_synced : False
0: BERT_mr_max : 2
0: log_test_num_ranks : 0
0: save_grads : False
0: profile : False
0: test_initial : False
0: attention : False
0: rng_seed : None
0: with_wandb : True
0: slurm_job_id : 18560904
0: wandb_id : phwx1akk
0: file_path : /work/ab1412/atmorep/data/era5_y2010_2020_res25_with_t2m.zarr
0: n_size : [36, 13.5, 27.0]
0: model_id : hjbmsjft
0: years_test : [2021]
1: Available keys in the Zarr dataset: ['data', 'data_sfc', 'lats', 'lons', 'time']
0: Available keys in the Zarr dataset: ['data', 'data_sfc', 'lats', 'lons', 'time']
1: self.ds['data'] : (105192, 7, 5, 721, 1440) :: (105192,)
1: self.lats : (721,)
1: self.lons : (1440,)
0: self.ds['data'] : (105192, 7, 5, 721, 1440) :: (105192,)
0: self.lats : (721,)
0: self.lons : (1440,)
0: Available keys in the Zarr dataset: ['data', 'data_sfc', 'lats', 'lons', 'time']
1: Available keys in the Zarr dataset: ['data', 'data_sfc', 'lats', 'lons', 'time']
1: self.ds['data'] : (105192, 7, 5, 721, 1440) :: (105192,)
1: self.lats : (721,)
1: self.lons : (1440,)
0: self.ds['data'] : (105192, 7, 5, 721, 1440) :: (105192,)
0: self.lats : (721,)
0: self.lons : (1440,)
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: Loaded model id = hjbmsjft.
1: Loaded run 'hjbmsjft' at epoch -2.
0: Loaded model id = hjbmsjft.
0: Loaded run 'hjbmsjft' at epoch -2.
1: -1 : 13:31:46 :: batch_size = 96, lr = 1e-05
0: Number of trainable parameters: 886,234,640
0: -1 : 13:31:47 :: batch_size = 96, lr = 1e-05
1: [DEBUG] TRAIN INPUT BATCH
1: Epoch -1, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0: [DEBUG] TRAIN INPUT BATCH
0: Epoch -1, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([ 0.0053,  0.0050, -0.0294, -0.0310, -0.0856,  0.0612,  0.0169, -0.1226,  0.0335,  0.0141, -0.0531, -0.0952,
1:         -0.0466,  0.1470,  0.0659,  0.0923, -0.1018, -0.1142, -0.0016, -0.0340, -0.0135, -0.0122, -0.0402,  0.0029,
1:         -0.0172], device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-1.1705, -1.1789, -1.1884, -1.1871, -1.1682, -1.1425, -1.1062, -1.0608, -1.0073, -0.9480, -0.8845, -0.8181,
0:         -0.7532, -0.7002, -0.6895, -0.6991, -0.6831, -0.6736, -1.1807, -1.1849, -1.1920, -1.2010, -1.1854, -1.1628,
0:         -1.1361], device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.3402, -0.3431, -0.3453, -0.3458, -0.3555, -0.3793, -0.4070, -0.4381, -0.4689, -0.4997, -0.5277, -0.5441,
1:         -0.5324, -0.4920, -0.4693, -0.4887, -0.5182, -0.5242, -0.3322, -0.3422, -0.3593, -0.3688, -0.3793, -0.3981,
1:         -0.4232], device='cuda:0')
1:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([2.7134, 2.7492, 2.7872, 2.8279, 2.8471, 2.8508, 2.8740, 2.8956, 2.9192, 2.9233, 2.9058, 2.8420, 2.7550, 2.6560,
1:         2.4964, 2.1767, 1.8388, 1.5565, 2.5151, 2.5608, 2.6729, 2.6750, 2.7061, 2.7176, 2.7546], device='cuda:0')
0:      first 25 values: tensor([-0.3402, -0.3431, -0.3453, -0.3458, -0.3555, -0.3793, -0.4070, -0.4381, -0.4689, -0.4997, -0.5277, -0.5441,
0:         -0.5324, -0.4920, -0.4693, -0.4887, -0.5182, -0.5242, -0.3322, -0.3422, -0.3593, -0.3688, -0.3793, -0.3981,
1:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:         -0.4232], device='cuda:0')
0:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.1562, -0.0683, -0.0507, -0.0512, -0.0415, -0.1301,  0.0395, -0.0167, -0.1866,  0.0063, -0.1937, -0.0926,
1:         -0.2079, -0.1923, -0.1425,  0.0046, -0.0298, -0.1087, -0.0943, -0.1098, -0.0361, -0.0721, -0.0898,  0.2243,
1:          0.1224], device='cuda:0')
1:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([2.7134, 2.7492, 2.7872, 2.8279, 2.8471, 2.8508, 2.8740, 2.8956, 2.9192, 2.9233, 2.9058, 2.8420, 2.7550, 2.6560,
0:         2.4964, 2.1767, 1.8388, 1.5565, 2.5151, 2.5608, 2.6729, 2.6750, 2.7061, 2.7176, 2.7546], device='cuda:0')
0:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([0.9598, 1.1055, 1.1909, 1.2133, 1.1804, 1.0978, 0.9697, 0.8294, 0.6459, 0.4506, 0.2525, 0.0872, 0.0514, 0.0757,
1:         0.0698, 0.1463, 0.2423, 0.3067, 0.4688, 0.6070, 0.6181, 0.5394, 0.4352, 0.3303, 0.2322], device='cuda:0')
1:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
0:        device='cuda:0')
0:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-0.1672, -0.1228, -0.0830, -0.1285, -0.0784,  0.3311,  0.0558,  0.0968, -0.0750, -0.1763, -0.1046, -0.0659,
1:         -0.0932, -0.1171,  0.0251, -0.0215, -0.0955, -0.1581, -0.2058, -0.1399, -0.0625,  0.0046, -0.0488,  0.0035,
1:          0.0012], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([0.5239, 0.7400, 0.7428, 0.9760, 0.9466, 0.7010, 0.6523, 1.2175, 1.8629, 2.0455, 1.9145, 1.8937, 1.8244, 1.7725,
1:         1.6013, 1.4943, 1.3394, 1.2877, 1.2311, 1.2056, 1.3419, 1.4159, 1.3205, 1.1333, 0.9652], device='cuda:0')
0:      first 25 values: tensor([0.9598, 1.1055, 1.1909, 1.2133, 1.1804, 1.0978, 0.9697, 0.8294, 0.6459, 0.4506, 0.2525, 0.0872, 0.0514, 0.0757,
0:         0.0698, 0.1463, 0.2423, 0.3067, 0.4688, 0.6070, 0.6181, 0.5394, 0.4352, 0.3303, 0.2322], device='cuda:0')
0:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([-0.1672, -0.1228, -0.0830, -0.1285, -0.0784,  0.3311,  0.0558,  0.0968, -0.0750, -0.1763, -0.1046, -0.0659,
0:         -0.0932, -0.1171,  0.0251, -0.0215, -0.0955, -0.1581, -0.2058, -0.1399, -0.0625,  0.0046, -0.0488,  0.0035,
0:          0.0012], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([0.5239, 0.7400, 0.7428, 0.9760, 0.9466, 0.7010, 0.6523, 1.2175, 1.8629, 2.0455, 1.9145, 1.8937, 1.8244, 1.7725,
0:         1.6013, 1.4943, 1.3394, 1.2877, 1.2311, 1.2056, 1.3419, 1.4159, 1.3205, 1.1333, 0.9652], device='cuda:0')
1: [DEBUG] TRAIN TARGET BATCH
1: Epoch -1, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2283, 2187])
0: [DEBUG] TRAIN TARGET BATCH
0: Epoch -1, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2302, 2187])
1:     First 25 batch values:
1: tensor([0.8173, 0.9040, 1.0960, 1.1813, 1.0793, 0.9015, 0.8167, 0.8634, 1.0948, 1.3896, 1.5627, 1.6402, 1.6177, 1.5365,
1:         1.5123, 1.4156, 1.0818, 0.5920, 0.3042, 0.3182, 0.4373, 0.4528, 0.3333, 0.1984, 0.2434])
1: [DEBUG] TRAIN PREDICTIONS BATCH
1: Epoch -1, first predictions sample:
0:     First 25 batch values:
0: tensor([-1.1697, -0.9193, -0.4745, -0.2788, -0.5907, -0.7673, -0.5386, -0.7564, -1.2278, -1.5051, -1.5026, -1.1988,
0:         -0.5509, -0.6376, -0.3967, -0.0427,  0.0061,  0.1563,  0.4779,  0.7173,  0.4395, -0.3233, -0.5306, -0.5839,
1:   └─ Predictions for 'velocity_u' shape: torch.Size([25523, 972])
0:         -0.6160])
0: [DEBUG] TRAIN PREDICTIONS BATCH
0: Epoch -1, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([27311, 972])
1:      first 25 pred values: tensor([0.3377, 0.3086, 0.2766, 0.2412, 0.2036, 0.1718, 0.1498, 0.1393, 0.1376, 0.1410, 0.1444, 0.1482, 0.1493, 0.1569,
1:         0.1672, 0.1770, 0.1809, 0.1710, 0.4079, 0.3834, 0.3530, 0.3219, 0.2869, 0.2569, 0.2373], device='cuda:0',
0:      first 25 pred values: tensor([-1.0530, -1.0508, -1.0521, -1.0569, -1.0723, -1.0944, -1.1158, -1.1354, -1.1427, -1.1435, -1.1377, -1.1260,
0:         -1.1147, -1.1027, -1.0922, -1.0851, -1.0797, -1.0751, -1.1095, -1.1076, -1.1075, -1.1110, -1.1206, -1.1365,
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([26457, 972])
0:         -1.1549], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([26255, 972])
1:      first 25 pred values: tensor([-0.5388, -0.5698, -0.6026, -0.6380, -0.6695, -0.6971, -0.7111, -0.7113, -0.6967, -0.6720, -0.6360, -0.5956,
1:         -0.5555, -0.5173, -0.4810, -0.4493, -0.4214, -0.3958, -0.5050, -0.5333, -0.5649, -0.5987, -0.6331, -0.6620,
1:         -0.6826], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([25564, 972])
0:      first 25 pred values: tensor([-0.2996, -0.2900, -0.2833, -0.2782, -0.2699, -0.2583, -0.2411, -0.2170, -0.1899, -0.1659, -0.1453, -0.1330,
0:         -0.1283, -0.1261, -0.1249, -0.1216, -0.1195, -0.1172, -0.3165, -0.3010, -0.2905, -0.2808, -0.2727, -0.2610,
0:         -0.2447], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([26184, 972])
1:      first 25 pred values: tensor([2.1184, 2.1732, 2.2046, 2.1884, 2.1279, 2.0351, 1.9322, 1.8526, 1.7966, 1.7677, 1.7502, 1.7360, 1.7099, 1.6676,
1:         1.6225, 1.5703, 1.5233, 1.4899, 2.1683, 2.2148, 2.2367, 2.2143, 2.1420, 2.0357, 1.9212], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([25582, 972])
0:      first 25 pred values: tensor([2.9964, 3.0114, 3.0055, 2.9734, 2.9240, 2.8515, 2.7668, 2.6251, 2.4145, 2.1334, 1.7983, 1.4495, 1.1495, 0.9337,
0:         0.8246, 0.8056, 0.8474, 0.9147, 3.0113, 3.0351, 3.0267, 2.9854, 2.9379, 2.8832, 2.8300], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([26236, 972])
1:      first 25 pred values: tensor([0.5103, 0.5707, 0.5524, 0.5581, 0.5500, 0.5402, 0.5792, 0.5809, 0.5414, 0.5322, 0.5441, 0.5689, 0.5684, 0.5074,
1:         0.4419, 0.4210, 0.4024, 0.3439, 0.3131, 0.4083, 0.3947, 0.4316, 0.4651, 0.4812, 0.5305], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([11765, 2187])
0:      first 25 pred values: tensor([-0.2232, -0.3016, -0.3802, -0.3545, -0.3305, -0.3186, -0.2775, -0.2840, -0.3038, -0.3486, -0.4250, -0.4883,
0:         -0.5573, -0.6273, -0.6573, -0.6733, -0.6531, -0.5689, -0.0794, -0.1612, -0.2845, -0.3278, -0.3572, -0.3553,
0:         -0.3100], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([11978, 2187])
1:      first 25 pred values: tensor([ 0.1235,  0.2055,  0.3181,  0.4433,  0.5567,  0.6156,  0.5982,  0.5032,  0.3548,  0.1905,  0.0452, -0.0659,
1:         -0.1432, -0.2041, -0.2697, -0.3422, -0.4112, -0.4502, -0.4374, -0.3682, -0.2606, -0.1493, -0.0647, -0.0288,
1:         -0.0479], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([10807, 243])
0:      first 25 pred values: tensor([-1.2334, -1.2362, -1.2305, -1.2059, -1.1522, -1.0601, -0.9324, -0.7749, -0.5983, -0.4219, -0.2628, -0.1482,
0:         -0.0872, -0.0807, -0.1070, -0.1463, -0.1767, -0.1921, -0.1896, -0.1688, -0.1365, -0.1004, -0.0784, -0.0879,
1:      first 25 pred values: tensor([-0.2585, -0.2594, -0.2598, -0.2551, -0.2440, -0.2417, -0.2246, -0.2117, -0.2026, -0.2527, -0.2522, -0.2464,
1:         -0.2358, -0.2267, -0.2118, -0.1968, -0.1909, -0.1784, -0.2356, -0.2344, -0.2266, -0.2130, -0.2019, -0.1852,
1:         -0.1713], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([2283, 2187])
0:         -0.1440], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([10668, 243])
1:      first 25 pred values: tensor([0.4457, 0.5011, 0.4922, 0.4964, 0.5293, 0.5535, 0.4957, 0.5383, 0.5400, 0.4722, 0.4952, 0.5479, 0.4929, 0.5490,
1:         0.4819, 0.5385, 0.5245, 0.5475, 0.5000, 0.5130, 0.4949, 0.4418, 0.4780, 0.4535, 0.4372], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
0:      first 25 pred values: tensor([-0.0669, -0.0814, -0.1210, -0.1453, -0.1808, -0.2154, -0.2397, -0.2597, -0.2590, -0.0370, -0.0664, -0.1009,
0:         -0.1285, -0.1589, -0.2064, -0.2350, -0.2451, -0.2531, -0.0107, -0.0395, -0.0558, -0.0944, -0.1308, -0.1609,
0:         -0.1819], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([2302, 2187])
0:      first 25 pred values: tensor([-0.1982, -0.2455, -0.2283, -0.2273, -0.2010, -0.2547, -0.2848, -0.2502, -0.2518, -0.2540, -0.2104, -0.2811,
0:         -0.2351, -0.2605, -0.2201, -0.2341, -0.2209, -0.2148, -0.2460, -0.3082, -0.2173, -0.2521, -0.1942, -0.2581,
0:         -0.2508], device='cuda:0', grad_fn=<SliceBackward0>)
0: epoch: -1 [1/5 (20%)]	Loss: 0.50705 : 0.12805 :: 0.07350 (1.25 s/sec)
0: epoch: -1 [2/5 (40%)]	Loss: 0.55144 : 0.15569 :: 0.07126 (8.07 s/sec)
0: epoch: -1 [3/5 (60%)]	Loss: 0.52539 : 0.11696 :: 0.07645 (8.08 s/sec)
0: epoch: -1 [4/5 (80%)]	Loss: 0.53708 : 0.14668 :: 0.07828 (8.04 s/sec)
0: validation loss for strategy=BERT at epoch -1 : 0.11090795695781708
0: validation loss for velocity_u : 0.004014329053461552
0: validation loss for velocity_v : 0.005621228367090225
0: validation loss for specific_humidity : 0.00650940602645278
0: validation loss for velocity_z : 0.11731034517288208
0: validation loss for temperature : 0.016922755166888237
0: validation loss for total_precip : 0.2371661365032196
0: validation loss for t2m : 0.38881149888038635
0: 0 : 13:39:56 :: batch_size = 96, lr = 1e-05
1: 0 : 13:40:08 :: batch_size = 96, lr = 1e-05
0: [DEBUG] TRAIN INPUT BATCH
0: Epoch 0, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([1.9061, 1.8430, 1.7610, 1.6651, 1.5712, 1.4974, 1.4512, 1.4320, 1.4310, 1.4347, 1.4353, 1.4301, 1.4199, 1.4100,
0:         1.4016, 1.3946, 1.3887, 1.3819, 1.8178, 1.7458, 1.6622, 1.5778, 1.5051, 1.4534, 1.4223], device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([1.3551, 1.3207, 1.2836, 1.2369, 1.1767, 1.1078, 1.0390, 0.9782, 0.9253, 0.8785, 0.8379, 0.8015, 0.7673, 0.7372,
0:         0.7098, 0.6850, 0.6632, 0.6415, 1.2533, 1.2301, 1.2000, 1.1544, 1.0969, 1.0384, 0.9885], device='cuda:0')
0:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.0786, -0.2907, -0.4300, -0.4887, -0.5154, -0.5072, -0.4855, -0.4588, -0.4342, -0.4099, -0.3902, -0.3768,
0:         -0.3680, -0.3663, -0.3720, -0.3847, -0.3995, -0.4167, -0.3895, -0.4575, -0.5030, -0.5086, -0.4970, -0.4841,
0:         -0.4694], device='cuda:0')
0:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., -0., -0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
0:        device='cuda:0')
0:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([0.3997, 0.4303, 0.4473, 0.4336, 0.3921, 0.3455, 0.3117, 0.3037, 0.3231, 0.3565, 0.3914, 0.4185, 0.4352, 0.4487,
0:         0.4617, 0.4757, 0.4906, 0.5040, 0.5143, 0.5231, 0.5310, 0.5390, 0.5459, 0.5507, 0.5550], device='cuda:0')
0:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([-0.1993, -0.1915, -0.2215, -0.0894, -0.0361, -0.0617, -0.1882, -0.1471, -0.1804, -0.1915, -0.1671, -0.2314,
0:         -0.1294,  0.0926,  0.1680, -0.1194, -0.1804, -0.2092, -0.2026, -0.1959, -0.2314, -0.2181, -0.0594,  0.0338,
0:          0.0016], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([ 0.1141,  0.0973,  0.0763,  0.0380,  0.0002, -0.0312, -0.0470, -0.0908, -0.1146, -0.1175, -0.0971, -0.0867,
0:         -0.0511, -0.0015,  0.0479,  0.0906,  0.1033,  0.1007,  0.0869,  0.0767,  0.0747,  0.0753,  0.0762,  0.0613,
0:          0.0746], device='cuda:0')
0: [DEBUG] TRAIN TARGET BATCH
0: Epoch 0, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2302, 2187])
0:     First 25 batch values:
0: tensor([1.3803, 1.3886, 1.3764, 1.3687, 1.3435, 1.2934, 1.2204, 1.1564, 1.1357, 1.1300, 1.1151, 1.0890, 1.0550, 1.0282,
0:         1.0071, 1.0679, 1.1730, 1.1303, 1.1735, 1.2982, 1.3755, 1.3552, 1.3066, 1.2197, 1.1068])
0: [DEBUG] TRAIN PREDICTIONS BATCH
0: Epoch 0, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([27311, 972])
0:      first 25 pred values: tensor([1.0467, 1.0657, 1.0846, 1.1021, 1.1128, 1.1135, 1.1001, 1.0733, 1.0310, 0.9753, 0.9127, 0.8510, 0.7922, 0.7438,
0:         0.7029, 0.6735, 0.6516, 0.6407, 1.0823, 1.1007, 1.1184, 1.1339, 1.1454, 1.1503, 1.1402], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([26255, 972])
0:      first 25 pred values: tensor([-2.7326, -2.8337, -2.9574, -3.1019, -3.2569, -3.4140, -3.5421, -3.6257, -3.6407, -3.5760, -3.4061, -3.1373,
0:         -2.7678, -2.3125, -1.7990, -1.2408, -0.6877, -0.1769, -2.5301, -2.6129, -2.7280, -2.8723, -3.0294, -3.1808,
0:         -3.3076], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([26184, 972])
0:      first 25 pred values: tensor([0.9177, 0.9625, 1.0248, 1.0903, 1.1636, 1.2203, 1.2636, 1.2846, 1.2823, 1.2539, 1.1943, 1.1121, 0.9943, 0.8504,
0:         0.6935, 0.5195, 0.3428, 0.1743, 0.9966, 1.0419, 1.0916, 1.1446, 1.1973, 1.2455, 1.2793], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([26236, 972])
0:      first 25 pred values: tensor([0.1216, 0.1744, 0.1931, 0.1851, 0.1595, 0.1748, 0.2608, 0.3487, 0.4020, 0.4443, 0.4703, 0.4905, 0.5152, 0.4954,
0:         0.4334, 0.3346, 0.2411, 0.2186, 0.0178, 0.0777, 0.1255, 0.1570, 0.1749, 0.2211, 0.3083], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([11978, 2187])
0:      first 25 pred values: tensor([0.4016, 0.3914, 0.3820, 0.3731, 0.3644, 0.3536, 0.3416, 0.3292, 0.3189, 0.3106, 0.3069, 0.3047, 0.2996, 0.2941,
0:         0.2854, 0.2783, 0.2775, 0.2820, 0.2916, 0.3041, 0.3147, 0.3248, 0.3357, 0.3467, 0.3535], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([10668, 243])
0:      first 25 pred values: tensor([-0.2330, -0.2303, -0.2295, -0.2347, -0.2380, -0.2363, -0.2401, -0.2367, -0.2371, -0.2340, -0.2329, -0.2340,
0:         -0.2332, -0.2357, -0.2348, -0.2404, -0.2386, -0.2372, -0.2328, -0.2337, -0.2315, -0.2327, -0.2320, -0.2354,
0:         -0.2367], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([2302, 2187])
0:      first 25 pred values: tensor([0.7078, 0.5989, 0.6265, 0.6545, 0.5889, 0.6175, 0.6826, 0.7187, 0.6768, 0.5979, 0.6573, 0.5945, 0.6290, 0.6972,
0:         0.6770, 0.5765, 0.6391, 0.6897, 0.6322, 0.5877, 0.6740, 0.6646, 0.6359, 0.6200, 0.6039], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
1: [DEBUG] TRAIN INPUT BATCH
1: Epoch 0, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.0442, -0.0231,  0.0422,  0.0819, -0.0102,  0.0332, -0.0300,  0.0064, -0.0493, -0.0457, -0.0264,  0.0723,
1:          0.0959, -0.0519, -0.0356,  0.0078,  0.1476,  0.1509,  0.0152, -0.0075, -0.0601,  0.0023, -0.1432, -0.1225,
1:         -0.0876], device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([ 0.4633,  0.4369,  0.4082,  0.3778,  0.3466,  0.3150,  0.2836,  0.2520,  0.2205,  0.1893,  0.1586,  0.1294,
1:          0.1016,  0.0752,  0.0498,  0.0246, -0.0010, -0.0276,  0.5615,  0.5409,  0.5171,  0.4905,  0.4618,  0.4315,
1:          0.4000], device='cuda:0')
1:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.6743, -0.6714, -0.6680, -0.6651, -0.6622, -0.6590, -0.6558, -0.6524, -0.6489, -0.6456, -0.6422, -0.6388,
1:         -0.6356, -0.6323, -0.6294, -0.6270, -0.6243, -0.6216, -0.6817, -0.6792, -0.6766, -0.6740, -0.6710, -0.6679,
1:         -0.6649], device='cuda:0')
1:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([ 0.2064,  0.1790,  0.0931,  0.1882,  0.0861,  0.0740,  0.1620,  0.2351,  0.0786,  0.3196,  0.1165,  0.3252,
1:          0.2228, -0.0194,  0.2295, -0.0959,  0.1046,  0.0989,  0.1032,  0.0956,  0.1755,  0.0864,  0.3126,  0.3787,
1:          0.2126], device='cuda:0')
1:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([0.8003, 0.7972, 0.7913, 0.7837, 0.7757, 0.7679, 0.7598, 0.7516, 0.7427, 0.7336, 0.7248, 0.7172, 0.7112, 0.7064,
1:         0.7023, 0.6986, 0.6948, 0.6907, 0.6871, 0.6840, 0.6810, 0.6781, 0.6745, 0.6702, 0.6653], device='cuda:0')
1:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
1:      first 25 values: tensor([-0.2471, -0.2459, -0.2471, -0.2471, -0.2483, -0.2495, -0.2483, -0.2483, -0.2483, -0.2471, -0.2471, -0.2483,
1:         -0.2483, -0.2495, -0.2495, -0.2495, -0.2495, -0.2495, -0.2471, -0.2471, -0.2471, -0.2483, -0.2483, -0.2495,
1:         -0.2495], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-0.2388, -0.1501, -0.1172, -0.1208, -0.1237, -0.1239, -0.1227, -0.1234, -0.1428, -0.1774, -0.2128, -0.2498,
1:         -0.2923, -0.3346, -0.3787, -0.4179, -0.4483, -0.4787, -0.4697, -0.4506, -0.4411, -0.4205, -0.3871, -0.3545,
1:         -0.3099], device='cuda:0')
1: [DEBUG] TRAIN TARGET BATCH
1: Epoch 0, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2283, 2187])
1:     First 25 batch values:
1: tensor([-0.5529, -0.5197, -0.4690, -0.3921, -0.3104, -0.2689, -0.3182, -0.4268, -0.5390, -0.5945, -0.6391, -0.6694,
1:         -0.6597, -0.6423, -0.6172, -0.5980, -0.5745, -0.5375, -0.4343, -0.2421, -0.0357,  0.2158,  0.5966,  0.9087,
1:          1.0490])
1: [DEBUG] TRAIN PREDICTIONS BATCH
1: Epoch 0, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([25523, 972])
1:      first 25 pred values: tensor([0.7668, 0.7727, 0.7779, 0.7888, 0.7990, 0.8061, 0.8087, 0.8082, 0.8018, 0.7930, 0.7849, 0.7784, 0.7722, 0.7641,
1:         0.7512, 0.7371, 0.7210, 0.7061, 0.7668, 0.7671, 0.7681, 0.7725, 0.7787, 0.7888, 0.7957], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([26457, 972])
1:      first 25 pred values: tensor([0.3766, 0.3745, 0.3682, 0.3573, 0.3468, 0.3361, 0.3282, 0.3222, 0.3163, 0.3088, 0.3014, 0.2918, 0.2798, 0.2662,
1:         0.2533, 0.2451, 0.2395, 0.2355, 0.4225, 0.4209, 0.4121, 0.3975, 0.3807, 0.3639, 0.3471], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([25564, 972])
1:      first 25 pred values: tensor([-0.7038, -0.7010, -0.6982, -0.6978, -0.6930, -0.6922, -0.6926, -0.6929, -0.6930, -0.6931, -0.6954, -0.6949,
1:         -0.6934, -0.6934, -0.6915, -0.6888, -0.6864, -0.6806, -0.6981, -0.6914, -0.6897, -0.6905, -0.6929, -0.6920,
1:         -0.6940], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([25582, 972])
1:      first 25 pred values: tensor([ 0.0825, -0.0038, -0.0373, -0.0595, -0.0811, -0.0998, -0.1170, -0.1247, -0.0994, -0.0749, -0.0927, -0.1218,
1:         -0.1333, -0.1237, -0.1298, -0.1390, -0.1075, -0.0729,  0.0792,  0.0115,  0.0010, -0.0034, -0.0227, -0.0401,
1:         -0.0657], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([11765, 2187])
1:      first 25 pred values: tensor([0.5435, 0.5384, 0.5322, 0.5242, 0.5157, 0.5083, 0.5064, 0.5082, 0.5146, 0.5200, 0.5221, 0.5204, 0.5137, 0.5025,
1:         0.4858, 0.4626, 0.4369, 0.4098, 0.3830, 0.3546, 0.3243, 0.2948, 0.2687, 0.2485, 0.2324], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([10807, 243])
1:      first 25 pred values: tensor([-0.2357, -0.2348, -0.2398, -0.2449, -0.2482, -0.2521, -0.2551, -0.2552, -0.2558, -0.2407, -0.2446, -0.2485,
1:         -0.2468, -0.2482, -0.2503, -0.2578, -0.2548, -0.2563, -0.2437, -0.2449, -0.2489, -0.2502, -0.2493, -0.2499,
1:         -0.2523], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([2283, 2187])
1:      first 25 pred values: tensor([-0.6444, -0.6540, -0.6499, -0.6366, -0.6314, -0.6580, -0.6503, -0.6837, -0.6033, -0.7019, -0.6569, -0.6211,
1:         -0.5939, -0.6775, -0.6941, -0.5830, -0.6790, -0.6626, -0.5814, -0.6680, -0.6848, -0.6670, -0.6494, -0.6535,
1:         -0.6532], device='cuda:0', grad_fn=<SliceBackward0>)
0: epoch: 0 [1/5 (20%)]	Loss: 0.50141 : 0.11182 :: 0.07996 (1.38 s/sec)
0: epoch: 0 [2/5 (40%)]	Loss: 0.49983 : 0.12182 :: 0.08053 (8.02 s/sec)
0: epoch: 0 [3/5 (60%)]	Loss: 0.47603 : 0.11956 :: 0.08389 (8.04 s/sec)
0: epoch: 0 [4/5 (80%)]	Loss: 0.48153 : 0.10694 :: 0.07922 (8.04 s/sec)
0: validation loss for strategy=BERT at epoch 0 : 0.1079595610499382
0: validation loss for velocity_u : 0.003941125236451626
0: validation loss for velocity_v : 0.0055561363697052
0: validation loss for specific_humidity : 0.006699531339108944
0: validation loss for velocity_z : 0.11643607169389725
0: validation loss for temperature : 0.017913835123181343
0: validation loss for total_precip : 0.2449074238538742
0: validation loss for t2m : 0.3602626919746399
0: 1 : 13:47:09 :: batch_size = 96, lr = 1.5000000000000002e-05
1: 1 : 13:47:23 :: batch_size = 96, lr = 1.5000000000000002e-05
0: [DEBUG] TRAIN INPUT BATCH
0: Epoch 1, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.2021, -0.2186, -0.2316, -0.2413, -0.2462, -0.2475, -0.2459, -0.2430, -0.2404, -0.2389, -0.2389, -0.2386,
0:         -0.2379, -0.2361, -0.2329, -0.2284, -0.2228, -0.2161, -0.2659, -0.2792, -0.2892, -0.2946, -0.2956, -0.2940,
0:         -0.2884], device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.0354, -0.0452, -0.0525, -0.0577, -0.0632, -0.0684, -0.0759, -0.0862, -0.0989, -0.1160, -0.1363, -0.1599,
0:         -0.1862, -0.2146, -0.2432, -0.2716, -0.2978, -0.3201, -0.0162, -0.0237, -0.0291, -0.0333, -0.0385, -0.0450,
0:         -0.0536], device='cuda:0')
0:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.4020, -0.3997, -0.3980, -0.3985, -0.4004, -0.4036, -0.4078, -0.4124, -0.4172, -0.4209, -0.4240, -0.4257,
0:         -0.4246, -0.4241, -0.4217, -0.4171, -0.4101, -0.4008, -0.4091, -0.4073, -0.4079, -0.4082, -0.4108, -0.4141,
0:         -0.4179], device='cuda:0')
0:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
0:        device='cuda:0')
0:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([1.3726, 1.2893, 1.2277, 1.1883, 1.1637, 1.1522, 1.1475, 1.1524, 1.1631, 1.1775, 1.1962, 1.2154, 1.2367, 1.2593,
0:         1.2845, 1.3061, 1.3212, 1.3232, 1.3161, 1.3066, 1.3004, 1.3034, 1.3159, 1.3380, 1.3579], device='cuda:0')
0:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([-0.2334, -0.2383, -0.2407, -0.2432, -0.2444, -0.2407, -0.2371, -0.2346, -0.2261, -0.2346, -0.2407, -0.2420,
0:         -0.2444, -0.2444, -0.2407, -0.2334, -0.2273, -0.2286, -0.2432, -0.2444, -0.2444, -0.2444, -0.2444, -0.2407,
0:         -0.2334], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([ 0.7549,  0.6968,  0.6653,  0.6326,  0.5799,  0.5581,  0.5294,  0.4952,  0.4460,  0.4080,  0.3932,  0.3408,
0:          0.2288,  0.1166, -0.0532, -0.1972, -0.3354, -0.4179, -0.4577, -0.5225, -0.5649, -0.5819, -0.4778, -0.3081,
0:         -0.0177], device='cuda:0')
0: [DEBUG] TRAIN TARGET BATCH
0: Epoch 1, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2302, 2187])
0:     First 25 batch values:
0: tensor([-0.3275, -0.4159, -0.5903, -0.7686, -0.9244, -1.1253, -1.2489, -1.2895, -1.4030, -1.5559, -1.7314, -1.7416,
0:         -1.6949, -1.6499, -1.5058, -1.4003, -1.1992, -1.0353, -0.9403, -0.8010, -0.6745, -0.6199, -0.6257, -0.6744,
0:         -0.6722])
0: [DEBUG] TRAIN PREDICTIONS BATCH
0: Epoch 1, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([27311, 972])
0:      first 25 pred values: tensor([-0.4736, -0.4699, -0.4713, -0.4728, -0.4735, -0.4731, -0.4739, -0.4775, -0.4834, -0.4918, -0.4994, -0.5057,
0:         -0.5059, -0.5062, -0.5047, -0.5035, -0.5007, -0.4960, -0.4837, -0.4828, -0.4858, -0.4886, -0.4906, -0.4895,
0:         -0.4886], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([26255, 972])
0:      first 25 pred values: tensor([-0.2718, -0.2882, -0.3090, -0.3309, -0.3546, -0.3740, -0.3912, -0.4048, -0.4192, -0.4346, -0.4547, -0.4787,
0:         -0.5066, -0.5343, -0.5607, -0.5888, -0.6186, -0.6475, -0.2817, -0.3009, -0.3209, -0.3415, -0.3596, -0.3732,
0:         -0.3858], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([26184, 972])
0:      first 25 pred values: tensor([-0.3797, -0.3759, -0.3718, -0.3664, -0.3623, -0.3596, -0.3590, -0.3607, -0.3624, -0.3630, -0.3623, -0.3604,
0:         -0.3571, -0.3558, -0.3556, -0.3549, -0.3576, -0.3600, -0.3866, -0.3820, -0.3805, -0.3763, -0.3742, -0.3700,
0:         -0.3686], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([26236, 972])
0:      first 25 pred values: tensor([-0.0066, -0.0023,  0.0051,  0.0170,  0.0140,  0.0056,  0.0178,  0.0208,  0.0192,  0.0254,  0.0210,  0.0263,
0:          0.0348,  0.0295,  0.0468,  0.0480,  0.0220,  0.0424,  0.0056,  0.0026,  0.0049,  0.0046,  0.0032,  0.0029,
0:          0.0172], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([11978, 2187])
0:      first 25 pred values: tensor([2.2436, 2.2324, 2.2183, 2.2055, 2.1954, 2.1920, 2.1992, 2.2134, 2.2249, 2.2242, 2.2097, 2.1857, 2.1598, 2.1296,
0:         2.0933, 2.0448, 1.9845, 1.9157, 1.8416, 1.7641, 1.6816, 1.6016, 1.5371, 1.5008, 1.4968], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([10668, 243])
0:      first 25 pred values: tensor([-0.2396, -0.2349, -0.2208, -0.2107, -0.2030, -0.1961, -0.1936, -0.1859, -0.1779, -0.2476, -0.2436, -0.2237,
0:         -0.2159, -0.2067, -0.1996, -0.1896, -0.1862, -0.1776, -0.2540, -0.2394, -0.2260, -0.2160, -0.1964, -0.1899,
0:         -0.1847], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([2302, 2187])
0:      first 25 pred values: tensor([-0.4637, -0.5280, -0.5121, -0.5101, -0.5201, -0.5493, -0.4827, -0.4858, -0.5534, -0.5434, -0.4778, -0.5719,
0:         -0.5487, -0.5399, -0.4963, -0.5164, -0.4956, -0.4373, -0.4940, -0.5132, -0.4877, -0.5459, -0.5009, -0.5307,
0:         -0.5096], device='cuda:0', grad_fn=<SliceBackward0>)
1: [DEBUG] TRAIN INPUT BATCH
1: Epoch 1, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([ 0.1349,  0.0402, -0.0223, -0.0121,  0.0093, -0.0939,  0.0049,  0.0621, -0.0755,  0.0650,  0.1117, -0.0157,
1:          0.0542,  0.0530,  0.0409, -0.0223,  0.0634, -0.0842,  0.0360, -0.0543,  0.0563, -0.0288, -0.0253, -0.0313,
1:         -0.1020], device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.4470, -0.4404, -0.4319, -0.4207, -0.4070, -0.3912, -0.3735, -0.3542, -0.3333, -0.3108, -0.2868, -0.2619,
1:         -0.2362, -0.2104, -0.1844, -0.1583, -0.1320, -0.1062, -0.3097, -0.3018, -0.2924, -0.2816, -0.2695, -0.2558,
1:         -0.2412], device='cuda:0')
1:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.7919, -0.7918, -0.7915, -0.7913, -0.7912, -0.7911, -0.7912, -0.7912, -0.7912, -0.7913, -0.7913, -0.7914,
1:         -0.7915, -0.7918, -0.7919, -0.7920, -0.7921, -0.7923, -0.7935, -0.7935, -0.7935, -0.7934, -0.7933, -0.7933,
1:         -0.7933], device='cuda:0')
1:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.0135, -0.0125, -0.0133, -0.0632, -0.1156, -0.2239, -0.0064, -0.1117,  0.0640, -0.0023, -0.0104,  0.2003,
1:          0.0727,  0.0644,  0.0892,  0.0374,  0.0339,  0.1924, -0.1088,  0.2818,  0.1173,  0.0235,  0.2678,  0.0362,
1:          0.1632], device='cuda:0')
1:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-0.0707, -0.0726, -0.0753, -0.0791, -0.0840, -0.0905, -0.0982, -0.1065, -0.1163, -0.1274, -0.1396, -0.1530,
1:         -0.1670, -0.1819, -0.1973, -0.2131, -0.2293, -0.2459, -0.2624, -0.2794, -0.2967, -0.3143, -0.3322, -0.3501,
1:         -0.3682], device='cuda:0')
1:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
1:      first 25 values: tensor([-0.2409, -0.2398, -0.2376, -0.2365, -0.2343, -0.2321, -0.2299, -0.2288, -0.2266, -0.2365, -0.2343, -0.2299,
1:         -0.2277, -0.2244, -0.2199, -0.2144, -0.2078, -0.2034, -0.2376, -0.2343, -0.2288, -0.2221, -0.2122, -0.2045,
1:         -0.1990], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-0.9792, -0.9846, -0.9981, -1.0100, -0.9974, -0.9814, -0.9714, -0.9542, -0.9354, -0.9392, -0.9413, -0.9464,
1:         -0.9600, -0.9731, -0.9658, -0.9587, -0.9528, -0.9436, -0.9318, -0.9620, -0.9896, -1.0140, -1.0412, -1.0669,
1:         -1.0771], device='cuda:0')
1: [DEBUG] TRAIN TARGET BATCH
1: Epoch 1, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2283, 2187])
1:     First 25 batch values:
1: tensor([-1.1945, -1.1809, -1.1671, -1.1473, -1.1240, -1.1124, -1.0979, -1.0822, -1.0586, -1.0314, -1.0379, -1.0447,
1:         -1.0509, -1.0775, -1.1047, -1.1241, -1.1444, -1.1551, -1.1584, -1.1577, -1.1474, -1.1329, -1.1212, -1.1079,
1:         -1.0935])
1: [DEBUG] TRAIN PREDICTIONS BATCH
1: Epoch 1, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([25523, 972])
1:      first 25 pred values: tensor([0.8955, 0.8864, 0.8809, 0.8770, 0.8748, 0.8737, 0.8691, 0.8658, 0.8637, 0.8639, 0.8677, 0.8752, 0.8789, 0.8828,
1:         0.8860, 0.8892, 0.8973, 0.9058, 0.8621, 0.8486, 0.8394, 0.8333, 0.8318, 0.8291, 0.8280], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([26457, 972])
1:      first 25 pred values: tensor([-1.0079, -0.9622, -0.9236, -0.8940, -0.8729, -0.8507, -0.8317, -0.8137, -0.7967, -0.7813, -0.7695, -0.7581,
1:         -0.7467, -0.7307, -0.7122, -0.6939, -0.6748, -0.6527, -0.9895, -0.9577, -0.9280, -0.9079, -0.8907, -0.8736,
1:         -0.8567], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([25564, 972])
1:      first 25 pred values: tensor([-0.7458, -0.7472, -0.7461, -0.7466, -0.7446, -0.7438, -0.7413, -0.7397, -0.7377, -0.7371, -0.7381, -0.7393,
1:         -0.7401, -0.7425, -0.7453, -0.7469, -0.7496, -0.7509, -0.7436, -0.7409, -0.7414, -0.7401, -0.7400, -0.7386,
1:         -0.7359], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([25582, 972])
1:      first 25 pred values: tensor([0.0896, 0.0782, 0.0664, 0.0548, 0.0417, 0.0373, 0.0415, 0.0529, 0.0462, 0.0241, 0.0243, 0.0368, 0.0421, 0.0412,
1:         0.0468, 0.0534, 0.0826, 0.1088, 0.0821, 0.0678, 0.0588, 0.0502, 0.0396, 0.0332, 0.0278], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([11765, 2187])
1:      first 25 pred values: tensor([0.4463, 0.4560, 0.4663, 0.4814, 0.4999, 0.5169, 0.5304, 0.5383, 0.5456, 0.5501, 0.5549, 0.5605, 0.5677, 0.5744,
1:         0.5804, 0.5823, 0.5816, 0.5776, 0.5733, 0.5724, 0.5738, 0.5762, 0.5762, 0.5720, 0.5636], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([10807, 243])
1:      first 25 pred values: tensor([-0.2433, -0.2425, -0.2460, -0.2418, -0.2367, -0.2324, -0.2348, -0.2340, -0.2297, -0.2443, -0.2484, -0.2437,
1:         -0.2441, -0.2405, -0.2391, -0.2351, -0.2353, -0.2338, -0.2454, -0.2459, -0.2436, -0.2446, -0.2395, -0.2391,
1:         -0.2374], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([2283, 2187])
1:      first 25 pred values: tensor([-0.8851, -0.9411, -0.9237, -0.9279, -0.8688, -0.9981, -1.0142, -1.0313, -0.9785, -0.9749, -0.9786, -0.8356,
1:         -0.9611, -0.9841, -1.0061, -0.8959, -0.9656, -0.9886, -0.8807, -1.1163, -0.9746, -0.9151, -0.9410, -0.9714,
1:         -0.9196], device='cuda:0', grad_fn=<SliceBackward0>)
0: epoch: 1 [1/5 (20%)]	Loss: 0.49255 : 0.12810 :: 0.07426 (1.14 s/sec)
0: epoch: 1 [2/5 (40%)]	Loss: 0.46412 : 0.10122 :: 0.07000 (8.03 s/sec)
0: > /work/ab1412/atmorep/pyenv/lib/python3.10/site-packages/torch/autograd/graph.py(825)_engine_run_backward()
0: -> return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
0: (Pdb) 
0: [1;34mwandb[0m:
0: [1;34mwandb[0m: You can sync this run to the cloud by running:
0: [1;34mwandb[0m: [1mwandb sync /work/ab1412/atmorep/wandb/offline-run-20250723_133032-phwx1akk[0m
0: [1;34mwandb[0m: Find logs at: [1;35mwandb/offline-run-20250723_133032-phwx1akk/logs[0m
0: l50133:2252469:2253037 [0] NCCL INFO [Service thread] Connection closed by localRank 0
0: l50133:2252469:2254563 [0] NCCL INFO comm 0x55555f0e8940 rank 0 nranks 2 cudaDev 0 busId 3000 - Abort COMPLETE
