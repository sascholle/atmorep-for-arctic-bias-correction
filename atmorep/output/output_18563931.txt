0: Wandb run: atmorep-53yf60kn-18563931
0: l50057:2464937:2464937 [0] NCCL INFO Bootstrap : Using ib0:10.128.11.144<0>
0: l50057:2464937:2464937 [0] NCCL INFO NET/Plugin: No plugin found (libnccl-net.so)
0: l50057:2464937:2464937 [0] NCCL INFO NET/Plugin: Plugin load returned 2 : libnccl-net.so: cannot open shared object file: No such file or directory : when loading libnccl-net.so
0: l50057:2464937:2464937 [0] NCCL INFO NET/Plugin: Using internal network plugin.
0: l50057:2464937:2464937 [0] NCCL INFO cudaDriverVersion 12060
0: NCCL version 2.21.5+cuda12.4
1: l50066:887214:887214 [0] NCCL INFO cudaDriverVersion 12060
1: l50066:887214:887214 [0] NCCL INFO Bootstrap : Using ib0:10.128.11.150<0>
1: l50066:887214:887214 [0] NCCL INFO NET/Plugin: No plugin found (libnccl-net.so)
1: l50066:887214:887214 [0] NCCL INFO NET/Plugin: Plugin load returned 2 : libnccl-net.so: cannot open shared object file: No such file or directory : when loading libnccl-net.so
1: l50066:887214:887214 [0] NCCL INFO NET/Plugin: Using internal network plugin.
1: l50066:887214:887468 [0] NCCL INFO NET/IB : Using [0]mlx5_0:1/IB [1]mlx5_1:1/IB [RO]; OOB ib0:10.128.11.150<0>
1: l50066:887214:887468 [0] NCCL INFO Using non-device net plugin version 0
1: l50066:887214:887468 [0] NCCL INFO Using network IB
1: l50066:887214:887468 [0] NCCL INFO DMA-BUF is available on GPU device 0
0: l50057:2464937:2465343 [0] NCCL INFO NET/IB : Using [0]mlx5_0:1/IB [1]mlx5_1:1/IB [RO]; OOB ib0:10.128.11.144<0>
0: l50057:2464937:2465343 [0] NCCL INFO Using non-device net plugin version 0
0: l50057:2464937:2465343 [0] NCCL INFO Using network IB
0: l50057:2464937:2465343 [0] NCCL INFO DMA-BUF is available on GPU device 0
1: l50066:887214:887468 [0] NCCL INFO ncclCommInitRank comm 0x55555ec9c1a0 rank 1 nranks 2 cudaDev 0 nvmlDev 0 busId 3000 commId 0x66fc0619dba0f926 - Init START
0: l50057:2464937:2465343 [0] NCCL INFO ncclCommInitRank comm 0x55555f0e6e90 rank 0 nranks 2 cudaDev 0 nvmlDev 0 busId 3000 commId 0x66fc0619dba0f926 - Init START
0: l50057:2464937:2465343 [0] NCCL INFO Setting affinity for GPU 0 to ffff0000,00000000,00000000,00000000,ffff0000,00000000
1: l50066:887214:887468 [0] NCCL INFO Setting affinity for GPU 0 to ffff0000,00000000,00000000,00000000,ffff0000,00000000
1: l50066:887214:887468 [0] NCCL INFO comm 0x55555ec9c1a0 rank 1 nRanks 2 nNodes 2 localRanks 1 localRank 0 MNNVL 0
1: l50066:887214:887468 [0] NCCL INFO Trees [0] -1/-1/-1->1->0 [1] -1/-1/-1->1->0 [2] 0/-1/-1->1->-1 [3] 0/-1/-1->1->-1
1: l50066:887214:887468 [0] NCCL INFO P2P Chunksize set to 131072
0: l50057:2464937:2465343 [0] NCCL INFO comm 0x55555f0e6e90 rank 0 nRanks 2 nNodes 2 localRanks 1 localRank 0 MNNVL 0
0: l50057:2464937:2465343 [0] NCCL INFO Channel 00/04 :    0   1
0: l50057:2464937:2465343 [0] NCCL INFO Channel 01/04 :    0   1
0: l50057:2464937:2465343 [0] NCCL INFO Channel 02/04 :    0   1
0: l50057:2464937:2465343 [0] NCCL INFO Channel 03/04 :    0   1
0: l50057:2464937:2465343 [0] NCCL INFO Trees [0] 1/-1/-1->0->-1 [1] 1/-1/-1->0->-1 [2] -1/-1/-1->0->1 [3] -1/-1/-1->0->1
0: l50057:2464937:2465343 [0] NCCL INFO P2P Chunksize set to 131072
0: l50057:2464937:2465343 [0] NCCL INFO Channel 00/0 : 1[0] -> 0[0] [receive] via NET/IB/0
0: l50057:2464937:2465343 [0] NCCL INFO Channel 01/0 : 1[0] -> 0[0] [receive] via NET/IB/1
0: l50057:2464937:2465343 [0] NCCL INFO Channel 02/0 : 1[0] -> 0[0] [receive] via NET/IB/0
0: l50057:2464937:2465343 [0] NCCL INFO Channel 03/0 : 1[0] -> 0[0] [receive] via NET/IB/1
1: l50066:887214:887468 [0] NCCL INFO Channel 00/0 : 0[0] -> 1[0] [receive] via NET/IB/0
0: l50057:2464937:2465343 [0] NCCL INFO Channel 00/0 : 0[0] -> 1[0] [send] via NET/IB/0
0: l50057:2464937:2465343 [0] NCCL INFO Channel 01/0 : 0[0] -> 1[0] [send] via NET/IB/1
1: l50066:887214:887468 [0] NCCL INFO Channel 01/0 : 0[0] -> 1[0] [receive] via NET/IB/1
0: l50057:2464937:2465343 [0] NCCL INFO Channel 02/0 : 0[0] -> 1[0] [send] via NET/IB/0
1: l50066:887214:887468 [0] NCCL INFO Channel 02/0 : 0[0] -> 1[0] [receive] via NET/IB/0
0: l50057:2464937:2465343 [0] NCCL INFO Channel 03/0 : 0[0] -> 1[0] [send] via NET/IB/1
1: l50066:887214:887468 [0] NCCL INFO Channel 03/0 : 0[0] -> 1[0] [receive] via NET/IB/1
1: l50066:887214:887468 [0] NCCL INFO Channel 00/0 : 1[0] -> 0[0] [send] via NET/IB/0
1: l50066:887214:887468 [0] NCCL INFO Channel 01/0 : 1[0] -> 0[0] [send] via NET/IB/1
1: l50066:887214:887468 [0] NCCL INFO Channel 02/0 : 1[0] -> 0[0] [send] via NET/IB/0
1: l50066:887214:887468 [0] NCCL INFO Channel 03/0 : 1[0] -> 0[0] [send] via NET/IB/1
0: l50057:2464937:2465346 [0] NCCL INFO NCCL_IB_TIMEOUT set by environment to 250.
0: l50057:2464937:2465346 [0] NCCL INFO NCCL_IB_RETRY_CNT set by environment to 50.
1: l50066:887214:887471 [0] NCCL INFO NCCL_IB_TIMEOUT set by environment to 250.
1: l50066:887214:887471 [0] NCCL INFO NCCL_IB_RETRY_CNT set by environment to 50.
0: l50057:2464937:2465343 [0] NCCL INFO Connected all rings
1: l50066:887214:887468 [0] NCCL INFO Connected all rings
0: l50057:2464937:2465343 [0] NCCL INFO Connected all trees
1: l50066:887214:887468 [0] NCCL INFO Connected all trees
1: l50066:887214:887468 [0] NCCL INFO threadThresholds 8/8/64 | 16/8/64 | 512 | 512
1: l50066:887214:887468 [0] NCCL INFO 4 coll channels, 4 collnet channels, 0 nvls channels, 4 p2p channels, 2 p2p channels per peer
0: l50057:2464937:2465343 [0] NCCL INFO threadThresholds 8/8/64 | 16/8/64 | 512 | 512
0: l50057:2464937:2465343 [0] NCCL INFO 4 coll channels, 4 collnet channels, 0 nvls channels, 4 p2p channels, 2 p2p channels per peer
1: l50066:887214:887468 [0] NCCL INFO TUNER/Plugin: Plugin load returned 11 : libnccl-net.so: cannot open shared object file: No such file or directory : when loading libnccl-tuner.so
1: l50066:887214:887468 [0] NCCL INFO TUNER/Plugin: Using internal tuner plugin.
1: l50066:887214:887468 [0] NCCL INFO ncclCommInitRank comm 0x55555ec9c1a0 rank 1 nranks 2 cudaDev 0 nvmlDev 0 busId 3000 commId 0x66fc0619dba0f926 - Init COMPLETE
0: l50057:2464937:2465343 [0] NCCL INFO TUNER/Plugin: Plugin load returned 11 : libnccl-net.so: cannot open shared object file: No such file or directory : when loading libnccl-tuner.so
0: l50057:2464937:2465343 [0] NCCL INFO TUNER/Plugin: Using internal tuner plugin.
0: l50057:2464937:2465343 [0] NCCL INFO ncclCommInitRank comm 0x55555f0e6e90 rank 0 nranks 2 cudaDev 0 nvmlDev 0 busId 3000 commId 0x66fc0619dba0f926 - Init COMPLETE
0: with_ddp : True
0: num_accs_per_task : 1
0: par_rank : 0
0: par_size : 2
0: fields : [['velocity_u', [1, 1024, ['velocity_v', 'temperature'], 0, ['j8dwr5qj', -2]], [96, 105, 114, 123, 137], [12, 3, 6], [3, 18, 18], [0.5, 0.9, 0.2, 0.05]], ['velocity_v', [1, 1024, ['velocity_u', 'temperature'], 0, ['0tlnm5up', -2]], [96, 105, 114, 123, 137], [12, 3, 6], [3, 18, 18], [0.5, 0.9, 0.2, 0.05]], ['specific_humidity', [1, 1024, ['velocity_u', 'velocity_v', 'temperature'], 0, ['v63l01zu', -2]], [96, 105, 114, 123, 137], [12, 3, 6], [3, 18, 18], [0.5, 0.9, 0.2, 0.05]], ['velocity_z', [1, 1024, ['velocity_u', 'velocity_v', 'temperature'], 0, ['9l1errbo', -2]], [96, 105, 114, 123, 137], [12, 3, 6], [3, 18, 18], [0.5, 0.9, 0.2, 0.05]], ['temperature', [1, 1024, ['velocity_u', 'velocity_v', 'specific_humidity'], 0, ['7ojls62c', -2]], [96, 105, 114, 123, 137], [12, 2, 4], [3, 27, 27], [0.5, 0.9, 0.2, 0.05], 'Local'], ['total_precip', [1, 1024, ['velocity_u', 'velocity_v', 'velocity_z', 'specific_humidity'], 0], [0], [12, 6, 12], [3, 9, 9], [0.25, 0.9, 0.1, 0.05]], ['t2m', [1, 1024, ['velocity_u', '
0: velocity_v', 'velocity_z', 'specific_humidity'], 0], [0], [12, 2, 4], [3, 27, 27], [0.5, 0.9, 0.2, 0.05], 'Local']]
0: fields_prediction : [['velocity_u', 0.125], ['velocity_v', 0.125], ['specific_humidity', 0.05], ['velocity_z', 0.01], ['temperature', 0.1], ['total_precip', 0.01], ['t2m', 0.58]]
0: fields_targets : []
0: years_train : [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]
0: years_val : [2021]
0: month : None
0: geo_range_sampling : [[0.0, 360.0], [0.0, 360.0]]
0: time_sampling : 1
0: torch_seed : 5521420987310380410
0: batch_size_validation : 1
0: batch_size : 96
0: num_epochs : 128
0: num_samples_per_epoch : 480
0: num_samples_validate : 128
0: num_loader_workers : 5
0: size_token_info : 8
0: size_token_info_net : 16
0: grad_checkpointing : True
0: with_cls : False
0: with_mixed_precision : True
0: with_layernorm : True
0: coupling_num_heads_per_field : 1
0: dropout_rate : 0.05
0: with_qk_lnorm : True
0: encoder_num_layers : 6
0: encoder_num_heads : 16
0: encoder_num_mlp_layers : 2
0: encoder_att_type : dense
0: decoder_num_layers : 6
0: decoder_num_heads : 16
0: decoder_num_mlp_layers : 2
0: decoder_self_att : False
0: decoder_cross_att_ratio : 0.5
0: decoder_cross_att_rate : 1.0
0: decoder_att_type : dense
0: net_tail_num_nets : 16
0: net_tail_num_layers : 0
0: losses : ['mse_ensemble', 'stats']
0: optimizer_zero : False
0: lr_start : 1e-05
0: lr_max : 2e-05
0: lr_min : 1e-05
0: weight_decay : 0.025
0: lr_decay_rate : 1.025
0: lr_start_epochs : 3
0: model_log_frequency : 256
0: BERT_strategy : BERT
0: forecast_num_tokens : 2
0: BERT_fields_synced : False
0: BERT_mr_max : 2
0: log_test_num_ranks : 0
0: save_grads : False
0: profile : False
0: test_initial : False
0: attention : False
0: rng_seed : None
0: with_wandb : True
0: slurm_job_id : 18563931
0: wandb_id : 53yf60kn
0: file_path : /work/ab1412/atmorep/data/era5_y2010_2020_res25_with_t2m.zarr
0: n_size : [36, 13.5, 27.0]
0: model_id : hjbmsjft
0: years_test : [2021]
1: Available keys in the Zarr dataset: ['data', 'data_sfc', 'lats', 'lons', 'time']
0: Available keys in the Zarr dataset: ['data', 'data_sfc', 'lats', 'lons', 'time']
0: self.ds['data'] : (105192, 7, 5, 721, 1440) :: (105192,)
0: self.lats : (721,)
0: self.lons : (1440,)
1: self.ds['data'] : (105192, 7, 5, 721, 1440) :: (105192,)
1: self.lats : (721,)
1: self.lons : (1440,)
0: Available keys in the Zarr dataset: ['data', 'data_sfc', 'lats', 'lons', 'time']
1: Available keys in the Zarr dataset: ['data', 'data_sfc', 'lats', 'lons', 'time']
1: self.ds['data'] : (105192, 7, 5, 721, 1440) :: (105192,)
1: self.lats : (721,)
1: self.lons : (1440,)
0: self.ds['data'] : (105192, 7, 5, 721, 1440) :: (105192,)
0: self.lats : (721,)
0: self.lons : (1440,)
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: Loaded model id = hjbmsjft.
1: Loaded model id = hjbmsjft.
1: Loaded run 'hjbmsjft' at epoch -2.
0: Loaded run 'hjbmsjft' at epoch -2.
1: -1 : 15:35:07 :: batch_size = 96, lr = 1e-05
0: Number of trainable parameters: 886,234,640
0: -1 : 15:35:07 :: batch_size = 96, lr = 1e-05
0: [DEBUG] TRAIN INPUT BATCH
0: Epoch -1, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1: [DEBUG] TRAIN INPUT BATCH
1: Epoch -1, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([ 0.0291,  0.0125, -0.0020,  0.0117, -0.0601,  0.0969,  0.2358, -0.0817, -0.1639, -0.0730, -0.0010, -0.0416,
1:         -0.1306, -0.0265, -0.0473, -0.0565,  0.1682,  0.0320,  0.0886,  0.1071,  0.1320,  0.0090, -0.1216, -0.0476,
1:          0.0831], device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([0.5505, 0.5421, 0.5480, 0.5594, 0.5664, 0.5662, 0.5634, 0.5619, 0.5643, 0.5726, 0.5886, 0.6107, 0.6341, 0.6559,
0:         0.6746, 0.6910, 0.7048, 0.7162, 0.4909, 0.4857, 0.4871, 0.4896, 0.4895, 0.4892, 0.4944], device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([0.5665, 0.5546, 0.5408, 0.5334, 0.5298, 0.5222, 0.5041, 0.4738, 0.4335, 0.3887, 0.3451, 0.3054, 0.2708, 0.2428,
1:         0.2203, 0.2017, 0.1858, 0.1732, 0.6231, 0.6026, 0.5727, 0.5406, 0.5109, 0.4842, 0.4575], device='cuda:0')
1:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
0:        device='cuda:0')
0:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.5436, -0.5399, -0.5356, -0.5332, -0.5324, -0.5342, -0.5384, -0.5428, -0.5446, -0.5427, -0.5369, -0.5308,
1:         -0.5265, -0.5242, -0.5111, -0.4990, -0.4860, -0.4722, -0.5539, -0.5502, -0.5464, -0.5475, -0.5478, -0.5465,
1:         -0.5476], device='cuda:0')
1:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.5436, -0.5399, -0.5356, -0.5332, -0.5324, -0.5342, -0.5384, -0.5428, -0.5446, -0.5427, -0.5369, -0.5308,
0:         -0.5265, -0.5242, -0.5111, -0.4990, -0.4860, -0.4722, -0.5539, -0.5502, -0.5464, -0.5475, -0.5478, -0.5465,
0:         -0.5476], device='cuda:0')
0:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.1823, -0.3547, -0.4144, -0.1712,  0.3086,  0.7443,  0.9588,  0.9897,  0.8792,  0.6381,  0.3860,  0.2644,
1:          0.2091,  0.0566, -0.1513, -0.2066, -0.0805,  0.0079, -0.0031,  0.0543,  0.1317,  0.1760,  0.2711,  0.4944,
1:          0.7664], device='cuda:0')
1:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([-0.1823, -0.3547, -0.4144, -0.1712,  0.3086,  0.7443,  0.9588,  0.9897,  0.8792,  0.6381,  0.3860,  0.2644,
0:          0.2091,  0.0566, -0.1513, -0.2066, -0.0805,  0.0079, -0.0031,  0.0543,  0.1317,  0.1760,  0.2711,  0.4944,
0:          0.7664], device='cuda:0')
1:      first 25 values: tensor([1.0465, 1.0601, 1.0742, 1.0923, 1.1186, 1.1508, 1.1805, 1.2022, 1.2155, 1.2235, 1.2291, 1.2330, 1.2320, 1.2248,
1:         1.2164, 1.2128, 1.2131, 1.2116, 1.2067, 1.2041, 1.2099, 1.2213, 1.2303, 1.2324, 1.2294], device='cuda:0')
1:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-0.2314, -0.2314, -0.2314, -0.2314, -0.2314, -0.2314, -0.2314, -0.2314, -0.2314, -0.2303, -0.2303, -0.2281,
1:         -0.2303, -0.2314, -0.2314, -0.2314, -0.2314, -0.2314, -0.2248, -0.2115, -0.1848, -0.2148, -0.2314, -0.2314,
1:         -0.2314], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([1.0465, 1.0601, 1.0742, 1.0923, 1.1186, 1.1508, 1.1805, 1.2022, 1.2155, 1.2235, 1.2291, 1.2330, 1.2320, 1.2248,
0:         1.2164, 1.2128, 1.2131, 1.2116, 1.2067, 1.2041, 1.2099, 1.2213, 1.2303, 1.2324, 1.2294], device='cuda:0')
0:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
1:      first 25 values: tensor([1.3227, 1.3014, 1.2753, 1.2120, 1.1494, 1.0676, 1.0134, 0.9669, 0.9298, 0.8819, 0.8111, 0.7492, 0.6818, 0.6119,
1:         0.5337, 0.4755, 0.4292, 0.3857, 0.3369, 0.2916, 0.2603, 0.2812, 0.3486, 0.4229, 0.4945], device='cuda:0')
0:      first 25 values: tensor([-0.2314, -0.2314, -0.2314, -0.2314, -0.2314, -0.2314, -0.2314, -0.2314, -0.2314, -0.2303, -0.2303, -0.2281,
0:         -0.2303, -0.2314, -0.2314, -0.2314, -0.2314, -0.2314, -0.2248, -0.2115, -0.1848, -0.2148, -0.2314, -0.2314,
0:         -0.2314], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
0:        device='cuda:0')
0: [DEBUG] TRAIN TARGET BATCH
0: Epoch -1, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2065, 2187])
1: [DEBUG] TRAIN TARGET BATCH
1: Epoch -1, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2466, 2187])
0:     First 25 batch values:
0: tensor([ 0.2795,  0.1501,  0.0204, -0.0981, -0.2007, -0.2801, -0.3977, -0.4766, -0.5254, -0.5926, -0.6646, -0.7358,
0:         -0.7952, -0.8315, -0.8256, -0.7604, -0.7157, -0.6811, -0.6765, -0.6771, -0.6784, -0.6771, -0.6780, -0.6926,
1:     First 25 batch values:
1: tensor([ 0.0183, -0.1043, -0.2344, -0.3672, -0.4973, -0.6362, -0.7103, -0.7809, -0.7793, -0.7567, -0.7309, -0.7819,
1:         -0.8183, -0.7962, -0.7555, -0.6904, -0.6548, -0.6207, -0.6084, -0.5969, -0.5900, -0.5765, -0.5632, -0.5538,
1:         -0.5316])
1: [DEBUG] TRAIN PREDICTIONS BATCH
0:         -0.7080])
1: Epoch -1, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([27314, 972])
0: [DEBUG] TRAIN PREDICTIONS BATCH
0: Epoch -1, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([26123, 972])
0:      first 25 pred values: tensor([0.8518, 0.8697, 0.8856, 0.8987, 0.9092, 0.9175, 0.9234, 0.9310, 0.9376, 0.9443, 0.9520, 0.9570, 0.9612, 0.9677,
0:         0.9741, 0.9814, 0.9852, 0.9850, 0.7710, 0.7823, 0.7931, 0.7998, 0.8029, 0.8047, 0.8047], device='cuda:0',
1:      first 25 pred values: tensor([0.8987, 0.9138, 0.9272, 0.9370, 0.9457, 0.9525, 0.9584, 0.9658, 0.9745, 0.9808, 0.9878, 0.9944, 1.0017, 1.0098,
1:         1.0173, 1.0238, 1.0248, 1.0207, 0.7811, 0.7925, 0.8052, 0.8135, 0.8200, 0.8255, 0.8334], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
0:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([26423, 972])
0:   └─ Predictions for 'velocity_v' shape: torch.Size([26127, 972])
1:      first 25 pred values: tensor([0.5231, 0.4810, 0.4335, 0.3874, 0.3507, 0.3231, 0.3099, 0.3101, 0.3213, 0.3368, 0.3554, 0.3687, 0.3719, 0.3640,
1:         0.3443, 0.3199, 0.2965, 0.2864, 0.5017, 0.4661, 0.4284, 0.3945, 0.3680, 0.3490, 0.3374], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([26595, 972])
0:      first 25 pred values: tensor([0.5699, 0.5081, 0.4510, 0.4016, 0.3572, 0.3221, 0.2935, 0.2735, 0.2623, 0.2571, 0.2540, 0.2505, 0.2456, 0.2391,
0:         0.2353, 0.2330, 0.2313, 0.2289, 0.5315, 0.4646, 0.4051, 0.3538, 0.3106, 0.2742, 0.2464], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([25743, 972])
1:      first 25 pred values: tensor([-0.6254, -0.6297, -0.6344, -0.6357, -0.6374, -0.6410, -0.6453, -0.6518, -0.6573, -0.6609, -0.6597, -0.6573,
1:         -0.6488, -0.6338, -0.6069, -0.5705, -0.5238, -0.4707, -0.6086, -0.6153, -0.6217, -0.6239, -0.6264, -0.6296,
1:         -0.6351], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([26408, 972])
0:      first 25 pred values: tensor([-0.5117, -0.4824, -0.4490, -0.4205, -0.4035, -0.4021, -0.4161, -0.4418, -0.4742, -0.5082, -0.5386, -0.5649,
0:         -0.5836, -0.5981, -0.6069, -0.6132, -0.6183, -0.6205, -0.5389, -0.5062, -0.4701, -0.4401, -0.4223, -0.4205,
0:         -0.4376], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([25687, 972])
1:      first 25 pred values: tensor([-0.3034, -0.0616,  0.1927,  0.4898,  0.7808,  0.8724,  0.8071,  0.6286,  0.2347, -0.5425, -1.5602, -2.0693,
1:         -1.5075, -0.7004, -0.4790, -0.2557,  0.3497,  0.9447, -0.5900, -0.2021, -0.1513, -0.1218,  0.3105,  0.7984,
1:          0.9092], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([11597, 2187])
0:      first 25 pred values: tensor([-0.2882, -0.2877, -0.3319, -0.3880, -0.4477, -0.4819, -0.4991, -0.5166, -0.5246, -0.5160, -0.4283, -0.3062,
0:         -0.2483, -0.2349, -0.1999, -0.1469, -0.0867, -0.0186, -0.3041, -0.3145, -0.3661, -0.4277, -0.4829, -0.5004,
0:         -0.5074], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([11592, 2187])
1:      first 25 pred values: tensor([-5.5465e-01, -5.4342e-01, -5.2629e-01, -5.0556e-01, -4.8599e-01, -4.6667e-01, -4.4776e-01, -4.2816e-01,
1:         -4.0641e-01, -3.8354e-01, -3.5936e-01, -3.3284e-01, -3.0333e-01, -2.7368e-01, -2.4435e-01, -2.2003e-01,
1:         -1.9927e-01, -1.8040e-01, -1.5979e-01, -1.3598e-01, -1.0926e-01, -8.2449e-02, -5.6045e-02, -2.9015e-02,
1:         -2.1260e-04], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([10548, 243])
0:      first 25 pred values: tensor([0.4762, 0.4849, 0.4934, 0.5040, 0.5185, 0.5333, 0.5480, 0.5571, 0.5603, 0.5594, 0.5572, 0.5569, 0.5608, 0.5697,
0:         0.5846, 0.6074, 0.6380, 0.6733, 0.7103, 0.7431, 0.7669, 0.7816, 0.7891, 0.7927, 0.7960], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([9704, 243])
1:      first 25 pred values: tensor([-0.2245, -0.2261, -0.2304, -0.2316, -0.2338, -0.2322, -0.2333, -0.2338, -0.2330, -0.2227, -0.2242, -0.2283,
1:         -0.2289, -0.2307, -0.2328, -0.2326, -0.2312, -0.2332, -0.2224, -0.2269, -0.2288, -0.2285, -0.2319, -0.2313,
1:         -0.2313], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([2466, 2187])
0:      first 25 pred values: tensor([-0.2227, -0.2244, -0.2244, -0.2240, -0.2240, -0.2230, -0.2262, -0.2258, -0.2285, -0.2255, -0.2244, -0.2258,
0:         -0.2260, -0.2257, -0.2258, -0.2283, -0.2266, -0.2286, -0.2288, -0.2277, -0.2293, -0.2286, -0.2270, -0.2279,
0:         -0.2281], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([2065, 2187])
1:      first 25 pred values: tensor([0.0587, 0.1334, 0.0798, 0.0951, 0.0321, 0.0948, 0.1176, 0.1305, 0.1285, 0.0710, 0.0820, 0.0996, 0.0177, 0.1072,
1:         0.0921, 0.0787, 0.1004, 0.0599, 0.1249, 0.1008, 0.0662, 0.0148, 0.1013, 0.0862, 0.0417], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
0:      first 25 pred values: tensor([-0.1369, -0.0216, -0.0482, -0.1108, -0.0988, -0.1013, -0.0806, -0.0683, -0.1038, -0.0775, -0.1247, -0.1306,
0:         -0.1106, -0.1074, -0.1099, -0.0909, -0.0853, -0.1193, -0.1326, -0.0711, -0.1199, -0.1079, -0.1544, -0.1022,
0:         -0.1007], device='cuda:0', grad_fn=<SliceBackward0>)
0: epoch: -1 [1/5 (20%)]	Loss: 0.47703 : 0.11516 :: 0.06807 (1.38 s/sec)
0: epoch: -1 [2/5 (40%)]	Loss: 0.53995 : 0.12221 :: 0.07142 (7.90 s/sec)
0: epoch: -1 [3/5 (60%)]	Loss: 0.55820 : 0.13878 :: 0.07294 (8.14 s/sec)
0: epoch: -1 [4/5 (80%)]	Loss: 0.54110 : 0.12349 :: 0.07159 (8.21 s/sec)
0: validation loss for strategy=BERT at epoch -1 : 0.13821357488632202
0: validation loss for velocity_u : 0.004504248965531588
0: validation loss for velocity_v : 0.006532458588480949
0: validation loss for specific_humidity : 0.006862924434244633
0: validation loss for velocity_z : 0.11625556647777557
0: validation loss for temperature : 0.01896555721759796
0: validation loss for total_precip : 0.3262040615081787
0: validation loss for t2m : 0.488170325756073
1: 0 : 15:41:44 :: batch_size = 96, lr = 1e-05
0: 0 : 15:41:54 :: batch_size = 96, lr = 1e-05
1: [DEBUG] TRAIN INPUT BATCH
1: Epoch 0, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.3155, -0.0978, -0.0051, -0.0036, -0.0420, -0.1097,  0.2161, -0.1452,  0.1604, -0.0801,  0.0705, -0.0228,
1:          0.0647,  0.0057,  0.1235,  0.0807, -0.0609, -0.0562, -0.0255, -0.0777,  0.0192, -0.0646,  0.0730,  0.1075,
1:         -0.2069], device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([0.8508, 0.9108, 0.9722, 1.0351, 1.0994, 1.1640, 1.2262, 1.2839, 1.3363, 1.3821, 1.4201, 1.4497, 1.4717, 1.4853,
1:         1.4905, 1.4886, 1.4809, 1.4679, 0.9102, 0.9758, 1.0418, 1.1072, 1.1705, 1.2302, 1.2847], device='cuda:0')
1:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.1264, -0.2376, -0.3383, -0.4082, -0.4681, -0.5048, -0.5265, -0.5288, -0.5313, -0.5288, -0.5267, -0.5245,
1:         -0.5221, -0.5194, -0.5171, -0.5144, -0.5136, -0.5140, -0.3235, -0.4137, -0.4672, -0.5065, -0.5242, -0.5340,
1:         -0.5350], device='cuda:0')
1:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-1.7449e-01, -8.5793e-02,  1.2117e-02,  1.2846e-01,  2.3789e-01,  3.2198e-01,  3.9109e-01,  4.6251e-01,
1:          5.2471e-01,  5.6042e-01,  5.7770e-01,  6.0073e-01,  6.3414e-01,  6.7676e-01,  7.3205e-01,  8.0116e-01,
1:          8.5761e-01,  8.7143e-01, -1.1574e-01,  5.9847e-04,  1.1579e-01,  2.4019e-01,  3.5999e-01,  4.4753e-01,
1:          4.9937e-01], device='cuda:0')
1:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-0.3177, -0.3589, -0.3977, -0.4333, -0.4657, -0.4959, -0.5247, -0.5529, -0.5810, -0.6093, -0.6382, -0.6680,
1:         -0.6985, -0.7297, -0.7620, -0.7955, -0.8299, -0.8658, -0.9039, -0.9447, -0.9887, -1.0365, -1.0893, -1.1467,
1:         -1.2081], device='cuda:0')
1:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
1:      first 25 values: tensor([-0.2493, -0.2493, -0.2493, -0.2493, -0.2493, -0.2493, -0.2493, -0.2493, -0.2493, -0.2493, -0.2493, -0.2493,
1:         -0.2493, -0.2493, -0.2481, -0.2456, -0.2456, -0.2481, -0.2493, -0.2493, -0.2493, -0.2493, -0.2481, -0.2468,
1:         -0.2456], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-1.8933, -1.8923, -1.9000, -1.8931, -1.8986, -1.8890, -1.8686, -1.8499, -1.8301, -1.8343, -1.8400, -1.8246,
1:         -1.7925, -1.7414, -1.7096, -1.6689, -1.6814, -1.7035, -1.7470, -1.7782, -1.8020, -1.8104, -1.8625, -1.8989,
1:         -1.9258], device='cuda:0')
1: [DEBUG] TRAIN TARGET BATCH
1: Epoch 0, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2466, 2187])
1:     First 25 batch values:
1: tensor([ 0.2757,  0.1945,  0.1335,  0.0921,  0.0839,  0.0564,  0.0229, -0.0017, -0.0234, -0.0539, -0.0930, -0.1556,
1:         -0.2189, -0.2682, -0.3013, -0.3270, -0.3340, -0.3532, -0.3343, -0.3019, -0.2516, -0.2089, -0.1796, -0.2001,
1:         -0.2166])
1: [DEBUG] TRAIN PREDICTIONS BATCH
1: Epoch 0, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([27314, 972])
1:      first 25 pred values: tensor([1.9964, 1.9706, 1.9352, 1.8991, 1.8533, 1.8027, 1.7498, 1.6963, 1.6439, 1.5918, 1.5402, 1.4942, 1.4535, 1.4225,
1:         1.3958, 1.3744, 1.3553, 1.3345, 1.9296, 1.8948, 1.8576, 1.8182, 1.7757, 1.7302, 1.6876], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([26423, 972])
1:      first 25 pred values: tensor([0.7865, 0.8043, 0.8167, 0.8236, 0.8264, 0.8266, 0.8242, 0.8188, 0.8077, 0.7928, 0.7747, 0.7527, 0.7290, 0.7049,
1:         0.6836, 0.6658, 0.6552, 0.6520, 0.8388, 0.8506, 0.8545, 0.8489, 0.8367, 0.8230, 0.8061], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([26595, 972])
1:      first 25 pred values: tensor([-0.5585, -0.5559, -0.5518, -0.5493, -0.5477, -0.5426, -0.5430, -0.5424, -0.5418, -0.5398, -0.5384, -0.5327,
1:         -0.5259, -0.5196, -0.5170, -0.5164, -0.5197, -0.5235, -0.5374, -0.5337, -0.5346, -0.5347, -0.5387, -0.5389,
1:         -0.5410], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([26408, 972])
1:      first 25 pred values: tensor([-0.0455, -0.0311, -0.0298, -0.0527, -0.0926, -0.1217, -0.1457, -0.1659, -0.1688, -0.1494, -0.0995, -0.0363,
1:          0.0380,  0.1250,  0.2105,  0.2814,  0.3468,  0.4042,  0.0177,  0.0299,  0.0303,  0.0198, -0.0052, -0.0213,
1:         -0.0329], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([11597, 2187])
1:      first 25 pred values: tensor([-0.6325, -0.6507, -0.6659, -0.6808, -0.6970, -0.7155, -0.7341, -0.7507, -0.7655, -0.7797, -0.7952, -0.8154,
1:         -0.8345, -0.8524, -0.8692, -0.8859, -0.9043, -0.9243, -0.9449, -0.9654, -0.9847, -1.0029, -1.0198, -1.0361,
1:         -1.0515], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([10548, 243])
1:      first 25 pred values: tensor([-0.2517, -0.2514, -0.2512, -0.2548, -0.2575, -0.2582, -0.2587, -0.2584, -0.2617, -0.2540, -0.2567, -0.2588,
1:         -0.2611, -0.2599, -0.2617, -0.2602, -0.2671, -0.2636, -0.2557, -0.2621, -0.2611, -0.2646, -0.2671, -0.2664,
1:         -0.2639], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([2466, 2187])
1:      first 25 pred values: tensor([-0.9856, -0.9816, -0.9588, -1.0241, -0.9742, -0.9621, -1.0081, -0.9682, -0.9842, -1.0002, -0.9625, -0.9759,
1:         -1.0635, -0.9823, -0.9924, -0.9719, -0.9769, -0.9779, -0.9592, -0.9429, -0.9864, -0.9994, -0.9639, -0.9837,
1:         -0.9791], device='cuda:0', grad_fn=<SliceBackward0>)
0: [DEBUG] TRAIN INPUT BATCH
0: Epoch 0, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([1.1701, 1.1677, 1.1573, 1.1407, 1.1218, 1.1017, 1.0789, 1.0522, 1.0215, 0.9883, 0.9561, 0.9290, 0.9108, 0.9022,
0:         0.9029, 0.9131, 0.9313, 0.9552, 1.1446, 1.1384, 1.1217, 1.0961, 1.0657, 1.0340, 1.0003], device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
0:        device='cuda:0')
0:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.2227, -0.1643, -0.1334, -0.1469, -0.1872, -0.2229, -0.2050, -0.1825, -0.0893, -0.0139,  0.0725,  0.1485,
0:          0.2147,  0.2824,  0.3617,  0.4264,  0.4919,  0.5226, -0.2767, -0.2213, -0.2017, -0.2058, -0.2130, -0.1669,
0:         -0.1148], device='cuda:0')
0:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([0.5767, 0.4952, 0.3761, 0.3254, 0.3365, 0.3894, 0.4202, 0.4026, 0.4533, 0.5018, 0.5194, 0.5591, 0.5922, 0.6186,
0:         0.5944, 0.5084, 0.4158, 0.3188, 0.7398, 0.5988, 0.4599, 0.3717, 0.2968, 0.3254, 0.3321], device='cuda:0')
0:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([-1.0490, -1.1951, -1.3578, -1.5081, -1.6282, -1.7134, -1.7797, -1.8403, -1.8834, -1.9112, -1.9448, -1.9942,
0:         -2.0582, -2.1319, -2.2037, -2.2668, -2.3142, -2.3300, -2.3179, -2.2967, -2.2707, -2.2434, -2.2234, -2.2128,
0:         -2.2171], device='cuda:0')
0:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([-0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2448, -0.2425, -0.2470, -0.2470, -0.2470,
0:         -0.2470, -0.2470, -0.2470, -0.2267, -0.1929, -0.1929, -0.2470, -0.2470, -0.2448, -0.2312, -0.2177, -0.1952,
0:         -0.2245], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
0:        device='cuda:0')
0: [DEBUG] TRAIN TARGET BATCH
0: Epoch 0, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2065, 2187])
0:     First 25 batch values:
0: tensor([0.3671, 0.4745, 0.5862, 0.7445, 0.7778, 0.7838, 0.7822, 0.7460, 0.6803, 0.6258, 0.4965, 0.4039, 0.2502, 0.2762,
0:         0.4304, 0.6967, 0.8753, 1.0034, 1.0638, 1.0867, 1.0993, 1.0702, 1.0840, 1.1957, 1.3166])
0: [DEBUG] TRAIN PREDICTIONS BATCH
0: Epoch 0, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([26123, 972])
0:      first 25 pred values: tensor([1.4962, 1.5186, 1.5317, 1.5440, 1.5503, 1.5452, 1.5291, 1.5013, 1.4589, 1.4036, 1.3423, 1.2783, 1.2181, 1.1646,
0:         1.1168, 1.0708, 1.0286, 0.9847, 1.4583, 1.4905, 1.5147, 1.5363, 1.5553, 1.5635, 1.5581], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([26127, 972])
0:      first 25 pred values: tensor([-1.4831, -1.5098, -1.5393, -1.5758, -1.6187, -1.6699, -1.7163, -1.7549, -1.7856, -1.8093, -1.8302, -1.8520,
0:         -1.8868, -1.9341, -1.9959, -2.0665, -2.1370, -2.1847, -1.3416, -1.3557, -1.3830, -1.4190, -1.4665, -1.5206,
0:         -1.5769], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([25743, 972])
0:      first 25 pred values: tensor([-0.6838, -0.7274, -0.7592, -0.7750, -0.7827, -0.7858, -0.7931, -0.8040, -0.8142, -0.8224, -0.8263, -0.8227,
0:         -0.8167, -0.8062, -0.7992, -0.7919, -0.7901, -0.7897, -0.6556, -0.6954, -0.7254, -0.7441, -0.7563, -0.7637,
0:         -0.7791], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([25687, 972])
0:      first 25 pred values: tensor([ 5.5017e-01,  2.6510e-01,  2.6189e-01,  8.1285e-02, -7.9767e-02, -1.4142e-01, -4.0565e-01, -4.9247e-01,
0:         -4.4297e-01, -5.6825e-01, -9.1410e-01, -1.7880e+00, -3.8794e+00, -7.4808e+00, -1.1320e+01, -1.3405e+01,
0:         -1.1895e+01, -7.5518e+00,  3.5109e-01,  1.1672e-02,  9.8956e-02,  1.0719e-01, -4.4978e-02, -1.9796e-01,
0:         -4.2233e-01], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([11592, 2187])
0:      first 25 pred values: tensor([-1.5246, -1.5163, -1.5028, -1.4860, -1.4683, -1.4521, -1.4371, -1.4241, -1.4163, -1.4147, -1.4183, -1.4306,
0:         -1.4417, -1.4473, -1.4420, -1.4274, -1.4084, -1.3924, -1.3832, -1.3797, -1.3783, -1.3738, -1.3670, -1.3621,
0:         -1.3625], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([9704, 243])
0:      first 25 pred values: tensor([-0.2640, -0.2654, -0.2636, -0.2623, -0.2617, -0.2608, -0.2608, -0.2577, -0.2632, -0.2675, -0.2667, -0.2673,
0:         -0.2669, -0.2626, -0.2655, -0.2599, -0.2691, -0.2611, -0.2668, -0.2715, -0.2692, -0.2679, -0.2651, -0.2667,
0:         -0.2615], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([2065, 2187])
0:      first 25 pred values: tensor([ 0.0442,  0.0962,  0.0522,  0.0382,  0.0234,  0.0377,  0.0479,  0.0722,  0.0832,  0.0734,  0.0496,  0.0559,
0:          0.0698,  0.0934,  0.0532,  0.0379,  0.0436,  0.0269,  0.0251,  0.1176,  0.0534,  0.0983, -0.0093,  0.0726,
0:          0.0606], device='cuda:0', grad_fn=<SliceBackward0>)
0: epoch: 0 [1/5 (20%)]	Loss: 0.54034 : 0.12528 :: 0.08218 (1.70 s/sec)
0: epoch: 0 [2/5 (40%)]	Loss: 0.51161 : 0.11734 :: 0.08325 (8.18 s/sec)
1: > /work/ab1412/atmorep/pyenv/lib/python3.10/site-packages/torch/autograd/graph.py(825)_engine_run_backward()
1: -> return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
1: (Pdb) 
1: l50066:887214:887471 [0] NCCL INFO [Service thread] Connection closed by localRank 0
1: l50066:887214:888580 [0] NCCL INFO comm 0x55555ec9c1a0 rank 1 nranks 2 cudaDev 0 busId 3000 - Abort COMPLETE
