0: Wandb run: atmorep-6fltd37b-18996197
0: l50139:3437821:3437821 [0] NCCL INFO Bootstrap : Using ib0:10.128.11.188<0>
0: l50139:3437821:3437821 [0] NCCL INFO NET/Plugin: No plugin found (libnccl-net.so)
0: l50139:3437821:3437821 [0] NCCL INFO NET/Plugin: Plugin load returned 2 : libnccl-net.so: cannot open shared object file: No such file or directory : when loading libnccl-net.so
0: l50139:3437821:3437821 [0] NCCL INFO NET/Plugin: Using internal network plugin.
0: l50139:3437821:3437821 [0] NCCL INFO cudaDriverVersion 12060
0: NCCL version 2.21.5+cuda12.4
1: l50142:2936730:2936730 [0] NCCL INFO cudaDriverVersion 12060
1: l50142:2936730:2936730 [0] NCCL INFO Bootstrap : Using ib0:10.128.11.190<0>
1: l50142:2936730:2936730 [0] NCCL INFO NET/Plugin: No plugin found (libnccl-net.so)
1: l50142:2936730:2936730 [0] NCCL INFO NET/Plugin: Plugin load returned 2 : libnccl-net.so: cannot open shared object file: No such file or directory : when loading libnccl-net.so
1: l50142:2936730:2936730 [0] NCCL INFO NET/Plugin: Using internal network plugin.
1: l50142:2936730:2936971 [0] NCCL INFO NET/IB : Using [0]mlx5_0:1/IB [1]mlx5_1:1/IB [RO]; OOB ib0:10.128.11.190<0>
1: l50142:2936730:2936971 [0] NCCL INFO Using non-device net plugin version 0
1: l50142:2936730:2936971 [0] NCCL INFO Using network IB
1: l50142:2936730:2936971 [0] NCCL INFO DMA-BUF is available on GPU device 0
0: l50139:3437821:3438334 [0] NCCL INFO NET/IB : Using [0]mlx5_0:1/IB [1]mlx5_1:1/IB [RO]; OOB ib0:10.128.11.188<0>
0: l50139:3437821:3438334 [0] NCCL INFO Using non-device net plugin version 0
0: l50139:3437821:3438334 [0] NCCL INFO Using network IB
0: l50139:3437821:3438334 [0] NCCL INFO DMA-BUF is available on GPU device 0
0: l50139:3437821:3438334 [0] NCCL INFO ncclCommInitRank comm 0x55555f0ec9e0 rank 0 nranks 2 cudaDev 0 nvmlDev 0 busId 3000 commId 0x431f8ed5c57526d5 - Init START
1: l50142:2936730:2936971 [0] NCCL INFO ncclCommInitRank comm 0x55555eca13e0 rank 1 nranks 2 cudaDev 0 nvmlDev 0 busId 3000 commId 0x431f8ed5c57526d5 - Init START
0: l50139:3437821:3438334 [0] NCCL INFO Setting affinity for GPU 0 to ffff0000,00000000,00000000,00000000,ffff0000,00000000
1: l50142:2936730:2936971 [0] NCCL INFO Setting affinity for GPU 0 to ffff0000,00000000,00000000,00000000,ffff0000,00000000
0: l50139:3437821:3438334 [0] NCCL INFO comm 0x55555f0ec9e0 rank 0 nRanks 2 nNodes 2 localRanks 1 localRank 0 MNNVL 0
0: l50139:3437821:3438334 [0] NCCL INFO Channel 00/04 :    0   1
0: l50139:3437821:3438334 [0] NCCL INFO Channel 01/04 :    0   1
0: l50139:3437821:3438334 [0] NCCL INFO Channel 02/04 :    0   1
0: l50139:3437821:3438334 [0] NCCL INFO Channel 03/04 :    0   1
0: l50139:3437821:3438334 [0] NCCL INFO Trees [0] 1/-1/-1->0->-1 [1] 1/-1/-1->0->-1 [2] -1/-1/-1->0->1 [3] -1/-1/-1->0->1
0: l50139:3437821:3438334 [0] NCCL INFO P2P Chunksize set to 131072
1: l50142:2936730:2936971 [0] NCCL INFO comm 0x55555eca13e0 rank 1 nRanks 2 nNodes 2 localRanks 1 localRank 0 MNNVL 0
1: l50142:2936730:2936971 [0] NCCL INFO Trees [0] -1/-1/-1->1->0 [1] -1/-1/-1->1->0 [2] 0/-1/-1->1->-1 [3] 0/-1/-1->1->-1
1: l50142:2936730:2936971 [0] NCCL INFO P2P Chunksize set to 131072
0: l50139:3437821:3438334 [0] NCCL INFO Channel 00/0 : 1[0] -> 0[0] [receive] via NET/IB/0
0: l50139:3437821:3438334 [0] NCCL INFO Channel 01/0 : 1[0] -> 0[0] [receive] via NET/IB/1
0: l50139:3437821:3438334 [0] NCCL INFO Channel 02/0 : 1[0] -> 0[0] [receive] via NET/IB/0
0: l50139:3437821:3438334 [0] NCCL INFO Channel 03/0 : 1[0] -> 0[0] [receive] via NET/IB/1
0: l50139:3437821:3438334 [0] NCCL INFO Channel 00/0 : 0[0] -> 1[0] [send] via NET/IB/0
0: l50139:3437821:3438334 [0] NCCL INFO Channel 01/0 : 0[0] -> 1[0] [send] via NET/IB/1
0: l50139:3437821:3438334 [0] NCCL INFO Channel 02/0 : 0[0] -> 1[0] [send] via NET/IB/0
0: l50139:3437821:3438334 [0] NCCL INFO Channel 03/0 : 0[0] -> 1[0] [send] via NET/IB/1
1: l50142:2936730:2936971 [0] NCCL INFO Channel 00/0 : 0[0] -> 1[0] [receive] via NET/IB/0
1: l50142:2936730:2936971 [0] NCCL INFO Channel 01/0 : 0[0] -> 1[0] [receive] via NET/IB/1
1: l50142:2936730:2936971 [0] NCCL INFO Channel 02/0 : 0[0] -> 1[0] [receive] via NET/IB/0
1: l50142:2936730:2936971 [0] NCCL INFO Channel 03/0 : 0[0] -> 1[0] [receive] via NET/IB/1
1: l50142:2936730:2936971 [0] NCCL INFO Channel 00/0 : 1[0] -> 0[0] [send] via NET/IB/0
1: l50142:2936730:2936971 [0] NCCL INFO Channel 01/0 : 1[0] -> 0[0] [send] via NET/IB/1
1: l50142:2936730:2936971 [0] NCCL INFO Channel 02/0 : 1[0] -> 0[0] [send] via NET/IB/0
1: l50142:2936730:2936971 [0] NCCL INFO Channel 03/0 : 1[0] -> 0[0] [send] via NET/IB/1
1: l50142:2936730:2936975 [0] NCCL INFO NCCL_IB_TIMEOUT set by environment to 250.
1: l50142:2936730:2936975 [0] NCCL INFO NCCL_IB_RETRY_CNT set by environment to 50.
0: l50139:3437821:3438337 [0] NCCL INFO NCCL_IB_TIMEOUT set by environment to 250.
0: l50139:3437821:3438337 [0] NCCL INFO NCCL_IB_RETRY_CNT set by environment to 50.
0: l50139:3437821:3438334 [0] NCCL INFO Connected all rings
0: l50139:3437821:3438334 [0] NCCL INFO Connected all trees
1: l50142:2936730:2936971 [0] NCCL INFO Connected all rings
1: l50142:2936730:2936971 [0] NCCL INFO Connected all trees
1: l50142:2936730:2936971 [0] NCCL INFO threadThresholds 8/8/64 | 16/8/64 | 512 | 512
1: l50142:2936730:2936971 [0] NCCL INFO 4 coll channels, 4 collnet channels, 0 nvls channels, 4 p2p channels, 2 p2p channels per peer
0: l50139:3437821:3438334 [0] NCCL INFO threadThresholds 8/8/64 | 16/8/64 | 512 | 512
0: l50139:3437821:3438334 [0] NCCL INFO 4 coll channels, 4 collnet channels, 0 nvls channels, 4 p2p channels, 2 p2p channels per peer
0: l50139:3437821:3438334 [0] NCCL INFO TUNER/Plugin: Plugin load returned 11 : libnccl-net.so: cannot open shared object file: No such file or directory : when loading libnccl-tuner.so
0: l50139:3437821:3438334 [0] NCCL INFO TUNER/Plugin: Using internal tuner plugin.
0: l50139:3437821:3438334 [0] NCCL INFO ncclCommInitRank comm 0x55555f0ec9e0 rank 0 nranks 2 cudaDev 0 nvmlDev 0 busId 3000 commId 0x431f8ed5c57526d5 - Init COMPLETE
1: l50142:2936730:2936971 [0] NCCL INFO TUNER/Plugin: Plugin load returned 11 : libnccl-net.so: cannot open shared object file: No such file or directory : when loading libnccl-tuner.so
1: l50142:2936730:2936971 [0] NCCL INFO TUNER/Plugin: Using internal tuner plugin.
1: l50142:2936730:2936971 [0] NCCL INFO ncclCommInitRank comm 0x55555eca13e0 rank 1 nranks 2 cudaDev 0 nvmlDev 0 busId 3000 commId 0x431f8ed5c57526d5 - Init COMPLETE
0: with_ddp : True
0: num_accs_per_task : 1
0: par_rank : 0
0: par_size : 2
0: fields : [['velocity_u', [1, 1024, ['velocity_v', 'temperature'], 0, ['j8dwr5qj', -2]], [96, 105, 114, 123, 137], [12, 3, 6], [3, 18, 18], [0.5, 0.9, 0.2, 0.05]], ['velocity_v', [1, 1024, ['velocity_u', 'temperature'], 1, ['0tlnm5up', -2]], [96, 105, 114, 123, 137], [12, 3, 6], [3, 18, 18], [0.5, 0.9, 0.2, 0.05]], ['specific_humidity', [1, 1024, ['velocity_u', 'velocity_v', 'temperature'], 2, ['v63l01zu', -2]], [96, 105, 114, 123, 137], [12, 3, 6], [3, 18, 18], [0.5, 0.9, 0.2, 0.05]], ['velocity_z', [1, 1024, ['velocity_u', 'velocity_v', 'temperature'], 3, ['9l1errbo', -2]], [96, 105, 114, 123, 137], [12, 3, 6], [3, 18, 18], [0.5, 0.9, 0.2, 0.05]], ['temperature', [1, 1024, ['velocity_u', 'velocity_v', 'specific_humidity'], 3, ['7ojls62c', -2]], [96, 105, 114, 123, 137], [12, 2, 4], [3, 27, 27], [0.5, 0.9, 0.2, 0.05], 'Local'], ['total_precip', [1, 1024, ['velocity_u', 'velocity_v', 'velocity_z', 'specific_humidity'], 0], [0], [12, 6, 12], [3, 9, 9], [0.25, 0.9, 0.1, 0.05]], ['t2m', [1, 1024, ['velocity_u', '
0: velocity_v', 'velocity_z', 'specific_humidity'], 1], [0], [12, 2, 4], [3, 27, 27], [0.5, 0.9, 0.2, 0.05], 'Local'], ['corrected_t2m', [1, 1024, ['velocity_u', 'velocity_v', 'velocity_z', 'specific_humidity'], 2], [0], [12, 2, 4], [3, 27, 27], [0.5, 0.9, 0.2, 0.05], 'Local']]
0: fields_prediction : [['velocity_u', 0.125], ['velocity_v', 0.125], ['specific_humidity', 0.05], ['velocity_z', 0.01], ['temperature', 0.1], ['total_precip', 0.01], ['t2m', 0.2], ['corrected_t2m', 0.38]]
0: fields_targets : []
0: years_train : [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]
0: years_val : [2021]
0: month : None
0: geo_range_sampling : [[83.0, 90.0], [0.0, 360.0]]
0: time_sampling : 1
0: torch_seed : 5521420987310380410
0: batch_size_validation : 1
0: batch_size : 64
0: num_epochs : 128
0: num_samples_per_epoch : 480
0: num_samples_validate : 128
0: num_loader_workers : 5
0: size_token_info : 8
0: size_token_info_net : 16
0: grad_checkpointing : True
0: with_cls : False
0: with_mixed_precision : True
0: with_layernorm : True
0: coupling_num_heads_per_field : 1
0: dropout_rate : 0.05
0: with_qk_lnorm : True
0: encoder_num_layers : 6
0: encoder_num_heads : 16
0: encoder_num_mlp_layers : 2
0: encoder_att_type : dense
0: decoder_num_layers : 6
0: decoder_num_heads : 16
0: decoder_num_mlp_layers : 2
0: decoder_self_att : False
0: decoder_cross_att_ratio : 0.5
0: decoder_cross_att_rate : 1.0
0: decoder_att_type : dense
0: net_tail_num_nets : 16
0: net_tail_num_layers : 0
0: losses : ['mse_ensemble', 'stats']
0: optimizer_zero : False
0: lr_start : 1e-05
0: lr_max : 2e-05
0: lr_min : 1e-05
0: weight_decay : 0.025
0: lr_decay_rate : 1.025
0: lr_start_epochs : 3
0: model_log_frequency : 256
0: BERT_strategy : BERT
0: forecast_num_tokens : 2
0: BERT_fields_synced : False
0: BERT_mr_max : 2
0: log_test_num_ranks : 0
0: save_grads : False
0: profile : False
0: test_initial : False
0: attention : False
0: rng_seed : None
0: with_wandb : True
0: slurm_job_id : 18996197
0: wandb_id : 6fltd37b
0: file_path : /scratch/a/a270277/atmorep/era5_y2010_2020_res25_corrected_t2m.zarr
0: n_size : [36, 13.5, 27.0]
0: model_id : b9h8xdoz
0: years_test : [2021]
1: Available keys in the Zarr dataset: ['data', 'data_sfc', 'lats', 'lons', 'time']
0: Available keys in the Zarr dataset: ['data', 'data_sfc', 'lats', 'lons', 'time']
1: self.ds['data'] : (105192, 7, 5, 721, 1440) :: (105192,)
1: self.lats : (721,)
1: self.lons : (1440,)
0: self.ds['data'] : (105192, 7, 5, 721, 1440) :: (105192,)
0: self.lats : (721,)
0: self.lons : (1440,)
1: Available keys in the Zarr dataset: ['data', 'data_sfc', 'lats', 'lons', 'time']
0: Available keys in the Zarr dataset: ['data', 'data_sfc', 'lats', 'lons', 'time']
1: self.ds['data'] : (105192, 7, 5, 721, 1440) :: (105192,)
1: self.lats : (721,)
1: self.lons : (1440,)
0: self.ds['data'] : (105192, 7, 5, 721, 1440) :: (105192,)
0: self.lats : (721,)
0: self.lons : (1440,)
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 1
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 2
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 3
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 1
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 3
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 1
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 2
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 2
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 3
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 3
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 1
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 2
0: Loaded AtmoRep: ignoring 208 elements: ['embeds_token_info.7.weight', 'embeds_token_info.7.bias', 'embeds.7.weight', 'embeds.7.bias', 'encoders.7.embed.weight', 'encoders.7.embed.bias', 'encoders.7.heads.0.proj_out.weight', 'encoders.7.heads.0.proj_heads.weight', 'encoders.7.heads.0.proj_heads_other.0.weight', 'encoders.7.heads.0.proj_heads_other.1.weight', 'encoders.7.heads.0.proj_heads_other.2.weight', 'encoders.7.heads.0.proj_heads_other.3.weight', 'encoders.7.heads.0.proj_heads_other.4.weight', 'encoders.7.heads.1.proj_out.weight', 'encoders.7.heads.1.proj_heads.weight', 'encoders.7.heads.1.proj_heads_other.0.weight', 'encoders.7.heads.1.proj_heads_other.1.weight', 'encoders.7.heads.1.proj_heads_other.2.weight', 'encoders.7.heads.1.proj_heads_other.3.weight', 'encoders.7.heads.1.proj_heads_other.4.weight', 'encoders.7.heads.2.proj_out.weight', 'encoders.7.heads.2.proj_heads.weight', 'encoders.7.heads.2.proj_heads_other.0.weight', 'encoders.7.heads.2.proj_heads_other.1.weight', 'encoders.7.heads.2.proj_hea
0: ds_other.2.weight', 'encoders.7.heads.2.proj_heads_other.3.weight', 'encoders.7.heads.2.proj_heads_other.4.weight', 'encoders.7.heads.3.proj_out.weight', 'encoders.7.heads.3.proj_heads.weight', 'encoders.7.heads.3.proj_heads_other.0.weight', 'encoders.7.heads.3.proj_heads_other.1.weight', 'encoders.7.heads.3.proj_heads_other.2.weight', 'encoders.7.heads.3.proj_heads_other.3.weight', 'encoders.7.heads.3.proj_heads_other.4.weight', 'encoders.7.heads.4.proj_out.weight', 'encoders.7.heads.4.proj_heads.weight', 'encoders.7.heads.4.proj_heads_other.0.weight', 'encoders.7.heads.4.proj_heads_other.1.weight', 'encoders.7.heads.4.proj_heads_other.2.weight', 'encoders.7.heads.4.proj_heads_other.3.weight', 'encoders.7.heads.4.proj_heads_other.4.weight', 'encoders.7.heads.5.proj_out.weight', 'encoders.7.heads.5.proj_heads.weight', 'encoders.7.heads.5.proj_heads_other.0.weight', 'encoders.7.heads.5.proj_heads_other.1.weight', 'encoders.7.heads.5.proj_heads_other.2.weight', 'encoders.7.heads.5.proj_heads_other.3.weight', 'e
0: ncoders.7.heads.5.proj_heads_other.4.weight', 'encoders.7.mlps.0.blocks.0.weight', 'encoders.7.mlps.0.blocks.0.bias', 'encoders.7.mlps.0.blocks.3.weight', 'encoders.7.mlps.0.blocks.3.bias', 'encoders.7.mlps.1.blocks.0.weight', 'encoders.7.mlps.1.blocks.0.bias', 'encoders.7.mlps.1.blocks.3.weight', 'encoders.7.mlps.1.blocks.3.bias', 'encoders.7.mlps.2.blocks.0.weight', 'encoders.7.mlps.2.blocks.0.bias', 'encoders.7.mlps.2.blocks.3.weight', 'encoders.7.mlps.2.blocks.3.bias', 'encoders.7.mlps.3.blocks.0.weight', 'encoders.7.mlps.3.blocks.0.bias', 'encoders.7.mlps.3.blocks.3.weight', 'encoders.7.mlps.3.blocks.3.bias', 'encoders.7.mlps.4.blocks.0.weight', 'encoders.7.mlps.4.blocks.0.bias', 'encoders.7.mlps.4.blocks.3.weight', 'encoders.7.mlps.4.blocks.3.bias', 'encoders.7.mlps.5.blocks.0.weight', 'encoders.7.mlps.5.blocks.0.bias', 'encoders.7.mlps.5.blocks.3.weight', 'encoders.7.mlps.5.blocks.3.bias', 'decoders.7.blocks.0.proj_heads.weight', 'decoders.7.blocks.0.proj_heads_o_q.weight', 'decoders.7.blocks.0.proj_he
0: ads_o_kv.weight', 'decoders.7.blocks.0.ln_q.weight', 'decoders.7.blocks.0.ln_q.bias', 'decoders.7.blocks.0.ln_k.weight', 'decoders.7.blocks.0.ln_k.bias', 'decoders.7.blocks.0.proj_out.weight', 'decoders.7.blocks.1.blocks.0.weight', 'decoders.7.blocks.1.blocks.0.bias', 'decoders.7.blocks.1.blocks.3.weight', 'decoders.7.blocks.1.blocks.3.bias', 'decoders.7.blocks.2.proj_heads.weight', 'decoders.7.blocks.2.proj_heads_o_q.weight', 'decoders.7.blocks.2.proj_heads_o_kv.weight', 'decoders.7.blocks.2.ln_q.weight', 'decoders.7.blocks.2.ln_q.bias', 'decoders.7.blocks.2.ln_k.weight', 'decoders.7.blocks.2.ln_k.bias', 'decoders.7.blocks.2.proj_out.weight', 'decoders.7.blocks.3.blocks.0.weight', 'decoders.7.blocks.3.blocks.0.bias', 'decoders.7.blocks.3.blocks.3.weight', 'decoders.7.blocks.3.blocks.3.bias', 'decoders.7.blocks.4.proj_heads.weight', 'decoders.7.blocks.4.proj_heads_o_q.weight', 'decoders.7.blocks.4.proj_heads_o_kv.weight', 'decoders.7.blocks.4.ln_q.weight', 'decoders.7.blocks.4.ln_q.bias', 'decoders.7.blocks.4
0: .ln_k.weight', 'decoders.7.blocks.4.ln_k.bias', 'decoders.7.blocks.4.proj_out.weight', 'decoders.7.blocks.5.blocks.0.weight', 'decoders.7.blocks.5.blocks.0.bias', 'decoders.7.blocks.5.blocks.3.weight', 'decoders.7.blocks.5.blocks.3.bias', 'decoders.7.blocks.6.proj_heads.weight', 'decoders.7.blocks.6.proj_heads_o_q.weight', 'decoders.7.blocks.6.proj_heads_o_kv.weight', 'decoders.7.blocks.6.ln_q.weight', 'decoders.7.blocks.6.ln_q.bias', 'decoders.7.blocks.6.ln_k.weight', 'decoders.7.blocks.6.ln_k.bias', 'decoders.7.blocks.6.proj_out.weight', 'decoders.7.blocks.7.blocks.0.weight', 'decoders.7.blocks.7.blocks.0.bias', 'decoders.7.blocks.7.blocks.3.weight', 'decoders.7.blocks.7.blocks.3.bias', 'decoders.7.blocks.8.proj_heads.weight', 'decoders.7.blocks.8.proj_heads_o_q.weight', 'decoders.7.blocks.8.proj_heads_o_kv.weight', 'decoders.7.blocks.8.ln_q.weight', 'decoders.7.blocks.8.ln_q.bias', 'decoders.7.blocks.8.ln_k.weight', 'decoders.7.blocks.8.ln_k.bias', 'decoders.7.blocks.8.proj_out.weight', 'decoders.7.blocks.
0: 9.blocks.0.weight', 'decoders.7.blocks.9.blocks.0.bias', 'decoders.7.blocks.9.blocks.3.weight', 'decoders.7.blocks.9.blocks.3.bias', 'decoders.7.blocks.10.proj_heads.weight', 'decoders.7.blocks.10.proj_heads_o_q.weight', 'decoders.7.blocks.10.proj_heads_o_kv.weight', 'decoders.7.blocks.10.ln_q.weight', 'decoders.7.blocks.10.ln_q.bias', 'decoders.7.blocks.10.ln_k.weight', 'decoders.7.blocks.10.ln_k.bias', 'decoders.7.blocks.10.proj_out.weight', 'decoders.7.blocks.11.blocks.0.weight', 'decoders.7.blocks.11.blocks.0.bias', 'decoders.7.blocks.11.blocks.3.weight', 'decoders.7.blocks.11.blocks.3.bias', 'tails.7.tail_nets.0.0.weight', 'tails.7.tail_nets.0.0.bias', 'tails.7.tail_nets.0.1.weight', 'tails.7.tail_nets.0.1.bias', 'tails.7.tail_nets.1.0.weight', 'tails.7.tail_nets.1.0.bias', 'tails.7.tail_nets.1.1.weight', 'tails.7.tail_nets.1.1.bias', 'tails.7.tail_nets.2.0.weight', 'tails.7.tail_nets.2.0.bias', 'tails.7.tail_nets.2.1.weight', 'tails.7.tail_nets.2.1.bias', 'tails.7.tail_nets.3.0.weight', 'tails.7.tail_ne
0: ts.3.0.bias', 'tails.7.tail_nets.3.1.weight', 'tails.7.tail_nets.3.1.bias', 'tails.7.tail_nets.4.0.weight', 'tails.7.tail_nets.4.0.bias', 'tails.7.tail_nets.4.1.weight', 'tails.7.tail_nets.4.1.bias', 'tails.7.tail_nets.5.0.weight', 'tails.7.tail_nets.5.0.bias', 'tails.7.tail_nets.5.1.weight', 'tails.7.tail_nets.5.1.bias', 'tails.7.tail_nets.6.0.weight', 'tails.7.tail_nets.6.0.bias', 'tails.7.tail_nets.6.1.weight', 'tails.7.tail_nets.6.1.bias', 'tails.7.tail_nets.7.0.weight', 'tails.7.tail_nets.7.0.bias', 'tails.7.tail_nets.7.1.weight', 'tails.7.tail_nets.7.1.bias', 'tails.7.tail_nets.8.0.weight', 'tails.7.tail_nets.8.0.bias', 'tails.7.tail_nets.8.1.weight', 'tails.7.tail_nets.8.1.bias', 'tails.7.tail_nets.9.0.weight', 'tails.7.tail_nets.9.0.bias', 'tails.7.tail_nets.9.1.weight', 'tails.7.tail_nets.9.1.bias', 'tails.7.tail_nets.10.0.weight', 'tails.7.tail_nets.10.0.bias', 'tails.7.tail_nets.10.1.weight', 'tails.7.tail_nets.10.1.bias', 'tails.7.tail_nets.11.0.weight', 'tails.7.tail_nets.11.0.bias', 'tails.7.tai
0: l_nets.11.1.weight', 'tails.7.tail_nets.11.1.bias', 'tails.7.tail_nets.12.0.weight', 'tails.7.tail_nets.12.0.bias', 'tails.7.tail_nets.12.1.weight', 'tails.7.tail_nets.12.1.bias', 'tails.7.tail_nets.13.0.weight', 'tails.7.tail_nets.13.0.bias', 'tails.7.tail_nets.13.1.weight', 'tails.7.tail_nets.13.1.bias', 'tails.7.tail_nets.14.0.weight', 'tails.7.tail_nets.14.0.bias', 'tails.7.tail_nets.14.1.weight', 'tails.7.tail_nets.14.1.bias', 'tails.7.tail_nets.15.0.weight', 'tails.7.tail_nets.15.0.bias', 'tails.7.tail_nets.15.1.weight', 'tails.7.tail_nets.15.1.bias']
1: Loaded AtmoRep: ignoring 208 elements: ['embeds_token_info.7.weight', 'embeds_token_info.7.bias', 'embeds.7.weight', 'embeds.7.bias', 'encoders.7.embed.weight', 'encoders.7.embed.bias', 'encoders.7.heads.0.proj_out.weight', 'encoders.7.heads.0.proj_heads.weight', 'encoders.7.heads.0.proj_heads_other.0.weight', 'encoders.7.heads.0.proj_heads_other.1.weight', 'encoders.7.heads.0.proj_heads_other.2.weight', 'encoders.7.heads.0.proj_heads_other.3.weight', 'encoders.7.heads.0.proj_heads_other.4.weight', 'encoders.7.heads.1.proj_out.weight', 'encoders.7.heads.1.proj_heads.weight', 'encoders.7.heads.1.proj_heads_other.0.weight', 'encoders.7.heads.1.proj_heads_other.1.weight', 'encoders.7.heads.1.proj_heads_other.2.weight', 'encoders.7.heads.1.proj_heads_other.3.weight', 'encoders.7.heads.1.proj_heads_other.4.weight', 'encoders.7.heads.2.proj_out.weight', 'encoders.7.heads.2.proj_heads.weight', 'encoders.7.heads.2.proj_heads_other.0.weight', 'encoders.7.heads.2.proj_heads_other.1.weight', 'encoders.7.heads.2.proj_hea
1: ds_other.2.weight', 'encoders.7.heads.2.proj_heads_other.3.weight', 'encoders.7.heads.2.proj_heads_other.4.weight', 'encoders.7.heads.3.proj_out.weight', 'encoders.7.heads.3.proj_heads.weight', 'encoders.7.heads.3.proj_heads_other.0.weight', 'encoders.7.heads.3.proj_heads_other.1.weight', 'encoders.7.heads.3.proj_heads_other.2.weight', 'encoders.7.heads.3.proj_heads_other.3.weight', 'encoders.7.heads.3.proj_heads_other.4.weight', 'encoders.7.heads.4.proj_out.weight', 'encoders.7.heads.4.proj_heads.weight', 'encoders.7.heads.4.proj_heads_other.0.weight', 'encoders.7.heads.4.proj_heads_other.1.weight', 'encoders.7.heads.4.proj_heads_other.2.weight', 'encoders.7.heads.4.proj_heads_other.3.weight', 'encoders.7.heads.4.proj_heads_other.4.weight', 'encoders.7.heads.5.proj_out.weight', 'encoders.7.heads.5.proj_heads.weight', 'encoders.7.heads.5.proj_heads_other.0.weight', 'encoders.7.heads.5.proj_heads_other.1.weight', 'encoders.7.heads.5.proj_heads_other.2.weight', 'encoders.7.heads.5.proj_heads_other.3.weight', 'e
1: ncoders.7.heads.5.proj_heads_other.4.weight', 'encoders.7.mlps.0.blocks.0.weight', 'encoders.7.mlps.0.blocks.0.bias', 'encoders.7.mlps.0.blocks.3.weight', 'encoders.7.mlps.0.blocks.3.bias', 'encoders.7.mlps.1.blocks.0.weight', 'encoders.7.mlps.1.blocks.0.bias', 'encoders.7.mlps.1.blocks.3.weight', 'encoders.7.mlps.1.blocks.3.bias', 'encoders.7.mlps.2.blocks.0.weight', 'encoders.7.mlps.2.blocks.0.bias', 'encoders.7.mlps.2.blocks.3.weight', 'encoders.7.mlps.2.blocks.3.bias', 'encoders.7.mlps.3.blocks.0.weight', 'encoders.7.mlps.3.blocks.0.bias', 'encoders.7.mlps.3.blocks.3.weight', 'encoders.7.mlps.3.blocks.3.bias', 'encoders.7.mlps.4.blocks.0.weight', 'encoders.7.mlps.4.blocks.0.bias', 'encoders.7.mlps.4.blocks.3.weight', 'encoders.7.mlps.4.blocks.3.bias', 'encoders.7.mlps.5.blocks.0.weight', 'encoders.7.mlps.5.blocks.0.bias', 'encoders.7.mlps.5.blocks.3.weight', 'encoders.7.mlps.5.blocks.3.bias', 'decoders.7.blocks.0.proj_heads.weight', 'decoders.7.blocks.0.proj_heads_o_q.weight', 'decoders.7.blocks.0.proj_he
1: ads_o_kv.weight', 'decoders.7.blocks.0.ln_q.weight', 'decoders.7.blocks.0.ln_q.bias', 'decoders.7.blocks.0.ln_k.weight', 'decoders.7.blocks.0.ln_k.bias', 'decoders.7.blocks.0.proj_out.weight', 'decoders.7.blocks.1.blocks.0.weight', 'decoders.7.blocks.1.blocks.0.bias', 'decoders.7.blocks.1.blocks.3.weight', 'decoders.7.blocks.1.blocks.3.bias', 'decoders.7.blocks.2.proj_heads.weight', 'decoders.7.blocks.2.proj_heads_o_q.weight', 'decoders.7.blocks.2.proj_heads_o_kv.weight', 'decoders.7.blocks.2.ln_q.weight', 'decoders.7.blocks.2.ln_q.bias', 'decoders.7.blocks.2.ln_k.weight', 'decoders.7.blocks.2.ln_k.bias', 'decoders.7.blocks.2.proj_out.weight', 'decoders.7.blocks.3.blocks.0.weight', 'decoders.7.blocks.3.blocks.0.bias', 'decoders.7.blocks.3.blocks.3.weight', 'decoders.7.blocks.3.blocks.3.bias', 'decoders.7.blocks.4.proj_heads.weight', 'decoders.7.blocks.4.proj_heads_o_q.weight', 'decoders.7.blocks.4.proj_heads_o_kv.weight', 'decoders.7.blocks.4.ln_q.weight', 'decoders.7.blocks.4.ln_q.bias', 'decoders.7.blocks.4
1: .ln_k.weight', 'decoders.7.blocks.4.ln_k.bias', 'decoders.7.blocks.4.proj_out.weight', 'decoders.7.blocks.5.blocks.0.weight', 'decoders.7.blocks.5.blocks.0.bias', 'decoders.7.blocks.5.blocks.3.weight', 'decoders.7.blocks.5.blocks.3.bias', 'decoders.7.blocks.6.proj_heads.weight', 'decoders.7.blocks.6.proj_heads_o_q.weight', 'decoders.7.blocks.6.proj_heads_o_kv.weight', 'decoders.7.blocks.6.ln_q.weight', 'decoders.7.blocks.6.ln_q.bias', 'decoders.7.blocks.6.ln_k.weight', 'decoders.7.blocks.6.ln_k.bias', 'decoders.7.blocks.6.proj_out.weight', 'decoders.7.blocks.7.blocks.0.weight', 'decoders.7.blocks.7.blocks.0.bias', 'decoders.7.blocks.7.blocks.3.weight', 'decoders.7.blocks.7.blocks.3.bias', 'decoders.7.blocks.8.proj_heads.weight', 'decoders.7.blocks.8.proj_heads_o_q.weight', 'decoders.7.blocks.8.proj_heads_o_kv.weight', 'decoders.7.blocks.8.ln_q.weight', 'decoders.7.blocks.8.ln_q.bias', 'decoders.7.blocks.8.ln_k.weight', 'decoders.7.blocks.8.ln_k.bias', 'decoders.7.blocks.8.proj_out.weight', 'decoders.7.blocks.
1: 9.blocks.0.weight', 'decoders.7.blocks.9.blocks.0.bias', 'decoders.7.blocks.9.blocks.3.weight', 'decoders.7.blocks.9.blocks.3.bias', 'decoders.7.blocks.10.proj_heads.weight', 'decoders.7.blocks.10.proj_heads_o_q.weight', 'decoders.7.blocks.10.proj_heads_o_kv.weight', 'decoders.7.blocks.10.ln_q.weight', 'decoders.7.blocks.10.ln_q.bias', 'decoders.7.blocks.10.ln_k.weight', 'decoders.7.blocks.10.ln_k.bias', 'decoders.7.blocks.10.proj_out.weight', 'decoders.7.blocks.11.blocks.0.weight', 'decoders.7.blocks.11.blocks.0.bias', 'decoders.7.blocks.11.blocks.3.weight', 'decoders.7.blocks.11.blocks.3.bias', 'tails.7.tail_nets.0.0.weight', 'tails.7.tail_nets.0.0.bias', 'tails.7.tail_nets.0.1.weight', 'tails.7.tail_nets.0.1.bias', 'tails.7.tail_nets.1.0.weight', 'tails.7.tail_nets.1.0.bias', 'tails.7.tail_nets.1.1.weight', 'tails.7.tail_nets.1.1.bias', 'tails.7.tail_nets.2.0.weight', 'tails.7.tail_nets.2.0.bias', 'tails.7.tail_nets.2.1.weight', 'tails.7.tail_nets.2.1.bias', 'tails.7.tail_nets.3.0.weight', 'tails.7.tail_ne
1: ts.3.0.bias', 'tails.7.tail_nets.3.1.weight', 'tails.7.tail_nets.3.1.bias', 'tails.7.tail_nets.4.0.weight', 'tails.7.tail_nets.4.0.bias', 'tails.7.tail_nets.4.1.weight', 'tails.7.tail_nets.4.1.bias', 'tails.7.tail_nets.5.0.weight', 'tails.7.tail_nets.5.0.bias', 'tails.7.tail_nets.5.1.weight', 'tails.7.tail_nets.5.1.bias', 'tails.7.tail_nets.6.0.weight', 'tails.7.tail_nets.6.0.bias', 'tails.7.tail_nets.6.1.weight', 'tails.7.tail_nets.6.1.bias', 'tails.7.tail_nets.7.0.weight', 'tails.7.tail_nets.7.0.bias', 'tails.7.tail_nets.7.1.weight', 'tails.7.tail_nets.7.1.bias', 'tails.7.tail_nets.8.0.weight', 'tails.7.tail_nets.8.0.bias', 'tails.7.tail_nets.8.1.weight', 'tails.7.tail_nets.8.1.bias', 'tails.7.tail_nets.9.0.weight', 'tails.7.tail_nets.9.0.bias', 'tails.7.tail_nets.9.1.weight', 'tails.7.tail_nets.9.1.bias', 'tails.7.tail_nets.10.0.weight', 'tails.7.tail_nets.10.0.bias', 'tails.7.tail_nets.10.1.weight', 'tails.7.tail_nets.10.1.bias', 'tails.7.tail_nets.11.0.weight', 'tails.7.tail_nets.11.0.bias', 'tails.7.tai
1: l_nets.11.1.weight', 'tails.7.tail_nets.11.1.bias', 'tails.7.tail_nets.12.0.weight', 'tails.7.tail_nets.12.0.bias', 'tails.7.tail_nets.12.1.weight', 'tails.7.tail_nets.12.1.bias', 'tails.7.tail_nets.13.0.weight', 'tails.7.tail_nets.13.0.bias', 'tails.7.tail_nets.13.1.weight', 'tails.7.tail_nets.13.1.bias', 'tails.7.tail_nets.14.0.weight', 'tails.7.tail_nets.14.0.bias', 'tails.7.tail_nets.14.1.weight', 'tails.7.tail_nets.14.1.bias', 'tails.7.tail_nets.15.0.weight', 'tails.7.tail_nets.15.0.bias', 'tails.7.tail_nets.15.1.weight', 'tails.7.tail_nets.15.1.bias']
1: Loaded model id = b9h8xdoz.
1: Loaded run 'b9h8xdoz' at epoch -2.
0: Loaded model id = b9h8xdoz.
0: Loaded run 'b9h8xdoz' at epoch -2.
0: l50139:3437821:3438369 [1] NCCL INFO Using non-device net plugin version 0
0: l50139:3437821:3438369 [1] NCCL INFO Using network IB
0: l50139:3437821:3438369 [1] NCCL INFO DMA-BUF is available on GPU device 1
1: l50142:2936730:2936994 [1] NCCL INFO Using non-device net plugin version 0
1: l50142:2936730:2936994 [1] NCCL INFO Using network IB
1: l50142:2936730:2936994 [1] NCCL INFO DMA-BUF is available on GPU device 1
1: l50142:2936730:2936994 [1] NCCL INFO ncclCommInitRank comm 0x55558bb7fe00 rank 1 nranks 2 cudaDev 1 nvmlDev 1 busId 44000 commId 0x2c5beb4a30ba639d - Init START
0: l50139:3437821:3438369 [1] NCCL INFO ncclCommInitRank comm 0x555589dae4d0 rank 0 nranks 2 cudaDev 1 nvmlDev 1 busId 44000 commId 0x2c5beb4a30ba639d - Init START
0: l50139:3437821:3438369 [1] NCCL INFO Setting affinity for GPU 1 to ffff0000,00000000,00000000,00000000,ffff0000
1: l50142:2936730:2936994 [1] NCCL INFO Setting affinity for GPU 1 to ffff0000,00000000,00000000,00000000,ffff0000
0: l50139:3437821:3438369 [1] NCCL INFO comm 0x555589dae4d0 rank 0 nRanks 2 nNodes 2 localRanks 1 localRank 0 MNNVL 0
0: l50139:3437821:3438369 [1] NCCL INFO Channel 00/02 :    0   1
0: l50139:3437821:3438369 [1] NCCL INFO Channel 01/02 :    0   1
0: l50139:3437821:3438369 [1] NCCL INFO Trees [0] 1/-1/-1->0->-1 [1] -1/-1/-1->0->1
0: l50139:3437821:3438369 [1] NCCL INFO P2P Chunksize set to 131072
1: l50142:2936730:2936994 [1] NCCL INFO comm 0x55558bb7fe00 rank 1 nRanks 2 nNodes 2 localRanks 1 localRank 0 MNNVL 0
1: l50142:2936730:2936994 [1] NCCL INFO Trees [0] -1/-1/-1->1->0 [1] 0/-1/-1->1->-1
1: l50142:2936730:2936994 [1] NCCL INFO P2P Chunksize set to 131072
0: l50139:3437821:3438369 [1] NCCL INFO Channel 00/0 : 1[1] -> 0[1] [receive] via NET/IB/0/GDRDMA
0: l50139:3437821:3438369 [1] NCCL INFO Channel 01/0 : 1[1] -> 0[1] [receive] via NET/IB/0/GDRDMA
0: l50139:3437821:3438369 [1] NCCL INFO Channel 00/0 : 0[1] -> 1[1] [send] via NET/IB/0/GDRDMA
0: l50139:3437821:3438369 [1] NCCL INFO Channel 01/0 : 0[1] -> 1[1] [send] via NET/IB/0/GDRDMA
1: l50142:2936730:2936994 [1] NCCL INFO Channel 00/0 : 0[1] -> 1[1] [receive] via NET/IB/0/GDRDMA
1: l50142:2936730:2936994 [1] NCCL INFO Channel 01/0 : 0[1] -> 1[1] [receive] via NET/IB/0/GDRDMA
1: l50142:2936730:2936994 [1] NCCL INFO Channel 00/0 : 1[1] -> 0[1] [send] via NET/IB/0/GDRDMA
1: l50142:2936730:2936994 [1] NCCL INFO Channel 01/0 : 1[1] -> 0[1] [send] via NET/IB/0/GDRDMA
0: l50139:3437821:3438369 [1] NCCL INFO Connected all rings
0: l50139:3437821:3438369 [1] NCCL INFO Connected all trees
1: l50142:2936730:2936994 [1] NCCL INFO Connected all rings
1: l50142:2936730:2936994 [1] NCCL INFO Connected all trees
1: l50142:2936730:2936994 [1] NCCL INFO threadThresholds 8/8/64 | 16/8/64 | 512 | 512
1: l50142:2936730:2936994 [1] NCCL INFO 2 coll channels, 2 collnet channels, 0 nvls channels, 2 p2p channels, 2 p2p channels per peer
0: l50139:3437821:3438369 [1] NCCL INFO threadThresholds 8/8/64 | 16/8/64 | 512 | 512
0: l50139:3437821:3438369 [1] NCCL INFO 2 coll channels, 2 collnet channels, 0 nvls channels, 2 p2p channels, 2 p2p channels per peer
0: l50139:3437821:3438369 [1] NCCL INFO ncclCommInitRank comm 0x555589dae4d0 rank 0 nranks 2 cudaDev 1 nvmlDev 1 busId 44000 commId 0x2c5beb4a30ba639d - Init COMPLETE
1: l50142:2936730:2936994 [1] NCCL INFO ncclCommInitRank comm 0x55558bb7fe00 rank 1 nranks 2 cudaDev 1 nvmlDev 1 busId 44000 commId 0x2c5beb4a30ba639d - Init COMPLETE
0: l50139:3437821:3438374 [2] NCCL INFO Using non-device net plugin version 0
0: l50139:3437821:3438374 [2] NCCL INFO Using network IB
0: l50139:3437821:3438374 [2] NCCL INFO DMA-BUF is available on GPU device 2
1: l50142:2936730:2936998 [2] NCCL INFO Using non-device net plugin version 0
1: l50142:2936730:2936998 [2] NCCL INFO Using network IB
1: l50142:2936730:2936998 [2] NCCL INFO DMA-BUF is available on GPU device 2
0: l50139:3437821:3438374 [2] NCCL INFO ncclCommInitRank comm 0x55558c097000 rank 0 nranks 2 cudaDev 2 nvmlDev 2 busId 84000 commId 0xb1ff12d5d70f9fed - Init START
1: l50142:2936730:2936998 [2] NCCL INFO ncclCommInitRank comm 0x55558de68ec0 rank 1 nranks 2 cudaDev 2 nvmlDev 2 busId 84000 commId 0xb1ff12d5d70f9fed - Init START
0: l50139:3437821:3438374 [2] NCCL INFO Setting affinity for GPU 2 to ffff0000,00000000,00000000,00000000,ffff0000,00000000,00000000,00000000
1: l50142:2936730:2936998 [2] NCCL INFO Setting affinity for GPU 2 to ffff0000,00000000,00000000,00000000,ffff0000,00000000,00000000,00000000
1: l50142:2936730:2936998 [2] NCCL INFO comm 0x55558de68ec0 rank 1 nRanks 2 nNodes 2 localRanks 1 localRank 0 MNNVL 0
1: l50142:2936730:2936998 [2] NCCL INFO Trees [0] -1/-1/-1->1->0 [1] 0/-1/-1->1->-1
1: l50142:2936730:2936998 [2] NCCL INFO P2P Chunksize set to 131072
0: l50139:3437821:3438374 [2] NCCL INFO comm 0x55558c097000 rank 0 nRanks 2 nNodes 2 localRanks 1 localRank 0 MNNVL 0
0: l50139:3437821:3438374 [2] NCCL INFO Channel 00/02 :    0   1
0: l50139:3437821:3438374 [2] NCCL INFO Channel 01/02 :    0   1
0: l50139:3437821:3438374 [2] NCCL INFO Trees [0] 1/-1/-1->0->-1 [1] -1/-1/-1->0->1
0: l50139:3437821:3438374 [2] NCCL INFO P2P Chunksize set to 131072
0: l50139:3437821:3438374 [2] NCCL INFO Channel 00/0 : 1[2] -> 0[2] [receive] via NET/IB/1/GDRDMA
1: l50142:2936730:2936998 [2] NCCL INFO Channel 00/0 : 0[2] -> 1[2] [receive] via NET/IB/1/GDRDMA
0: l50139:3437821:3438374 [2] NCCL INFO Channel 01/0 : 1[2] -> 0[2] [receive] via NET/IB/1/GDRDMA
0: l50139:3437821:3438374 [2] NCCL INFO Channel 00/0 : 0[2] -> 1[2] [send] via NET/IB/1/GDRDMA
1: l50142:2936730:2936998 [2] NCCL INFO Channel 01/0 : 0[2] -> 1[2] [receive] via NET/IB/1/GDRDMA
0: l50139:3437821:3438374 [2] NCCL INFO Channel 01/0 : 0[2] -> 1[2] [send] via NET/IB/1/GDRDMA
1: l50142:2936730:2936998 [2] NCCL INFO Channel 00/0 : 1[2] -> 0[2] [send] via NET/IB/1/GDRDMA
1: l50142:2936730:2936998 [2] NCCL INFO Channel 01/0 : 1[2] -> 0[2] [send] via NET/IB/1/GDRDMA
0: l50139:3437821:3438374 [2] NCCL INFO Connected all rings
0: l50139:3437821:3438374 [2] NCCL INFO Connected all trees
1: l50142:2936730:2936998 [2] NCCL INFO Connected all rings
1: l50142:2936730:2936998 [2] NCCL INFO Connected all trees
1: l50142:2936730:2936998 [2] NCCL INFO threadThresholds 8/8/64 | 16/8/64 | 512 | 512
1: l50142:2936730:2936998 [2] NCCL INFO 2 coll channels, 2 collnet channels, 0 nvls channels, 2 p2p channels, 2 p2p channels per peer
0: l50139:3437821:3438374 [2] NCCL INFO threadThresholds 8/8/64 | 16/8/64 | 512 | 512
0: l50139:3437821:3438374 [2] NCCL INFO 2 coll channels, 2 collnet channels, 0 nvls channels, 2 p2p channels, 2 p2p channels per peer
1: l50142:2936730:2936998 [2] NCCL INFO ncclCommInitRank comm 0x55558de68ec0 rank 1 nranks 2 cudaDev 2 nvmlDev 2 busId 84000 commId 0xb1ff12d5d70f9fed - Init COMPLETE
0: l50139:3437821:3438374 [2] NCCL INFO ncclCommInitRank comm 0x55558c097000 rank 0 nranks 2 cudaDev 2 nvmlDev 2 busId 84000 commId 0xb1ff12d5d70f9fed - Init COMPLETE
0: l50139:3437821:3438379 [3] NCCL INFO Using non-device net plugin version 0
0: l50139:3437821:3438379 [3] NCCL INFO Using network IB
0: l50139:3437821:3438379 [3] NCCL INFO DMA-BUF is available on GPU device 3
1: l50142:2936730:2937002 [3] NCCL INFO Using non-device net plugin version 0
1: l50142:2936730:2937002 [3] NCCL INFO Using network IB
1: l50142:2936730:2937002 [3] NCCL INFO DMA-BUF is available on GPU device 3
1: l50142:2936730:2937002 [3] NCCL INFO ncclCommInitRank comm 0x5555972cd570 rank 1 nranks 2 cudaDev 3 nvmlDev 3 busId c4000 commId 0xe2b7d9bf08e969b8 - Init START
0: l50139:3437821:3438379 [3] NCCL INFO ncclCommInitRank comm 0x555594c92600 rank 0 nranks 2 cudaDev 3 nvmlDev 3 busId c4000 commId 0xe2b7d9bf08e969b8 - Init START
1: l50142:2936730:2937002 [3] NCCL INFO Setting affinity for GPU 3 to ffff0000,00000000,00000000,00000000,ffff0000,00000000,00000000
0: l50139:3437821:3438379 [3] NCCL INFO Setting affinity for GPU 3 to ffff0000,00000000,00000000,00000000,ffff0000,00000000,00000000
1: l50142:2936730:2937002 [3] NCCL INFO comm 0x5555972cd570 rank 1 nRanks 2 nNodes 2 localRanks 1 localRank 0 MNNVL 0
1: l50142:2936730:2937002 [3] NCCL INFO Trees [0] -1/-1/-1->1->0 [1] -1/-1/-1->1->0 [2] 0/-1/-1->1->-1 [3] 0/-1/-1->1->-1
1: l50142:2936730:2937002 [3] NCCL INFO P2P Chunksize set to 131072
0: l50139:3437821:3438379 [3] NCCL INFO comm 0x555594c92600 rank 0 nRanks 2 nNodes 2 localRanks 1 localRank 0 MNNVL 0
0: l50139:3437821:3438379 [3] NCCL INFO Channel 00/04 :    0   1
0: l50139:3437821:3438379 [3] NCCL INFO Channel 01/04 :    0   1
0: l50139:3437821:3438379 [3] NCCL INFO Channel 02/04 :    0   1
0: l50139:3437821:3438379 [3] NCCL INFO Channel 03/04 :    0   1
0: l50139:3437821:3438379 [3] NCCL INFO Trees [0] 1/-1/-1->0->-1 [1] 1/-1/-1->0->-1 [2] -1/-1/-1->0->1 [3] -1/-1/-1->0->1
0: l50139:3437821:3438379 [3] NCCL INFO P2P Chunksize set to 131072
1: l50142:2936730:2937002 [3] NCCL INFO Channel 00/0 : 0[3] -> 1[3] [receive] via NET/IB/1
1: l50142:2936730:2937002 [3] NCCL INFO Channel 01/0 : 0[3] -> 1[3] [receive] via NET/IB/0
1: l50142:2936730:2937002 [3] NCCL INFO Channel 02/0 : 0[3] -> 1[3] [receive] via NET/IB/1
1: l50142:2936730:2937002 [3] NCCL INFO Channel 03/0 : 0[3] -> 1[3] [receive] via NET/IB/0
1: l50142:2936730:2937002 [3] NCCL INFO Channel 00/0 : 1[3] -> 0[3] [send] via NET/IB/1
1: l50142:2936730:2937002 [3] NCCL INFO Channel 01/0 : 1[3] -> 0[3] [send] via NET/IB/0
1: l50142:2936730:2937002 [3] NCCL INFO Channel 02/0 : 1[3] -> 0[3] [send] via NET/IB/1
1: l50142:2936730:2937002 [3] NCCL INFO Channel 03/0 : 1[3] -> 0[3] [send] via NET/IB/0
0: l50139:3437821:3438379 [3] NCCL INFO Channel 00/0 : 1[3] -> 0[3] [receive] via NET/IB/1
0: l50139:3437821:3438379 [3] NCCL INFO Channel 01/0 : 1[3] -> 0[3] [receive] via NET/IB/0
0: l50139:3437821:3438379 [3] NCCL INFO Channel 02/0 : 1[3] -> 0[3] [receive] via NET/IB/1
0: l50139:3437821:3438379 [3] NCCL INFO Channel 03/0 : 1[3] -> 0[3] [receive] via NET/IB/0
0: l50139:3437821:3438379 [3] NCCL INFO Channel 00/0 : 0[3] -> 1[3] [send] via NET/IB/1
0: l50139:3437821:3438379 [3] NCCL INFO Channel 01/0 : 0[3] -> 1[3] [send] via NET/IB/0
0: l50139:3437821:3438379 [3] NCCL INFO Channel 02/0 : 0[3] -> 1[3] [send] via NET/IB/1
0: l50139:3437821:3438379 [3] NCCL INFO Channel 03/0 : 0[3] -> 1[3] [send] via NET/IB/0
0: l50139:3437821:3438379 [3] NCCL INFO Connected all rings
0: l50139:3437821:3438379 [3] NCCL INFO Connected all trees
0: l50139:3437821:3438379 [3] NCCL INFO threadThresholds 8/8/64 | 16/8/64 | 512 | 512
0: l50139:3437821:3438379 [3] NCCL INFO 4 coll channels, 4 collnet channels, 0 nvls channels, 4 p2p channels, 2 p2p channels per peer
1: l50142:2936730:2937002 [3] NCCL INFO Connected all rings
1: l50142:2936730:2937002 [3] NCCL INFO Connected all trees
1: l50142:2936730:2937002 [3] NCCL INFO threadThresholds 8/8/64 | 16/8/64 | 512 | 512
1: l50142:2936730:2937002 [3] NCCL INFO 4 coll channels, 4 collnet channels, 0 nvls channels, 4 p2p channels, 2 p2p channels per peer
1: l50142:2936730:2937002 [3] NCCL INFO ncclCommInitRank comm 0x5555972cd570 rank 1 nranks 2 cudaDev 3 nvmlDev 3 busId c4000 commId 0xe2b7d9bf08e969b8 - Init COMPLETE
0: l50139:3437821:3438379 [3] NCCL INFO ncclCommInitRank comm 0x555594c92600 rank 0 nranks 2 cudaDev 3 nvmlDev 3 busId c4000 commId 0xe2b7d9bf08e969b8 - Init COMPLETE
1: -1 : 14:41:13 :: batch_size = 64, lr = 1e-05
0: Number of trainable parameters: 1,031,333,008
0: -1 : 14:41:13 :: batch_size = 64, lr = 1e-05
0: [DEBUG] TRAIN INPUT BATCH
0: Epoch -1, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([64, 5, 12, 3, 6, 3, 18, 18])
1: [DEBUG] TRAIN INPUT BATCH
1: Epoch -1, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([64, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-5.4462e-02,  7.4101e-03, -1.1408e-02,  1.1295e-01, -5.0076e-02, -1.1115e-01, -1.0740e-04, -5.7173e-02,
0:          2.5303e-02, -4.6806e-02, -6.2953e-02,  5.7203e-02, -9.4038e-02,  3.5287e-02, -1.8852e-01,  7.6323e-02,
0:          9.5770e-02,  2.6290e-02, -6.0428e-02, -6.4961e-02, -4.6149e-02, -2.5585e-02, -6.2517e-02,  9.5302e-02,
0:         -1.1416e-02], device='cuda:0')
1:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
1:        device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([64, 5, 12, 3, 6, 3, 18, 18])
0:   └─ Field: 'velocity_v' shape: torch.Size([64, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([0.4057, 0.4040, 0.4023, 0.4003, 0.3986, 0.3969, 0.3949, 0.3932, 0.3914, 0.3895, 0.3878, 0.3860, 0.3841, 0.3824,
0:         0.3804, 0.3787, 0.3767, 0.3750, 0.3992, 0.3975, 0.3958, 0.3943, 0.3925, 0.3908, 0.3891], device='cuda:1')
0:   └─ Field: 'specific_humidity' shape: torch.Size([64, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.3670, -0.3681, -0.3691, -0.3703, -0.3713, -0.3726, -0.3738, -0.3752, -0.3764, -0.3777, -0.3789, -0.3802,
0:         -0.3815, -0.3827, -0.3835, -0.3842, -0.3849, -0.3857, -0.4045, -0.4054, -0.4062, -0.4071, -0.4080, -0.4089,
0:         -0.4098], device='cuda:2')
0:   └─ Field: 'velocity_z' shape: torch.Size([64, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([0.0968, 0.0968, 0.0968, 0.0968, 0.0968, 0.0968, 0.0968, 0.0991, 0.0991, 0.0991, 0.0991, 0.0991, 0.0991, 0.0991,
0:         0.0991, 0.0991, 0.1013, 0.1013, 0.0631, 0.0653, 0.0653, 0.0653, 0.0653, 0.0653, 0.0676], device='cuda:3')
0:   └─ Field: 'temperature' shape: torch.Size([64, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
0:        device='cuda:3')
0:   └─ Field: 'total_precip' shape: torch.Size([64, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([-0.2161, -0.2184, -0.2184, -0.2184, -0.2184, -0.2184, -0.2184, -0.2161, -0.2161, -0.2138, -0.2138, -0.2138,
0:         -0.2138, -0.2138, -0.2138, -0.2138, -0.2138, -0.2138, -0.1841, -0.1841, -0.1841, -0.1841, -0.1841, -0.1841,
0:         -0.1841], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([64, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([-1.0260, -1.0251, -1.0243, -1.0234, -1.0224, -1.0215, -1.0207, -1.0198, -1.0182, -1.0173, -1.0164, -1.0155,
0:         -1.0138, -1.0128, -1.0124, -1.0112, -1.0107, -1.0094, -1.0082, -1.0076, -1.0064, -1.0058, -1.0044, -1.0039,
0:         -1.0026], device='cuda:1')
0:   └─ Field: 'corrected_t2m' shape: torch.Size([64, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([0.4057, 0.4040, 0.4023, 0.4003, 0.3986, 0.3969, 0.3949, 0.3932, 0.3914, 0.3895, 0.3878, 0.3860, 0.3841, 0.3824,
1:         0.3804, 0.3787, 0.3767, 0.3750, 0.3992, 0.3975, 0.3958, 0.3943, 0.3925, 0.3908, 0.3891], device='cuda:1')
1:   └─ Field: 'specific_humidity' shape: torch.Size([64, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.5474, -0.5406, -0.5365, -0.5357, -0.5334, -0.5249, -0.5158, -0.5031, -0.4918, -0.4869, -0.4864, -0.4816,
0:         -0.4676, -0.4587, -0.4517, -0.4445, -0.4369, -0.4293, -0.4216, -0.4141, -0.4033, -0.3924, -0.3815, -0.3713,
0:         -0.3661], device='cuda:2')
0: [DEBUG] TRAIN TARGET BATCH
0: Epoch -1, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([1607, 2187])
0:     First 25 batch values:
0: tensor([-0.9155, -0.9140, -0.9126, -0.9111, -0.9096, -0.9080, -0.9066, -0.9050, -0.9036, -0.9028, -0.9013, -0.8997,
0:         -0.8982, -0.8966, -0.8951, -0.8935, -0.8920, -0.8909, -0.8890, -0.8871, -0.8859, -0.8841, -0.8828, -0.8809,
0:         -0.8790])
0: [DEBUG] TRAIN PREDICTIONS BATCH
0: Epoch -1, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([16533, 972])
0:      first 25 pred values: tensor([-0.7035, -0.6933, -0.6915, -0.6956, -0.6974, -0.6948, -0.6890, -0.6802, -0.6753, -0.6707, -0.6679, -0.6685,
0:         -0.6676, -0.6654, -0.6582, -0.6385, -0.6145, -0.5786, -0.6753, -0.6628, -0.6502, -0.6460, -0.6400, -0.6335,
0:         -0.6204], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([17233, 972])
1:      first 25 values: tensor([-0.3670, -0.3681, -0.3691, -0.3703, -0.3713, -0.3726, -0.3738, -0.3752, -0.3764, -0.3777, -0.3789, -0.3802,
1:         -0.3815, -0.3827, -0.3835, -0.3842, -0.3849, -0.3857, -0.4045, -0.4054, -0.4062, -0.4071, -0.4080, -0.4089,
1:         -0.4098], device='cuda:2')
1:   └─ Field: 'velocity_z' shape: torch.Size([64, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 pred values: tensor([0.9670, 0.9885, 1.0194, 1.0503, 1.0798, 1.1083, 1.1392, 1.1718, 1.2065, 1.2405, 1.2684, 1.2951, 1.3128, 1.3312,
0:         1.3513, 1.3754, 1.4050, 1.4294, 1.0448, 1.0650, 1.0973, 1.1257, 1.1556, 1.1849, 1.2149], device='cuda:1',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([18166, 972])
0:      first 25 pred values: tensor([-0.2023, -0.2099, -0.2224, -0.2286, -0.2260, -0.2241, -0.2214, -0.2214, -0.2220, -0.2268, -0.2328, -0.2389,
0:         -0.2451, -0.2468, -0.2465, -0.2446, -0.2390, -0.2308, -0.2056, -0.2113, -0.2203, -0.2210, -0.2166, -0.2112,
0:         -0.2060], device='cuda:2', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([17949, 972])
0:      first 25 pred values: tensor([0.4063, 0.3902, 0.4248, 0.4355, 0.4250, 0.4387, 0.4341, 0.4344, 0.4309, 0.4150, 0.4173, 0.4263, 0.4421, 0.4583,
0:         0.4579, 0.4542, 0.4587, 0.4875, 0.3409, 0.3317, 0.3710, 0.3877, 0.3865, 0.3983, 0.3802], device='cuda:3',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([7651, 2187])
0:      first 25 pred values: tensor([1.9853, 1.9868, 1.9917, 1.9962, 2.0001, 2.0029, 2.0028, 2.0021, 1.9999, 1.9970, 1.9942, 1.9914, 1.9902, 1.9917,
0:         1.9922, 1.9934, 1.9940, 1.9956, 1.9968, 1.9962, 1.9942, 1.9899, 1.9854, 1.9855, 1.9879], device='cuda:3',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([6734, 243])
0:      first 25 pred values: tensor([-0.1505, -0.1485, -0.1484, -0.1493, -0.1451, -0.1424, -0.1475, -0.1408, -0.1411, -0.1766, -0.1780, -0.1773,
0:         -0.1752, -0.1814, -0.1749, -0.1726, -0.1684, -0.1642, -0.2052, -0.2077, -0.2083, -0.2064, -0.2036, -0.2024,
0:         -0.1978], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([1607, 2187])
0:      first 25 pred values: tensor([-0.6078, -0.6064, -0.6195, -0.5992, -0.6137, -0.6151, -0.5985, -0.6026, -0.6281, -0.5967, -0.5942, -0.6378,
0:         -0.5973, -0.6292, -0.6222, -0.6175, -0.5944, -0.6089, -0.6028, -0.6610, -0.6012, -0.5962, -0.6057, -0.5867,
0:         -0.6182], device='cuda:1', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'corrected_t2m' shape: torch.Size([1953, 2187])
0:      first 25 pred values: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
0:        device='cuda:2', grad_fn=<SliceBackward0>)
1:      first 25 values: tensor([0.0968, 0.0968, 0.0968, 0.0968, 0.0968, 0.0968, 0.0968, 0.0991, 0.0991, 0.0991, 0.0991, 0.0991, 0.0991, 0.0991,
1:         0.0991, 0.0991, 0.1013, 0.1013, 0.0631, 0.0653, 0.0653, 0.0653, 0.0653, 0.0653, 0.0676], device='cuda:3')
1:   └─ Field: 'temperature' shape: torch.Size([64, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-0.1214,  0.0993, -0.1791,  0.0025, -0.0044,  0.0718,  0.0491,  0.0347,  0.0475,  0.0130, -0.2925,  0.0194,
1:         -0.0390, -0.0157,  0.0030, -0.1333, -0.1408,  0.0361, -0.0277, -0.0231,  0.1101,  0.0038, -0.0044, -0.0441,
1:          0.0805], device='cuda:3')
1:   └─ Field: 'total_precip' shape: torch.Size([64, 1, 12, 6, 12, 3, 9, 9])
1:      first 25 values: tensor([-0.2161, -0.2184, -0.2184, -0.2184, -0.2184, -0.2184, -0.2184, -0.2161, -0.2161, -0.2138, -0.2138, -0.2138,
1:         -0.2138, -0.2138, -0.2138, -0.2138, -0.2138, -0.2138, -0.1841, -0.1841, -0.1841, -0.1841, -0.1841, -0.1841,
1:         -0.1841], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([64, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
1:        device='cuda:1')
1:   └─ Field: 'corrected_t2m' shape: torch.Size([64, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-0.5474, -0.5406, -0.5365, -0.5357, -0.5334, -0.5249, -0.5158, -0.5031, -0.4918, -0.4869, -0.4864, -0.4816,
1:         -0.4676, -0.4587, -0.4517, -0.4445, -0.4369, -0.4293, -0.4216, -0.4141, -0.4033, -0.3924, -0.3815, -0.3713,
1:         -0.3661], device='cuda:2')
1: [DEBUG] TRAIN TARGET BATCH
1: Epoch -1, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([1447, 2187])
1:     First 25 batch values:
1: tensor([-0.2186, -0.2192, -0.2198, -0.2204, -0.2210, -0.2208, -0.2215, -0.2219, -0.2226, -0.2223, -0.2229, -0.2234,
1:         -0.2248, -0.2254, -0.2262, -0.2267, -0.2273, -0.2279, -0.2284, -0.2290, -0.2310, -0.2323, -0.2344, -0.2363,
1:         -0.2376])
1: [DEBUG] TRAIN PREDICTIONS BATCH
1: Epoch -1, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([17768, 972])
1:      first 25 pred values: tensor([-1.4771, -1.4774, -1.4753, -1.4724, -1.4677, -1.4617, -1.4558, -1.4496, -1.4455, -1.4424, -1.4386, -1.4309,
1:         -1.4233, -1.4162, -1.4072, -1.3970, -1.3853, -1.3714, -1.4879, -1.4904, -1.4886, -1.4861, -1.4814, -1.4741,
1:         -1.4681], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([18077, 972])
1:      first 25 pred values: tensor([0.7118, 0.7215, 0.7329, 0.7459, 0.7615, 0.7779, 0.7942, 0.8091, 0.8208, 0.8324, 0.8440, 0.8549, 0.8692, 0.8812,
1:         0.8931, 0.9057, 0.9200, 0.9353, 0.7480, 0.7647, 0.7822, 0.7992, 0.8154, 0.8321, 0.8489], device='cuda:1',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([17400, 972])
1:      first 25 pred values: tensor([-0.4811, -0.4824, -0.4821, -0.4817, -0.4805, -0.4802, -0.4800, -0.4800, -0.4811, -0.4822, -0.4849, -0.4874,
1:         -0.4892, -0.4902, -0.4910, -0.4913, -0.4921, -0.4934, -0.4973, -0.4993, -0.4998, -0.4990, -0.4992, -0.5004,
1:         -0.4992], device='cuda:2', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([18313, 972])
1:      first 25 pred values: tensor([0.2952, 0.2938, 0.3324, 0.3451, 0.3641, 0.3838, 0.3993, 0.4390, 0.4695, 0.4889, 0.4703, 0.4384, 0.4350, 0.4538,
1:         0.4618, 0.4555, 0.4356, 0.3820, 0.3164, 0.2926, 0.3224, 0.3016, 0.2960, 0.3032, 0.3038], device='cuda:3',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([7828, 2187])
1:      first 25 pred values: tensor([1.9370, 1.9299, 1.9281, 1.9302, 1.9348, 1.9386, 1.9419, 1.9424, 1.9407, 1.9363, 1.9323, 1.9298, 1.9301, 1.9336,
1:         1.9342, 1.9301, 1.9234, 1.9155, 1.9097, 1.9057, 1.9027, 1.8986, 1.8939, 1.8903, 1.8885], device='cuda:3',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([7755, 243])
1:      first 25 pred values: tensor([-0.2121, -0.2146, -0.2206, -0.2276, -0.2244, -0.2327, -0.2383, -0.2322, -0.2252, -0.2231, -0.2176, -0.2283,
1:         -0.2297, -0.2311, -0.2418, -0.2345, -0.2309, -0.2293, -0.2237, -0.2251, -0.2268, -0.2269, -0.2338, -0.2376,
1:         -0.2363], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([1447, 2187])
1:      first 25 pred values: tensor([-0.6461, -0.6429, -0.6861, -0.6653, -0.6834, -0.7428, -0.7265, -0.7041, -0.7027, -0.7354, -0.6946, -0.7279,
1:         -0.7475, -0.6839, -0.6870, -0.7091, -0.6659, -0.6912, -0.6989, -0.6356, -0.6727, -0.6224, -0.6363, -0.5736,
1:         -0.6005], device='cuda:1', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'corrected_t2m' shape: torch.Size([1579, 2187])
1:      first 25 pred values: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
1:        device='cuda:2', grad_fn=<SliceBackward0>)
0: epoch: -1 [1/7 (14%)]	Loss: nan : nan :: 0.07042 (1.46 s/sec)
0: epoch: -1 [2/7 (29%)]	Loss: nan : nan :: 0.07173 (15.26 s/sec)
0: epoch: -1 [3/7 (43%)]	Loss: nan : nan :: 0.07427 (14.84 s/sec)
0: epoch: -1 [4/7 (57%)]	Loss: nan : nan :: 0.06710 (14.78 s/sec)
0: epoch: -1 [5/7 (71%)]	Loss: nan : nan :: 0.06349 (14.53 s/sec)
0: epoch: -1 [6/7 (86%)]	Loss: nan : nan :: 0.06769 (3.62 s/sec)
0: validation loss for strategy=BERT at epoch -1 : nan
0: validation loss for velocity_u : 0.003268611151725054
0: validation loss for velocity_v : 0.004453854635357857
0: validation loss for specific_humidity : 0.006009005941450596
0: validation loss for velocity_z : 0.10036911070346832
0: validation loss for temperature : 0.018360331654548645
0: validation loss for total_precip : 0.26731181144714355
0: validation loss for t2m : 0.13370546698570251
0: validation loss for corrected_t2m : nan
0: 0 : 14:47:50 :: batch_size = 64, lr = 1e-05
1: 0 : 14:47:50 :: batch_size = 64, lr = 1e-05
0: [DEBUG] TRAIN INPUT BATCH
0: Epoch 0, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([64, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.1782,  0.0087, -0.1987, -0.1954,  0.1395,  0.1468, -0.1377,  0.1578,  0.1110,  0.0308,  0.0716, -0.0200,
0:          0.0237,  0.0241, -0.0114, -0.0231,  0.0952, -0.0475, -0.0578,  0.0547, -0.1286,  0.0553,  0.0265, -0.0962,
0:          0.1894], device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([64, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([ 0.3315,  0.3056,  0.2813,  0.2588,  0.2409,  0.2330,  0.2276,  0.2168,  0.1913,  0.1530,  0.1175,  0.0954,
0:          0.0792,  0.0577,  0.0271, -0.0116, -0.0455, -0.0748,  0.3751,  0.3506,  0.3261,  0.3013,  0.2786,  0.2651,
0:          0.2572], device='cuda:1')
0:   └─ Field: 'specific_humidity' shape: torch.Size([64, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([1.5257, 1.5809, 1.6347, 1.6928, 1.7497, 1.8028, 1.8446, 1.8864, 1.9193, 1.9653, 2.0232, 2.0939, 2.1934, 2.2773,
0:         2.3586, 2.4090, 2.4342, 2.4404, 1.5425, 1.5539, 1.6067, 1.6658, 1.7236, 1.7856, 1.8379], device='cuda:2')
0:   └─ Field: 'velocity_z' shape: torch.Size([64, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.0394, -0.0318, -0.0645, -0.0110,  0.0293,  0.0010,  0.0446,  0.0359,  0.1373,  0.1384,  0.1242,  0.1122,
0:         -0.0198, -0.0023, -0.1125, -0.0405,  0.0500,  0.0882, -0.0372, -0.0645, -0.0830, -0.0612, -0.0034, -0.0252,
0:          0.0708], device='cuda:3')
0:   └─ Field: 'temperature' shape: torch.Size([64, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
0:        device='cuda:3')
0:   └─ Field: 'total_precip' shape: torch.Size([64, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([-0.2297, -0.2297, -0.2297, -0.2297, -0.2297, -0.2297, -0.2297, -0.2297, -0.2297, -0.2297, -0.2297, -0.2297,
0:         -0.2297, -0.2297, -0.2297, -0.2297, -0.2297, -0.2297, -0.2297, -0.2297, -0.2297, -0.2297, -0.2297, -0.2297,
0:         -0.2297], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([64, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([ 0.1695,  0.0184,  0.0215, -0.0483, -0.1971, -0.7377, -1.0893, -1.3437, -1.4666, -1.5845, -1.5770, -1.3258,
0:         -1.1915, -1.0329, -0.9375, -0.8543, -0.8929, -0.9401, -0.9260, -0.6514, -0.6159, -0.5802, -0.4977, -0.3373,
0:         -0.4627], device='cuda:1')
0:   └─ Field: 'corrected_t2m' shape: torch.Size([64, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
0:        device='cuda:2')
0: [DEBUG] TRAIN TARGET BATCH
0: Epoch 0, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([1607, 2187])
0:     First 25 batch values:
0: tensor([ 0.4473,  0.3215,  0.1252, -0.3102, -0.7671, -1.1368, -1.2775, -1.2845, -1.2742, -1.3022, -1.4013, -1.5047,
0:         -1.3542, -1.0797, -0.7261, -0.4127, -0.2458, -0.0293,  0.2736,  0.4801,  0.4468,  0.3874,  0.2499,  0.1390,
0:          0.1005])
0: [DEBUG] TRAIN PREDICTIONS BATCH
0: Epoch 0, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([16533, 972])
0:      first 25 pred values: tensor([-0.7464, -0.7845, -0.8194, -0.8418, -0.8466, -0.8385, -0.8169, -0.7890, -0.7545, -0.7149, -0.6749, -0.6347,
0:         -0.6049, -0.5851, -0.5802, -0.5856, -0.6000, -0.6153, -0.7493, -0.7891, -0.8248, -0.8489, -0.8548, -0.8461,
0:         -0.8262], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([17233, 972])
0:      first 25 pred values: tensor([-0.0680, -0.0791, -0.0877, -0.1022, -0.1228, -0.1582, -0.1948, -0.2259, -0.2419, -0.2434, -0.2408, -0.2381,
0:         -0.2438, -0.2596, -0.2841, -0.3083, -0.3285, -0.3419, -0.1231, -0.1353, -0.1433, -0.1527, -0.1697, -0.1991,
0:         -0.2319], device='cuda:1', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([18166, 972])
0:      first 25 pred values: tensor([2.8161, 2.9606, 3.0860, 3.1902, 3.2685, 3.3292, 3.3311, 3.2585, 3.0915, 2.8158, 2.4783, 2.1233, 1.8018, 1.5684,
0:         1.4613, 1.4698, 1.5848, 1.7284, 2.8051, 2.9450, 3.0753, 3.1762, 3.2519, 3.2944, 3.2855], device='cuda:2',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([17949, 972])
0:      first 25 pred values: tensor([ 0.2411, -0.0107, -0.1678, -0.1956, -0.1943, -0.3167, -0.3371, -0.2538, -0.2630, -0.1977, -0.1078,  0.1132,
0:          0.4902,  0.5828,  0.2828, -0.2655, -1.0563, -1.6836,  0.0499, -0.1696, -0.2945, -0.2709, -0.1688, -0.2667,
0:         -0.2977], device='cuda:3', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([7651, 2187])
0:      first 25 pred values: tensor([1.7702, 1.8948, 1.9125, 1.8279, 1.6714, 1.4897, 1.3166, 1.1857, 1.1011, 1.0463, 0.9884, 0.9204, 0.8528, 0.7993,
0:         0.7902, 0.8247, 0.8889, 0.9650, 1.0366, 1.0903, 1.1302, 1.1590, 1.1777, 1.1890, 1.1857], device='cuda:3',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([6734, 243])
0:      first 25 pred values: tensor([0.2259, 0.1835, 0.1718, 0.1972, 0.0984, 0.1046, 0.0877, 0.1719, 0.2143, 0.3195, 0.2047, 0.1392, 0.1430, 0.1353,
0:         0.1705, 0.1792, 0.2917, 0.3551, 0.4347, 0.2856, 0.1479, 0.1110, 0.0770, 0.1473, 0.2689], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([1607, 2187])
0:      first 25 pred values: tensor([-0.0617, -0.0030, -0.0221,  0.0036,  0.0428,  0.0402,  0.0434,  0.0833,  0.0907,  0.1177,  0.1305,  0.1489,
0:          0.2053,  0.2455,  0.2763,  0.2848,  0.2965,  0.3459,  0.3237,  0.3877,  0.4188,  0.5188,  0.4796,  0.5001,
0:          0.5394], device='cuda:1', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'corrected_t2m' shape: torch.Size([1953, 2187])
0:      first 25 pred values: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
0:        device='cuda:2', grad_fn=<SliceBackward0>)
1: [DEBUG] TRAIN INPUT BATCH
1: Epoch 0, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([64, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
1:        device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([64, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([ 0.3315,  0.3056,  0.2813,  0.2588,  0.2409,  0.2330,  0.2276,  0.2168,  0.1913,  0.1530,  0.1175,  0.0954,
1:          0.0792,  0.0577,  0.0271, -0.0116, -0.0455, -0.0748,  0.3751,  0.3506,  0.3261,  0.3013,  0.2786,  0.2651,
1:          0.2572], device='cuda:1')
1:   └─ Field: 'specific_humidity' shape: torch.Size([64, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([1.5257, 1.5809, 1.6347, 1.6928, 1.7497, 1.8028, 1.8446, 1.8864, 1.9193, 1.9653, 2.0232, 2.0939, 2.1934, 2.2773,
1:         2.3586, 2.4090, 2.4342, 2.4404, 1.5425, 1.5539, 1.6067, 1.6658, 1.7236, 1.7856, 1.8379], device='cuda:2')
1:   └─ Field: 'velocity_z' shape: torch.Size([64, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.0394, -0.0318, -0.0645, -0.0110,  0.0293,  0.0010,  0.0446,  0.0359,  0.1373,  0.1384,  0.1242,  0.1122,
1:         -0.0198, -0.0023, -0.1125, -0.0405,  0.0500,  0.0882, -0.0372, -0.0645, -0.0830, -0.0612, -0.0034, -0.0252,
1:          0.0708], device='cuda:3')
1:   └─ Field: 'temperature' shape: torch.Size([64, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-0.0534,  0.1093, -0.0734, -0.1143, -0.1058, -0.1917, -0.0465,  0.1319, -0.0795, -0.0090,  0.1570,  0.0534,
1:         -0.0543, -0.0883,  0.0491,  0.0974, -0.0888, -0.0621,  0.1227,  0.0895, -0.1150,  0.0785,  0.1343,  0.0041,
1:         -0.0070], device='cuda:3')
1:   └─ Field: 'total_precip' shape: torch.Size([64, 1, 12, 6, 12, 3, 9, 9])
1:      first 25 values: tensor([-0.2297, -0.2297, -0.2297, -0.2297, -0.2297, -0.2297, -0.2297, -0.2297, -0.2297, -0.2297, -0.2297, -0.2297,
1:         -0.2297, -0.2297, -0.2297, -0.2297, -0.2297, -0.2297, -0.2297, -0.2297, -0.2297, -0.2297, -0.2297, -0.2297,
1:         -0.2297], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([64, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
1:        device='cuda:1')
1:   └─ Field: 'corrected_t2m' shape: torch.Size([64, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
1:        device='cuda:2')
1: [DEBUG] TRAIN TARGET BATCH
1: Epoch 0, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([1447, 2187])
1:     First 25 batch values:
1: tensor([1.3033, 1.2846, 1.2718, 1.2625, 1.2572, 1.2370, 1.2518, 1.2375, 1.2104, 1.0950, 0.9959, 0.9285, 0.9438, 1.0377,
1:         1.1255, 1.0493, 0.9562, 0.9147, 0.8598, 0.7657, 0.7677, 0.8105, 0.7647, 0.7187, 0.8105])
1: [DEBUG] TRAIN PREDICTIONS BATCH
1: Epoch 0, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([17768, 972])
1:      first 25 pred values: tensor([-0.9140, -0.9148, -0.9043, -0.8864, -0.8584, -0.8285, -0.8107, -0.8121, -0.8342, -0.8717, -0.9111, -0.9441,
1:         -0.9610, -0.9633, -0.9501, -0.9192, -0.8718, -0.8110, -0.8837, -0.8784, -0.8704, -0.8561, -0.8366, -0.8152,
1:         -0.8056], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([18077, 972])
1:      first 25 pred values: tensor([-0.4629, -0.4612, -0.4533, -0.4471, -0.4494, -0.4577, -0.4701, -0.4829, -0.4850, -0.4740, -0.4513, -0.4119,
1:         -0.3529, -0.2688, -0.1720, -0.0772, -0.0024,  0.0545, -0.4209, -0.4271, -0.4271, -0.4219, -0.4277, -0.4444,
1:         -0.4624], device='cuda:1', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([17400, 972])
1:      first 25 pred values: tensor([2.9509, 2.9379, 2.8992, 2.8491, 2.7883, 2.7255, 2.6666, 2.6311, 2.5915, 2.5354, 2.4484, 2.3345, 2.2089, 2.0862,
1:         1.9854, 1.9261, 1.8953, 1.8946, 3.0513, 3.0490, 3.0232, 2.9691, 2.9012, 2.8247, 2.7625], device='cuda:2',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([18313, 972])
1:      first 25 pred values: tensor([-0.7049, -1.1742, -1.1897, -0.9779, -0.9695, -1.4409, -2.2776, -2.8593, -2.7255, -2.0322, -1.3157, -0.8795,
1:         -0.6627, -0.5267, -0.3734, -0.1899,  0.0178,  0.1530, -0.6700, -1.2979, -1.4133, -1.2126, -1.2341, -1.6922,
1:         -2.4216], device='cuda:3', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([7828, 2187])
1:      first 25 pred values: tensor([1.5086, 1.3830, 1.2735, 1.2007, 1.1574, 1.1232, 1.0825, 1.0499, 1.0267, 1.0267, 1.0570, 1.1015, 1.1420, 1.1734,
1:         1.1720, 1.1433, 1.0797, 0.9959, 0.9085, 0.8308, 0.7737, 0.7406, 0.7308, 0.7432, 0.7648], device='cuda:3',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([7755, 243])
1:      first 25 pred values: tensor([ 0.7873,  0.5270,  0.2511,  0.0950, -0.0509, -0.0497, -0.0611,  0.0027,  0.0225,  0.8149,  0.6032,  0.3699,
1:          0.2079,  0.0751,  0.0477,  0.0212, -0.0069,  0.0063,  0.7551,  0.6081,  0.4537,  0.3933,  0.3028,  0.1822,
1:          0.0803], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([1447, 2187])
1:      first 25 pred values: tensor([0.8906, 0.9635, 0.9829, 0.9581, 1.0379, 1.0510, 1.0070, 1.0881, 0.9950, 1.0991, 1.0354, 1.1055, 1.1159, 1.0898,
1:         1.1293, 1.0789, 1.0689, 1.0592, 1.0944, 1.0869, 1.0392, 1.0216, 1.0159, 1.0541, 1.0016], device='cuda:1',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'corrected_t2m' shape: torch.Size([1579, 2187])
1:      first 25 pred values: tensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan],
1:        device='cuda:2', grad_fn=<SliceBackward0>)
0: epoch: 0 [1/7 (14%)]	Loss: nan : nan :: 0.07274 (1.47 s/sec)
0: epoch: 0 [2/7 (29%)]	Loss: nan : nan :: 0.06811 (15.53 s/sec)
0: epoch: 0 [3/7 (43%)]	Loss: nan : nan :: 0.07010 (15.53 s/sec)
0: epoch: 0 [4/7 (57%)]	Loss: nan : nan :: 0.06951 (15.59 s/sec)
0: epoch: 0 [5/7 (71%)]	Loss: nan : nan :: 0.07016 (15.07 s/sec)
0: epoch: 0 [6/7 (86%)]	Loss: nan : nan :: 0.06617 (4.28 s/sec)
