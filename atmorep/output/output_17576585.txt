0: Wandb run: atmorep-5st3wcej-17576585
0: l50081:3759905:3759905 [0] NCCL INFO Bootstrap : Using ib0:10.128.11.160<0>
0: l50081:3759905:3759905 [0] NCCL INFO NET/Plugin: No plugin found (libnccl-net.so)
0: l50081:3759905:3759905 [0] NCCL INFO NET/Plugin: Plugin load returned 2 : libnccl-net.so: cannot open shared object file: No such file or directory : when loading libnccl-net.so
0: l50081:3759905:3759905 [0] NCCL INFO NET/Plugin: Using internal network plugin.
0: l50081:3759905:3759905 [0] NCCL INFO cudaDriverVersion 12050
0: NCCL version 2.21.5+cuda12.4
0: l50081:3759905:3760269 [0] NCCL INFO NET/IB : Using [0]mlx5_0:1/IB [1]mlx5_1:1/IB [RO]; OOB ib0:10.128.11.160<0>
0: l50081:3759905:3760269 [0] NCCL INFO Using non-device net plugin version 0
0: l50081:3759905:3760269 [0] NCCL INFO Using network IB
0: l50081:3759905:3760269 [0] NCCL INFO ncclCommInitRank comm 0x55555f293060 rank 0 nranks 1 cudaDev 0 nvmlDev 0 busId 3000 commId 0x796fa3e2512454bb - Init START
0: l50081:3759905:3760269 [0] NCCL INFO Setting affinity for GPU 0 to 0f0000,00000000,00000000,00000000,000f0000,00000000
0: l50081:3759905:3760269 [0] NCCL INFO comm 0x55555f293060 rank 0 nRanks 1 nNodes 1 localRanks 1 localRank 0 MNNVL 0
0: l50081:3759905:3760269 [0] NCCL INFO Channel 00/32 :    0
0: l50081:3759905:3760269 [0] NCCL INFO Channel 01/32 :    0
0: l50081:3759905:3760269 [0] NCCL INFO Channel 02/32 :    0
0: l50081:3759905:3760269 [0] NCCL INFO Channel 03/32 :    0
0: l50081:3759905:3760269 [0] NCCL INFO Channel 04/32 :    0
0: l50081:3759905:3760269 [0] NCCL INFO Channel 05/32 :    0
0: l50081:3759905:3760269 [0] NCCL INFO Channel 06/32 :    0
0: l50081:3759905:3760269 [0] NCCL INFO Channel 07/32 :    0
0: l50081:3759905:3760269 [0] NCCL INFO Channel 08/32 :    0
0: l50081:3759905:3760269 [0] NCCL INFO Channel 09/32 :    0
0: l50081:3759905:3760269 [0] NCCL INFO Channel 10/32 :    0
0: l50081:3759905:3760269 [0] NCCL INFO Channel 11/32 :    0
0: l50081:3759905:3760269 [0] NCCL INFO Channel 12/32 :    0
0: l50081:3759905:3760269 [0] NCCL INFO Channel 13/32 :    0
0: l50081:3759905:3760269 [0] NCCL INFO Channel 14/32 :    0
0: l50081:3759905:3760269 [0] NCCL INFO Channel 15/32 :    0
0: l50081:3759905:3760269 [0] NCCL INFO Channel 16/32 :    0
0: l50081:3759905:3760269 [0] NCCL INFO Channel 17/32 :    0
0: l50081:3759905:3760269 [0] NCCL INFO Channel 18/32 :    0
0: l50081:3759905:3760269 [0] NCCL INFO Channel 19/32 :    0
0: l50081:3759905:3760269 [0] NCCL INFO Channel 20/32 :    0
0: l50081:3759905:3760269 [0] NCCL INFO Channel 21/32 :    0
0: l50081:3759905:3760269 [0] NCCL INFO Channel 22/32 :    0
0: l50081:3759905:3760269 [0] NCCL INFO Channel 23/32 :    0
0: l50081:3759905:3760269 [0] NCCL INFO Channel 24/32 :    0
0: l50081:3759905:3760269 [0] NCCL INFO Channel 25/32 :    0
0: l50081:3759905:3760269 [0] NCCL INFO Channel 26/32 :    0
0: l50081:3759905:3760269 [0] NCCL INFO Channel 27/32 :    0
0: l50081:3759905:3760269 [0] NCCL INFO Channel 28/32 :    0
0: l50081:3759905:3760269 [0] NCCL INFO Channel 29/32 :    0
0: l50081:3759905:3760269 [0] NCCL INFO Channel 30/32 :    0
0: l50081:3759905:3760269 [0] NCCL INFO Channel 31/32 :    0
0: l50081:3759905:3760269 [0] NCCL INFO Trees [0] -1/-1/-1->0->-1 [1] -1/-1/-1->0->-1 [2] -1/-1/-1->0->-1 [3] -1/-1/-1->0->-1 [4] -1/-1/-1->0->-1 [5] -1/-1/-1->0->-1 [6] -1/-1/-1->0->-1 [7] -1/-1/-1->0->-1 [8] -1/-1/-1->0->-1 [9] -1/-1/-1->0->-1 [10] -1/-1/-1->0->-1 [11] -1/-1/-1->0->-1 [12] -1/-1/-1->0->-1 [13] -1/-1/-1->0->-1 [14] -1/-1/-1->0->-1 [15] -1/-1/-1->0->-1 [16] -1/-1/-1->0->-1 [17] -1/-1/-1->0->-1 [18] -1/-1/-1->0->-1 [19] -1/-1/-1->0->-1 [20] -1/-1/-1->0->-1 [21] -1/-1/-1->0->-1 [22] -1/-1/-1->0->-1 [23] -1/-1/-1->0->-1 [24] -1/-1/-1->0->-1 [25] -1/-1/-1->0->-1 [26] -1/-1/-1->0->-1 [27] -1/-1/-1->0->-1 [28] -1/-1/-1->0->-1 [29] -1/-1/-1->0->-1 [30] -1/-1/-1->0->-1 [31] -1/-1/-1->0->-1
0: l50081:3759905:3760269 [0] NCCL INFO P2P Chunksize set to 131072
0: l50081:3759905:3760269 [0] NCCL INFO Connected all rings
0: l50081:3759905:3760269 [0] NCCL INFO Connected all trees
0: l50081:3759905:3760269 [0] NCCL INFO 32 coll channels, 32 collnet channels, 0 nvls channels, 32 p2p channels, 32 p2p channels per peer
0: l50081:3759905:3760269 [0] NCCL INFO TUNER/Plugin: Plugin load returned 11 : libnccl-net.so: cannot open shared object file: No such file or directory : when loading libnccl-tuner.so
0: l50081:3759905:3760269 [0] NCCL INFO TUNER/Plugin: Using internal tuner plugin.
0: l50081:3759905:3760269 [0] NCCL INFO ncclCommInitRank comm 0x55555f293060 rank 0 nranks 1 cudaDev 0 nvmlDev 0 busId 3000 commId 0x796fa3e2512454bb - Init COMPLETE
0: Running Evaluate.evaluate with mode = BERT
0: Available keys in the Zarr dataset: ['data', 'data_sfc', 'lats', 'lons', 'time']
0: self.ds['data'] : (105192, 7, 5, 721, 1440) :: (105192,)
0: self.lats : (721,)
0: self.lons : (1440,)
0: Available keys in the Zarr dataset: ['data', 'data_sfc', 'lats', 'lons', 'time']
0: self.ds['data'] : (105192, 7, 5, 721, 1440) :: (105192,)
0: self.lats : (721,)
0: self.lons : (1440,)
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 1
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 2
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 3
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 3
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: Loaded model id = wc5e2i3t.
0: with_ddp : True
0: num_accs_per_task : 4
0: par_rank : 0
0: par_size : 1
0: fields : [['velocity_u', [1, 1024, ['velocity_v', 'temperature'], 0, ['j8dwr5qj', -2]], [96, 105, 114, 123, 137], [12, 3, 6], [3, 18, 18], [0.5, 0.9, 0.2, 0.05]], ['velocity_v', [1, 1024, ['velocity_u', 'temperature'], 1, ['0tlnm5up', -2]], [96, 105, 114, 123, 137], [12, 3, 6], [3, 18, 18], [0.5, 0.9, 0.2, 0.05]], ['specific_humidity', [1, 1024, ['velocity_u', 'velocity_v', 'temperature'], 2, ['v63l01zu', -2]], [96, 105, 114, 123, 137], [12, 3, 6], [3, 18, 18], [0.5, 0.9, 0.2, 0.05]], ['velocity_z', [1, 1024, ['velocity_u', 'velocity_v', 'temperature'], 3, ['9l1errbo', -2]], [96, 105, 114, 123, 137], [12, 3, 6], [3, 18, 18], [0.5, 0.9, 0.2, 0.05]], ['temperature', [1, 1024, ['velocity_u', 'velocity_v', 'specific_humidity'], 3, ['7ojls62c', -2]], [96, 105, 114, 123, 137], [12, 2, 4], [3, 27, 27], [0.5, 0.9, 0.2, 0.05], 'local'], ['total_precip', [1, 1024, ['velocity_u', 'velocity_v', 'velocity_z', 'specific_humidity'], 0], [0], [12, 6, 12], [3, 9, 9], [0.25, 0.9, 0.1, 0.05]]]
0: fields_prediction : [['velocity_u', 0.225], ['velocity_v', 0.225], ['specific_humidity', 0.15], ['velocity_z', 0.1], ['temperature', 0.2], ['total_precip', 0.1]]
0: fields_targets : []
0: years_train : [1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]
0: years_val : [2021]
0: month : None
0: geo_range_sampling : [[-90.0, 90.0], [0.0, 360.0]]
0: time_sampling : 1
0: torch_seed : 5521420987310380410
0: batch_size_validation : 1
0: batch_size : 96
0: num_epochs : 128
0: num_samples_per_epoch : 49152
0: num_samples_validate : 96
0: num_loader_workers : 5
0: size_token_info : 8
0: size_token_info_net : 16
0: grad_checkpointing : True
0: with_cls : False
0: with_mixed_precision : True
0: with_layernorm : True
0: coupling_num_heads_per_field : 1
0: dropout_rate : 0.05
0: with_qk_lnorm : True
0: encoder_num_layers : 6
0: encoder_num_heads : 16
0: encoder_num_mlp_layers : 2
0: encoder_att_type : dense
0: decoder_num_layers : 6
0: decoder_num_heads : 16
0: decoder_num_mlp_layers : 2
0: decoder_self_att : False
0: decoder_cross_att_ratio : 0.5
0: decoder_cross_att_rate : 1.0
0: decoder_att_type : dense
0: net_tail_num_nets : 16
0: net_tail_num_layers : 0
0: losses : ['mse_ensemble', 'stats']
0: optimizer_zero : False
0: lr_start : 1e-05
0: lr_max : 2e-05
0: lr_min : 1e-05
0: weight_decay : 0.025
0: lr_decay_rate : 1.025
0: lr_start_epochs : 3
0: model_log_frequency : 256
0: BERT_strategy : BERT
0: forecast_num_tokens : 2
0: BERT_fields_synced : False
0: BERT_mr_max : 2
0: log_test_num_ranks : 4
0: save_grads : False
0: profile : False
0: test_initial : False
0: attention : False
0: rng_seed : None
0: with_wandb : True
0: slurm_job_id : 17576585
0: wandb_id : 5st3wcej
0: file_path : /work/ab1412/atmorep/data/era5_y2010_2020_res25.zarr
0: n_size : [36, 13.5, 27.0]
0: model_id : wc5e2i3t
0: with_pytest : True
0: lat_sampling_weighted : False
0: [DEBUG] PREDICTIONS VALIDATION BATCH
0: Normalised validation prediction values for 'total_precip' with shape: torch.Size([36, 243])
0:          min = -0.000, max = 0.001, mean = 0.000
0:          sample (first 20): tensor([5.7328e-05, 5.3466e-05, 4.4936e-05, 3.7227e-05, 2.8970e-05, 2.3036e-05, 1.7634e-05, 1.5057e-05, 1.4253e-05,
0:         5.2952e-05, 4.6241e-05, 3.8274e-05, 2.8782e-05, 2.0907e-05, 1.5199e-05, 1.1567e-05, 9.5090e-06, 9.2844e-06,
0:         4.1899e-05, 3.6818e-05])
0: validation loss for strategy=BERT at epoch 0 : 0.07810530811548233
0: validation loss for velocity_u : 0.003099390072748065
0: validation loss for velocity_v : 0.004924414213746786
0: validation loss for specific_humidity : 0.006643242668360472
0: validation loss for velocity_z : 0.10649044066667557
0: validation loss for temperature : 0.0214571263641119
0: validation loss for total_precip : 0.326017290353775
0: ============================= test session starts ==============================
0: platform linux -- Python 3.10.10, pytest-8.3.4, pluggy-1.5.0
0: rootdir: /work/ab1412
0: collected 3 items
0: 
0: atmorep/tests/validation_test.py Sample 86, Level 96: Timestamp 2021-08-27 15:00:00, Shape (18, 18)
0: Sample 23, Level 96: Timestamp 2021-02-14 09:00:00, Shape (18, 18)
0: Sample 64, Level 96: Timestamp 2021-09-09 01:00:00, Shape (18, 18)
0: Sample 93, Level 96: Timestamp 2021-09-01 06:00:00, Shape (18, 18)
0: Sample 80, Level 96: Timestamp 2021-02-20 21:00:00, Shape (18, 18)
0: ..F
0: 
0: =================================== FAILURES ===================================
0: __________________________________ test_rmse ___________________________________
0: 
0: field = 'velocity_u', model_id = '5st3wcej', BERT = True, epoch = 0
0: 
0:     def test_rmse(field, model_id, BERT, epoch = 0):
0:         """
0:         Test that for each field the RMSE does not exceed a certain value.
0:         50 random samples.
0:         """
0:         store_t = zarr.ZipStore(atmorep_target().format(model_id, model_id, str(epoch).zfill(5)))
0:         target = zarr.group(store_t)
0:     
0:         store_p = zarr.ZipStore(atmorep_pred().format(model_id, model_id, str(epoch).zfill(5)))
0:         pred = zarr.group(store_p)
0:     
0:         nsamples = min(len(target[field]), 50)
0:         samples = rnd.sample(range(len(target[field])), nsamples)
0:         levels = [int(f.split("=")[1]) for f in target[f"{field}/sample=00000"]] if BERT else target[f"{field}/sample=00000"].ml[:]
0:     
0:         get_data = get_BERT if BERT else get_forecast
0:     
0:         for level in levels:
0:             level_idx = level if BERT else np.where(levels == level)[0].tolist()[0]
0:             for s in samples:
0:                 sample_target, _, _, _ = get_data(target,field, s, level_idx)
0:                 sample_pred, _, _, _ = get_data(pred,field, s, level_idx)
0:     
0: >               assert compute_RMSE(sample_target, sample_pred).mean() < get_max_RMSE(field)
0: E               AssertionError: assert np.float32(0.70111424) < 0.55
0: E                +  where np.float32(0.70111424) = <built-in method mean of numpy.float32 object at 0x7ffe3c258bd0>()
0: E                +    where <built-in method mean of numpy.float32 object at 0x7ffe3c258bd0> = np.float32(0.70111424).mean
0: E                +      where np.float32(0.70111424) = compute_RMSE(array([[-2.9799733 , -3.020989  , -3.1596608 , -3.2495046 , -2.6596608 ,\n        -1.692864  , -1.6069264 , -1.9330983 ...3 ,  6.910652  ,  7.816902  ,  8.518074  ,  8.55909   ,\n         8.930183  ,  9.385262  ,  9.174324  ]], dtype=float32), array([[-2.73353243e+00, -2.71696138e+00, -2.64543676e+00,\n        -2.51297045e+00, -2.42470980e+00, -2.37726736e+00,\n...0801e+00,  7.79099607e+00,  8.07178593e+00,\n         8.32625103e+00,  8.56617546e+00,  8.72061253e+00]], dtype=float32))
0: E                +  and   0.55 = get_max_RMSE('velocity_u')
0: 
0: atmorep/tests/validation_test.py:196: AssertionError
0: =========================== short test summary info ============================
0: FAILED atmorep/tests/validation_test.py::test_rmse - AssertionError: assert n...
0: !!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!
0: ========================= 1 failed, 2 passed in 13.59s =========================
0: ============================= test session starts ==============================
0: platform linux -- Python 3.10.10, pytest-8.3.4, pluggy-1.5.0
0: rootdir: /work/ab1412
0: collected 3 items
0: 
0: atmorep/tests/validation_test.py Sample 48, Level 96: Timestamp 2021-03-15 15:00:00, Shape (18, 18)
0: Sample 51, Level 96: Timestamp 2021-06-01 12:00:00, Shape (18, 18)
0: Sample 95, Level 96: Timestamp 2021-02-01 04:00:00, Shape (18, 18)
0: Sample 89, Level 96: Timestamp 2021-04-25 08:00:00, Shape (18, 18)
0: Sample 82, Level 96: Timestamp 2021-03-06 03:00:00, Shape (18, 18)
0: ..F
0: 
0: =================================== FAILURES ===================================
0: __________________________________ test_rmse ___________________________________
0: 
0: field = 'velocity_v', model_id = '5st3wcej', BERT = True, epoch = 0
0: 
0:     def test_rmse(field, model_id, BERT, epoch = 0):
0:         """
0:         Test that for each field the RMSE does not exceed a certain value.
0:         50 random samples.
0:         """
0:         store_t = zarr.ZipStore(atmorep_target().format(model_id, model_id, str(epoch).zfill(5)))
0:         target = zarr.group(store_t)
0:     
0:         store_p = zarr.ZipStore(atmorep_pred().format(model_id, model_id, str(epoch).zfill(5)))
0:         pred = zarr.group(store_p)
0:     
0:         nsamples = min(len(target[field]), 50)
0:         samples = rnd.sample(range(len(target[field])), nsamples)
0:         levels = [int(f.split("=")[1]) for f in target[f"{field}/sample=00000"]] if BERT else target[f"{field}/sample=00000"].ml[:]
0:     
0:         get_data = get_BERT if BERT else get_forecast
0:     
0:         for level in levels:
0:             level_idx = level if BERT else np.where(levels == level)[0].tolist()[0]
0:             for s in samples:
0:                 sample_target, _, _, _ = get_data(target,field, s, level_idx)
0:                 sample_pred, _, _, _ = get_data(pred,field, s, level_idx)
0:     
0: >               assert compute_RMSE(sample_target, sample_pred).mean() < get_max_RMSE(field)
0: E               AssertionError: assert np.float32(0.7808606) < 0.55
0: E                +  where np.float32(0.7808606) = <built-in method mean of numpy.float32 object at 0x7fffa17f4fd0>()
0: E                +    where <built-in method mean of numpy.float32 object at 0x7fffa17f4fd0> = np.float32(0.7808606).mean
0: E                +      where np.float32(0.7808606) = compute_RMSE(array([[-7.032715 , -6.913574 , -6.864746 , -6.737793 , -6.538574 ,\n        -6.188965 , -5.739746 , -5.5151367, -5.364...4.11084  , -5.5737305, -7.54834  , -7.6694336, -6.04248  ,\n        -6.8374023, -7.128418 , -4.657715 ]], dtype=float32), array([[-7.2366524, -7.043061 , -6.897454 , -6.7373548, -6.4922647,\n        -6.1119184, -5.7348723, -5.485864 , -5.339...4.730917 , -5.852858 , -7.008639 , -7.8307266, -7.969786 ,\n        -7.197773 , -5.7177496, -4.157717 ]], dtype=float32))
0: E                +  and   0.55 = get_max_RMSE('velocity_v')
0: 
0: atmorep/tests/validation_test.py:196: AssertionError
0: =========================== short test summary info ============================
0: FAILED atmorep/tests/validation_test.py::test_rmse - AssertionError: assert n...
0: !!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!
0: ========================= 1 failed, 2 passed in 3.18s ==========================
0: ============================= test session starts ==============================
0: platform linux -- Python 3.10.10, pytest-8.3.4, pluggy-1.5.0
0: rootdir: /work/ab1412
0: collected 3 items
0: 
0: atmorep/tests/validation_test.py Sample 34, Level 96: Timestamp 2021-09-10 14:00:00, Shape (18, 18)
0: Sample 42, Level 96: Timestamp 2021-04-08 19:00:00, Shape (18, 18)
0: Sample 16, Level 96: Timestamp 2021-03-12 03:00:00, Shape (18, 18)
0: Sample 43, Level 96: Timestamp 2021-04-18 15:00:00, Shape (18, 18)
0: Sample 79, Level 96: Timestamp 2021-02-15 21:00:00, Shape (18, 18)
0: ...
0: 
0: ============================== 3 passed in 3.06s ===============================
0: ============================= test session starts ==============================
0: platform linux -- Python 3.10.10, pytest-8.3.4, pluggy-1.5.0
0: rootdir: /work/ab1412
0: collected 3 items
0: 
0: atmorep/tests/validation_test.py Sample 37, Level 96: Timestamp 2021-04-24 17:00:00, Shape (18, 18)
0: Sample 12, Level 96: Timestamp 2021-09-30 05:00:00, Shape (18, 18)
0: Sample 22, Level 96: Timestamp 2021-02-17 21:00:00, Shape (18, 18)
0: Sample 42, Level 96: Timestamp 2021-04-09 04:00:00, Shape (18, 18)
0: Sample 83, Level 96: Timestamp 2021-09-08 08:00:00, Shape (18, 18)
0: ..F
0: 
0: =================================== FAILURES ===================================
0: __________________________________ test_rmse ___________________________________
0: 
0: field = 'velocity_z', model_id = '5st3wcej', BERT = True, epoch = 0
0: 
0:     def test_rmse(field, model_id, BERT, epoch = 0):
0:         """
0:         Test that for each field the RMSE does not exceed a certain value.
0:         50 random samples.
0:         """
0:         store_t = zarr.ZipStore(atmorep_target().format(model_id, model_id, str(epoch).zfill(5)))
0:         target = zarr.group(store_t)
0:     
0:         store_p = zarr.ZipStore(atmorep_pred().format(model_id, model_id, str(epoch).zfill(5)))
0:         pred = zarr.group(store_p)
0:     
0:         nsamples = min(len(target[field]), 50)
0:         samples = rnd.sample(range(len(target[field])), nsamples)
0:         levels = [int(f.split("=")[1]) for f in target[f"{field}/sample=00000"]] if BERT else target[f"{field}/sample=00000"].ml[:]
0:     
0:         get_data = get_BERT if BERT else get_forecast
0:     
0:         for level in levels:
0:             level_idx = level if BERT else np.where(levels == level)[0].tolist()[0]
0:             for s in samples:
0:                 sample_target, _, _, _ = get_data(target,field, s, level_idx)
0:                 sample_pred, _, _, _ = get_data(pred,field, s, level_idx)
0:     
0: >               assert compute_RMSE(sample_target, sample_pred).mean() < get_max_RMSE(field)
0: E               AssertionError: assert np.float32(0.27393618) < 0.25
0: E                +  where np.float32(0.27393618) = <built-in method mean of numpy.float32 object at 0x7fffa2b175d0>()
0: E                +    where <built-in method mean of numpy.float32 object at 0x7fffa2b175d0> = np.float32(0.27393618).mean
0: E                +      where np.float32(0.27393618) = compute_RMSE(array([[ 0.11143208,  0.09824848,  0.14658833,  0.21055317,  0.15830708,\n        -0.02870464, -0.11464214,  0.03330708...3 ,  0.6988344 ,  0.49766257,  0.16758442, -0.28700542,\n        -0.7796812 , -0.97108746, -0.72401714]], dtype=float32), array([[ 8.06578472e-02,  1.04349129e-01,  1.51750728e-01,\n         1.90255195e-01,  1.76021442e-01,  1.37308195e-01,\n...4759e-01,  2.71902412e-01, -5.68719022e-02,\n        -5.37649632e-01, -8.91758621e-01, -1.03061366e+00]], dtype=float32))
0: E                +  and   0.25 = get_max_RMSE('velocity_z')
0: 
0: atmorep/tests/validation_test.py:196: AssertionError
0: =========================== short test summary info ============================
0: FAILED atmorep/tests/validation_test.py::test_rmse - AssertionError: assert n...
0: !!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!
0: ========================= 1 failed, 2 passed in 2.03s ==========================
0: ============================= test session starts ==============================
0: platform linux -- Python 3.10.10, pytest-8.3.4, pluggy-1.5.0
0: rootdir: /work/ab1412
0: collected 3 items
0: 
0: atmorep/tests/validation_test.py Sample 31, Level 96: Timestamp 2021-01-05 06:00:00, Shape (27, 27)
0: Sample 15, Level 96: Timestamp 2021-07-29 04:00:00, Shape (27, 27)
0: Sample 10, Level 96: Timestamp 2021-05-07 01:00:00, Shape (27, 27)
0: Sample 26, Level 96: Timestamp 2021-06-22 10:00:00, Shape (27, 27)
0: Sample 37, Level 96: Timestamp 2021-04-24 17:00:00, Shape (27, 27)
0: ...
0: 
0: ============================== 3 passed in 2.23s ===============================
0: ============================= test session starts ==============================
0: platform linux -- Python 3.10.10, pytest-8.3.4, pluggy-1.5.0
0: rootdir: /work/ab1412
0: collected 3 items
0: 
0: atmorep/tests/validation_test.py Sample 35, Level 0: Timestamp 2021-07-20 03:00:00, Shape (9, 9)
0: Sample 30, Level 0: Timestamp 2021-06-26 16:00:00, Shape (9, 9)
0: Sample 0, Level 0: Timestamp 2021-04-09 06:00:00, Shape (9, 9)
0: Sample 36, Level 0: Timestamp 2021-03-29 11:00:00, Shape (9, 9)
0: Sample 22, Level 0: Timestamp 2021-02-17 15:00:00, Shape (9, 9)
0: ...
0: 
0: ============================== 3 passed in 1.12s ===============================
0: time 321.8671691417694
0: [1;34mwandb[0m:
0: [1;34mwandb[0m: You can sync this run to the cloud by running:
0: [1;34mwandb[0m: [1mwandb sync /work/ab1412/atmorep/wandb/offline-run-20250611_191231-5st3wcej[0m
0: [1;34mwandb[0m: Find logs at: [1;35mwandb/offline-run-20250611_191231-5st3wcej/logs[0m
0: l50081:3759905:3760272 [0] NCCL INFO [Service thread] Connection closed by localRank 0
0: l50081:3759905:3760876 [0] NCCL INFO comm 0x55555f293060 rank 0 nranks 1 cudaDev 0 busId 3000 - Abort COMPLETE
