0: Wandb run: atmorep-fz3n9mzn-18563939
0: l50112:3626555:3626555 [0] NCCL INFO Bootstrap : Using ib0:10.128.11.170<0>
0: l50112:3626555:3626555 [0] NCCL INFO NET/Plugin: No plugin found (libnccl-net.so)
0: l50112:3626555:3626555 [0] NCCL INFO NET/Plugin: Plugin load returned 2 : libnccl-net.so: cannot open shared object file: No such file or directory : when loading libnccl-net.so
0: l50112:3626555:3626555 [0] NCCL INFO NET/Plugin: Using internal network plugin.
0: l50112:3626555:3626555 [0] NCCL INFO cudaDriverVersion 12060
0: NCCL version 2.21.5+cuda12.4
1: l50151:2704917:2704917 [0] NCCL INFO cudaDriverVersion 12060
1: l50151:2704917:2704917 [0] NCCL INFO Bootstrap : Using ib0:10.128.11.196<0>
1: l50151:2704917:2704917 [0] NCCL INFO NET/Plugin: No plugin found (libnccl-net.so)
1: l50151:2704917:2704917 [0] NCCL INFO NET/Plugin: Plugin load returned 2 : libnccl-net.so: cannot open shared object file: No such file or directory : when loading libnccl-net.so
1: l50151:2704917:2704917 [0] NCCL INFO NET/Plugin: Using internal network plugin.
0: l50112:3626555:3626952 [0] NCCL INFO NET/IB : Using [0]mlx5_0:1/IB [1]mlx5_1:1/IB [RO]; OOB ib0:10.128.11.170<0>
0: l50112:3626555:3626952 [0] NCCL INFO Using non-device net plugin version 0
0: l50112:3626555:3626952 [0] NCCL INFO Using network IB
0: l50112:3626555:3626952 [0] NCCL INFO DMA-BUF is available on GPU device 0
1: l50151:2704917:2705078 [0] NCCL INFO NET/IB : Using [0]mlx5_0:1/IB [1]mlx5_1:1/IB [RO]; OOB ib0:10.128.11.196<0>
1: l50151:2704917:2705078 [0] NCCL INFO Using non-device net plugin version 0
1: l50151:2704917:2705078 [0] NCCL INFO Using network IB
1: l50151:2704917:2705078 [0] NCCL INFO DMA-BUF is available on GPU device 0
0: l50112:3626555:3626952 [0] NCCL INFO ncclCommInitRank comm 0x55555f0e7390 rank 0 nranks 2 cudaDev 0 nvmlDev 0 busId 3000 commId 0x7acedb288dc0005f - Init START
1: l50151:2704917:2705078 [0] NCCL INFO ncclCommInitRank comm 0x55555ec9c6c0 rank 1 nranks 2 cudaDev 0 nvmlDev 0 busId 3000 commId 0x7acedb288dc0005f - Init START
1: l50151:2704917:2705078 [0] NCCL INFO Setting affinity for GPU 0 to ffff0000,00000000,00000000,00000000,ffff0000,00000000
0: l50112:3626555:3626952 [0] NCCL INFO Setting affinity for GPU 0 to ffff0000,00000000,00000000,00000000,ffff0000,00000000
0: l50112:3626555:3626952 [0] NCCL INFO comm 0x55555f0e7390 rank 0 nRanks 2 nNodes 2 localRanks 1 localRank 0 MNNVL 0
0: l50112:3626555:3626952 [0] NCCL INFO Channel 00/04 :    0   1
0: l50112:3626555:3626952 [0] NCCL INFO Channel 01/04 :    0   1
0: l50112:3626555:3626952 [0] NCCL INFO Channel 02/04 :    0   1
0: l50112:3626555:3626952 [0] NCCL INFO Channel 03/04 :    0   1
0: l50112:3626555:3626952 [0] NCCL INFO Trees [0] 1/-1/-1->0->-1 [1] 1/-1/-1->0->-1 [2] -1/-1/-1->0->1 [3] -1/-1/-1->0->1
0: l50112:3626555:3626952 [0] NCCL INFO P2P Chunksize set to 131072
1: l50151:2704917:2705078 [0] NCCL INFO comm 0x55555ec9c6c0 rank 1 nRanks 2 nNodes 2 localRanks 1 localRank 0 MNNVL 0
1: l50151:2704917:2705078 [0] NCCL INFO Trees [0] -1/-1/-1->1->0 [1] -1/-1/-1->1->0 [2] 0/-1/-1->1->-1 [3] 0/-1/-1->1->-1
1: l50151:2704917:2705078 [0] NCCL INFO P2P Chunksize set to 131072
0: l50112:3626555:3626952 [0] NCCL INFO Channel 00/0 : 1[0] -> 0[0] [receive] via NET/IB/0
0: l50112:3626555:3626952 [0] NCCL INFO Channel 01/0 : 1[0] -> 0[0] [receive] via NET/IB/1
0: l50112:3626555:3626952 [0] NCCL INFO Channel 02/0 : 1[0] -> 0[0] [receive] via NET/IB/0
0: l50112:3626555:3626952 [0] NCCL INFO Channel 03/0 : 1[0] -> 0[0] [receive] via NET/IB/1
0: l50112:3626555:3626952 [0] NCCL INFO Channel 00/0 : 0[0] -> 1[0] [send] via NET/IB/0
0: l50112:3626555:3626952 [0] NCCL INFO Channel 01/0 : 0[0] -> 1[0] [send] via NET/IB/1
0: l50112:3626555:3626952 [0] NCCL INFO Channel 02/0 : 0[0] -> 1[0] [send] via NET/IB/0
0: l50112:3626555:3626952 [0] NCCL INFO Channel 03/0 : 0[0] -> 1[0] [send] via NET/IB/1
1: l50151:2704917:2705078 [0] NCCL INFO Channel 00/0 : 0[0] -> 1[0] [receive] via NET/IB/0
1: l50151:2704917:2705078 [0] NCCL INFO Channel 01/0 : 0[0] -> 1[0] [receive] via NET/IB/1
1: l50151:2704917:2705078 [0] NCCL INFO Channel 02/0 : 0[0] -> 1[0] [receive] via NET/IB/0
1: l50151:2704917:2705078 [0] NCCL INFO Channel 03/0 : 0[0] -> 1[0] [receive] via NET/IB/1
1: l50151:2704917:2705078 [0] NCCL INFO Channel 00/0 : 1[0] -> 0[0] [send] via NET/IB/0
1: l50151:2704917:2705078 [0] NCCL INFO Channel 01/0 : 1[0] -> 0[0] [send] via NET/IB/1
1: l50151:2704917:2705078 [0] NCCL INFO Channel 02/0 : 1[0] -> 0[0] [send] via NET/IB/0
1: l50151:2704917:2705078 [0] NCCL INFO Channel 03/0 : 1[0] -> 0[0] [send] via NET/IB/1
1: l50151:2704917:2705081 [0] NCCL INFO NCCL_IB_TIMEOUT set by environment to 250.
1: l50151:2704917:2705081 [0] NCCL INFO NCCL_IB_RETRY_CNT set by environment to 50.
0: l50112:3626555:3626955 [0] NCCL INFO NCCL_IB_TIMEOUT set by environment to 250.
0: l50112:3626555:3626955 [0] NCCL INFO NCCL_IB_RETRY_CNT set by environment to 50.
0: l50112:3626555:3626952 [0] NCCL INFO Connected all rings
1: l50151:2704917:2705078 [0] NCCL INFO Connected all rings
0: l50112:3626555:3626952 [0] NCCL INFO Connected all trees
1: l50151:2704917:2705078 [0] NCCL INFO Connected all trees
1: l50151:2704917:2705078 [0] NCCL INFO threadThresholds 8/8/64 | 16/8/64 | 512 | 512
1: l50151:2704917:2705078 [0] NCCL INFO 4 coll channels, 4 collnet channels, 0 nvls channels, 4 p2p channels, 2 p2p channels per peer
0: l50112:3626555:3626952 [0] NCCL INFO threadThresholds 8/8/64 | 16/8/64 | 512 | 512
0: l50112:3626555:3626952 [0] NCCL INFO 4 coll channels, 4 collnet channels, 0 nvls channels, 4 p2p channels, 2 p2p channels per peer
0: l50112:3626555:3626952 [0] NCCL INFO TUNER/Plugin: Plugin load returned 11 : libnccl-net.so: cannot open shared object file: No such file or directory : when loading libnccl-tuner.so
0: l50112:3626555:3626952 [0] NCCL INFO TUNER/Plugin: Using internal tuner plugin.
0: l50112:3626555:3626952 [0] NCCL INFO ncclCommInitRank comm 0x55555f0e7390 rank 0 nranks 2 cudaDev 0 nvmlDev 0 busId 3000 commId 0x7acedb288dc0005f - Init COMPLETE
1: l50151:2704917:2705078 [0] NCCL INFO TUNER/Plugin: Plugin load returned 11 : libnccl-net.so: cannot open shared object file: No such file or directory : when loading libnccl-tuner.so
1: l50151:2704917:2705078 [0] NCCL INFO TUNER/Plugin: Using internal tuner plugin.
1: l50151:2704917:2705078 [0] NCCL INFO ncclCommInitRank comm 0x55555ec9c6c0 rank 1 nranks 2 cudaDev 0 nvmlDev 0 busId 3000 commId 0x7acedb288dc0005f - Init COMPLETE
0: with_ddp : True
0: num_accs_per_task : 1
0: par_rank : 0
0: par_size : 2
0: fields : [['velocity_u', [1, 1024, ['velocity_v', 'temperature'], 0, ['j8dwr5qj', -2]], [96, 105, 114, 123, 137], [12, 3, 6], [3, 18, 18], [0.5, 0.9, 0.2, 0.05]], ['velocity_v', [1, 1024, ['velocity_u', 'temperature'], 0, ['0tlnm5up', -2]], [96, 105, 114, 123, 137], [12, 3, 6], [3, 18, 18], [0.5, 0.9, 0.2, 0.05]], ['specific_humidity', [1, 1024, ['velocity_u', 'velocity_v', 'temperature'], 0, ['v63l01zu', -2]], [96, 105, 114, 123, 137], [12, 3, 6], [3, 18, 18], [0.5, 0.9, 0.2, 0.05]], ['velocity_z', [1, 1024, ['velocity_u', 'velocity_v', 'temperature'], 0, ['9l1errbo', -2]], [96, 105, 114, 123, 137], [12, 3, 6], [3, 18, 18], [0.5, 0.9, 0.2, 0.05]], ['temperature', [1, 1024, ['velocity_u', 'velocity_v', 'specific_humidity'], 0, ['7ojls62c', -2]], [96, 105, 114, 123, 137], [12, 2, 4], [3, 27, 27], [0.5, 0.9, 0.2, 0.05], 'Local'], ['total_precip', [1, 1024, ['velocity_u', 'velocity_v', 'velocity_z', 'specific_humidity'], 0], [0], [12, 6, 12], [3, 9, 9], [0.25, 0.9, 0.1, 0.05]], ['t2m', [1, 1024, ['velocity_u', '
0: velocity_v', 'velocity_z', 'specific_humidity'], 0], [0], [12, 2, 4], [3, 27, 27], [0.5, 0.9, 0.2, 0.05], 'Local']]
0: fields_prediction : [['velocity_u', 0.125], ['velocity_v', 0.125], ['specific_humidity', 0.05], ['velocity_z', 0.01], ['temperature', 0.1], ['total_precip', 0.01], ['t2m', 0.58]]
0: fields_targets : []
0: years_train : [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]
0: years_val : [2021]
0: month : None
0: geo_range_sampling : [[0.0, 360.0], [0.0, 360.0]]
0: time_sampling : 1
0: torch_seed : 5521420987310380410
0: batch_size_validation : 1
0: batch_size : 96
0: num_epochs : 128
0: num_samples_per_epoch : 480
0: num_samples_validate : 128
0: num_loader_workers : 5
0: size_token_info : 8
0: size_token_info_net : 16
0: grad_checkpointing : True
0: with_cls : False
0: with_mixed_precision : True
0: with_layernorm : True
0: coupling_num_heads_per_field : 1
0: dropout_rate : 0.05
0: with_qk_lnorm : True
0: encoder_num_layers : 6
0: encoder_num_heads : 16
0: encoder_num_mlp_layers : 2
0: encoder_att_type : dense
0: decoder_num_layers : 6
0: decoder_num_heads : 16
0: decoder_num_mlp_layers : 2
0: decoder_self_att : False
0: decoder_cross_att_ratio : 0.5
0: decoder_cross_att_rate : 1.0
0: decoder_att_type : dense
0: net_tail_num_nets : 16
0: net_tail_num_layers : 0
0: losses : ['mse_ensemble', 'stats']
0: optimizer_zero : False
0: lr_start : 1e-05
0: lr_max : 2e-05
0: lr_min : 1e-05
0: weight_decay : 0.025
0: lr_decay_rate : 1.025
0: lr_start_epochs : 3
0: model_log_frequency : 256
0: BERT_strategy : BERT
0: forecast_num_tokens : 2
0: BERT_fields_synced : False
0: BERT_mr_max : 2
0: log_test_num_ranks : 0
0: save_grads : False
0: profile : False
0: test_initial : False
0: attention : False
0: rng_seed : None
0: with_wandb : True
0: slurm_job_id : 18563939
0: wandb_id : fz3n9mzn
0: file_path : /work/ab1412/atmorep/data/era5_y2010_2020_res25_with_t2m.zarr
0: n_size : [36, 13.5, 27.0]
0: model_id : hjbmsjft
0: years_test : [2021]
1: Available keys in the Zarr dataset: ['data', 'data_sfc', 'lats', 'lons', 'time']
0: Available keys in the Zarr dataset: ['data', 'data_sfc', 'lats', 'lons', 'time']
1: self.ds['data'] : (105192, 7, 5, 721, 1440) :: (105192,)
1: self.lats : (721,)
1: self.lons : (1440,)
0: self.ds['data'] : (105192, 7, 5, 721, 1440) :: (105192,)
0: self.lats : (721,)
0: self.lons : (1440,)
0: Available keys in the Zarr dataset: ['data', 'data_sfc', 'lats', 'lons', 'time']
1: Available keys in the Zarr dataset: ['data', 'data_sfc', 'lats', 'lons', 'time']
0: self.ds['data'] : (105192, 7, 5, 721, 1440) :: (105192,)
0: self.lats : (721,)
0: self.lons : (1440,)
1: self.ds['data'] : (105192, 7, 5, 721, 1440) :: (105192,)
1: self.lats : (721,)
1: self.lons : (1440,)
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: Loaded model id = hjbmsjft.
0: Loaded run 'hjbmsjft' at epoch -2.
1: Loaded model id = hjbmsjft.
1: Loaded run 'hjbmsjft' at epoch -2.
1: -1 : 15:35:07 :: batch_size = 96, lr = 1e-05
0: Number of trainable parameters: 886,234,640
0: -1 : 15:35:07 :: batch_size = 96, lr = 1e-05
0: [DEBUG] TRAIN INPUT BATCH
0: Epoch -1, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
0:        device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([0.5665, 0.5546, 0.5408, 0.5334, 0.5298, 0.5222, 0.5041, 0.4738, 0.4335, 0.3887, 0.3451, 0.3054, 0.2708, 0.2428,
0:         0.2203, 0.2017, 0.1858, 0.1732, 0.6231, 0.6026, 0.5727, 0.5406, 0.5109, 0.4842, 0.4575], device='cuda:0')
0:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.5436, -0.5399, -0.5356, -0.5332, -0.5324, -0.5342, -0.5384, -0.5428, -0.5446, -0.5427, -0.5369, -0.5308,
0:         -0.5265, -0.5242, -0.5111, -0.4990, -0.4860, -0.4722, -0.5539, -0.5502, -0.5464, -0.5475, -0.5478, -0.5465,
0:         -0.5476], device='cuda:0')
0:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.1823, -0.3547, -0.4144, -0.1712,  0.3086,  0.7443,  0.9588,  0.9897,  0.8792,  0.6381,  0.3860,  0.2644,
0:          0.2091,  0.0566, -0.1513, -0.2066, -0.0805,  0.0079, -0.0031,  0.0543,  0.1317,  0.1760,  0.2711,  0.4944,
0:          0.7664], device='cuda:0')
0:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([1.0465, 1.0601, 1.0742, 1.0923, 1.1186, 1.1508, 1.1805, 1.2022, 1.2155, 1.2235, 1.2291, 1.2330, 1.2320, 1.2248,
0:         1.2164, 1.2128, 1.2131, 1.2116, 1.2067, 1.2041, 1.2099, 1.2213, 1.2303, 1.2324, 1.2294], device='cuda:0')
0:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([-0.2314, -0.2314, -0.2314, -0.2314, -0.2314, -0.2314, -0.2314, -0.2314, -0.2314, -0.2303, -0.2303, -0.2281,
0:         -0.2303, -0.2314, -0.2314, -0.2314, -0.2314, -0.2314, -0.2248, -0.2115, -0.1848, -0.2148, -0.2314, -0.2314,
0:         -0.2314], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([-0.0399,  0.1277,  0.1854,  0.0155,  0.2423, -0.1299,  0.0330, -0.1055,  0.1273,  0.0433, -0.2097, -0.0263,
0:         -0.0505, -0.0618,  0.0133, -0.0306, -0.0189,  0.0246,  0.0203,  0.0302,  0.0236,  0.0229, -0.0042,  0.0366,
0:         -0.0328], device='cuda:0')
0: [DEBUG] TRAIN TARGET BATCH
0: Epoch -1, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2237, 2187])
0:     First 25 batch values:
0: tensor([ 0.9505,  0.9641,  0.9798,  0.9776,  0.9765,  0.9477,  0.9469,  0.9547,  0.9382,  0.8573,  0.6630,  0.4631,
0:          0.2134,  0.1187,  0.0536,  0.0559,  0.0420,  0.0162,  0.0385,  0.0576,  0.0657, -0.0373, -0.1807, -0.3619,
0:         -0.5243])
0: [DEBUG] TRAIN PREDICTIONS BATCH
0: Epoch -1, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([26775, 972])
0:      first 25 pred values: tensor([0.9913, 0.9966, 1.0072, 1.0220, 1.0316, 1.0285, 1.0141, 0.9924, 0.9665, 0.9439, 0.9165, 0.8723, 0.8086, 0.7217,
0:         0.6197, 0.5299, 0.4592, 0.4153, 1.0792, 1.0833, 1.0853, 1.0756, 1.0519, 1.0086, 0.9527], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([27273, 972])
0:      first 25 pred values: tensor([0.5304, 0.5413, 0.5561, 0.5738, 0.5867, 0.5965, 0.6019, 0.6069, 0.6147, 0.6258, 0.6346, 0.6432, 0.6493, 0.6538,
0:         0.6591, 0.6637, 0.6651, 0.6631, 0.5175, 0.5317, 0.5491, 0.5675, 0.5830, 0.5898, 0.5949], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([26595, 972])
0:      first 25 pred values: tensor([-0.4546, -0.4585, -0.4612, -0.4651, -0.4690, -0.4725, -0.4739, -0.4745, -0.4745, -0.4735, -0.4719, -0.4698,
0:         -0.4683, -0.4678, -0.4672, -0.4683, -0.4687, -0.4668, -0.4581, -0.4635, -0.4660, -0.4692, -0.4718, -0.4746,
0:         -0.4775], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([26854, 972])
0:      first 25 pred values: tensor([-1.1774, -0.9154, -0.6920, -0.8478, -1.2409, -1.5366, -1.6746, -1.1208,  0.0656,  0.4859, -0.4964, -1.4255,
0:         -1.1515, -0.8667, -1.3156, -1.5431, -1.6969, -2.2198, -1.1491, -1.2037, -1.1414, -1.3340, -1.7650, -2.0748,
0:         -2.4061], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([11575, 2187])
0:      first 25 pred values: tensor([0.0707, 0.0695, 0.0665, 0.0648, 0.0645, 0.0662, 0.0674, 0.0681, 0.0677, 0.0648, 0.0606, 0.0547, 0.0508, 0.0519,
0:         0.0620, 0.0839, 0.1176, 0.1598, 0.2068, 0.2543, 0.3003, 0.3441, 0.3880, 0.4357, 0.4855], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([10287, 243])
0:      first 25 pred values: tensor([-0.2228, -0.2257, -0.2274, -0.2301, -0.2317, -0.2341, -0.2358, -0.2353, -0.2360, -0.2236, -0.2244, -0.2272,
0:         -0.2271, -0.2311, -0.2304, -0.2329, -0.2332, -0.2345, -0.2231, -0.2250, -0.2265, -0.2264, -0.2280, -0.2281,
0:         -0.2299], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([2237, 2187])
0:      first 25 pred values: tensor([-0.1053, -0.0211, -0.0491, -0.1212, -0.0968, -0.0546, -0.0425, -0.0913, -0.0926, -0.0820, -0.1030, -0.1447,
0:         -0.1728, -0.0698, -0.1106, -0.1031, -0.0905, -0.0922, -0.1312, -0.0621, -0.1059, -0.0773, -0.1037, -0.0470,
0:         -0.0659], device='cuda:0', grad_fn=<SliceBackward0>)
1: [DEBUG] TRAIN INPUT BATCH
1: Epoch -1, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([0.5505, 0.5421, 0.5480, 0.5594, 0.5664, 0.5662, 0.5634, 0.5619, 0.5643, 0.5726, 0.5886, 0.6107, 0.6341, 0.6559,
1:         0.6746, 0.6910, 0.7048, 0.7162, 0.4909, 0.4857, 0.4871, 0.4896, 0.4895, 0.4892, 0.4944], device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([0.5665, 0.5546, 0.5408, 0.5334, 0.5298, 0.5222, 0.5041, 0.4738, 0.4335, 0.3887, 0.3451, 0.3054, 0.2708, 0.2428,
1:         0.2203, 0.2017, 0.1858, 0.1732, 0.6231, 0.6026, 0.5727, 0.5406, 0.5109, 0.4842, 0.4575], device='cuda:0')
1:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.5436, -0.5399, -0.5356, -0.5332, -0.5324, -0.5342, -0.5384, -0.5428, -0.5446, -0.5427, -0.5369, -0.5308,
1:         -0.5265, -0.5242, -0.5111, -0.4990, -0.4860, -0.4722, -0.5539, -0.5502, -0.5464, -0.5475, -0.5478, -0.5465,
1:         -0.5476], device='cuda:0')
1:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.1823, -0.3547, -0.4144, -0.1712,  0.3086,  0.7443,  0.9588,  0.9897,  0.8792,  0.6381,  0.3860,  0.2644,
1:          0.2091,  0.0566, -0.1513, -0.2066, -0.0805,  0.0079, -0.0031,  0.0543,  0.1317,  0.1760,  0.2711,  0.4944,
1:          0.7664], device='cuda:0')
1:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([1.0465, 1.0601, 1.0742, 1.0923, 1.1186, 1.1508, 1.1805, 1.2022, 1.2155, 1.2235, 1.2291, 1.2330, 1.2320, 1.2248,
1:         1.2164, 1.2128, 1.2131, 1.2116, 1.2067, 1.2041, 1.2099, 1.2213, 1.2303, 1.2324, 1.2294], device='cuda:0')
1:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
1:      first 25 values: tensor([-0.2314, -0.2314, -0.2314, -0.2314, -0.2314, -0.2314, -0.2314, -0.2314, -0.2314, -0.2303, -0.2303, -0.2281,
1:         -0.2303, -0.2314, -0.2314, -0.2314, -0.2314, -0.2314, -0.2248, -0.2115, -0.1848, -0.2148, -0.2314, -0.2314,
1:         -0.2314], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([1.3227, 1.3014, 1.2753, 1.2120, 1.1494, 1.0676, 1.0134, 0.9669, 0.9298, 0.8819, 0.8111, 0.7492, 0.6818, 0.6119,
1:         0.5337, 0.4755, 0.4292, 0.3857, 0.3369, 0.2916, 0.2603, 0.2812, 0.3486, 0.4229, 0.4945], device='cuda:0')
1: [DEBUG] TRAIN TARGET BATCH
1: Epoch -1, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2242, 2187])
1:     First 25 batch values:
1: tensor([ 0.2795,  0.1501,  0.0204, -0.0981, -0.2007, -0.2801, -0.3977, -0.4766, -0.5254, -0.5926, -0.6646, -0.7358,
1:         -0.7952, -0.8315, -0.8256, -0.7604, -0.7157, -0.6811, -0.6765, -0.6771, -0.6784, -0.6771, -0.6780, -0.6926,
1:         -0.7080])
1: [DEBUG] TRAIN PREDICTIONS BATCH
1: Epoch -1, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([26127, 972])
1:      first 25 pred values: tensor([0.2647, 0.2896, 0.3175, 0.3443, 0.3688, 0.3985, 0.4361, 0.4888, 0.5545, 0.6226, 0.6824, 0.7244, 0.7475, 0.7524,
1:         0.7456, 0.7328, 0.7215, 0.7147, 0.3643, 0.3820, 0.3985, 0.4080, 0.4127, 0.4200, 0.4411], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([26290, 972])
1:      first 25 pred values: tensor([ 0.2051,  0.1027,  0.0240, -0.0152, -0.0198, -0.0045,  0.0090,  0.0058, -0.0129, -0.0487, -0.0943, -0.1435,
1:         -0.1936, -0.2409, -0.2822, -0.3100, -0.3250, -0.3285,  0.1021, -0.0048, -0.0848, -0.1207, -0.1227, -0.1054,
1:         -0.0882], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([26726, 972])
1:      first 25 pred values: tensor([-0.1792, -0.1916, -0.2131, -0.2359, -0.2570, -0.2720, -0.2756, -0.2709, -0.2565, -0.2380, -0.2166, -0.1972,
1:         -0.1839, -0.1792, -0.1822, -0.1897, -0.2012, -0.2110, -0.1958, -0.2114, -0.2348, -0.2594, -0.2780, -0.2861,
1:         -0.2829], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([25205, 972])
1:      first 25 pred values: tensor([ 0.1591,  0.0974,  0.0600,  0.0488,  0.0254, -0.0015, -0.0146, -0.0073,  0.0398,  0.0979,  0.1343,  0.1661,
1:          0.2026,  0.2388,  0.2612,  0.2593,  0.2128,  0.1301,  0.0972,  0.0527,  0.0285,  0.0047, -0.0234, -0.0050,
1:          0.0193], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([11955, 2187])
1:      first 25 pred values: tensor([1.2277, 1.2279, 1.2312, 1.2358, 1.2397, 1.2426, 1.2436, 1.2448, 1.2467, 1.2489, 1.2524, 1.2574, 1.2621, 1.2668,
1:         1.2726, 1.2789, 1.2866, 1.2940, 1.2999, 1.3042, 1.3064, 1.3086, 1.3122, 1.3199, 1.3302], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([10447, 243])
1:      first 25 pred values: tensor([-0.1366, -0.1376, -0.1421, -0.1503, -0.1524, -0.1626, -0.1685, -0.1750, -0.1805, -0.1098, -0.1156, -0.1224,
1:         -0.1262, -0.1350, -0.1460, -0.1505, -0.1590, -0.1695, -0.1031, -0.1066, -0.1137, -0.1180, -0.1226, -0.1320,
1:         -0.1381], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([2242, 2187])
1:      first 25 pred values: tensor([-0.1895, -0.0855, -0.1160, -0.1721, -0.1751, -0.1573, -0.1283, -0.1359, -0.1404, -0.1324, -0.1744, -0.1823,
1:         -0.1631, -0.1556, -0.1974, -0.1481, -0.1387, -0.1769, -0.1942, -0.1100, -0.1528, -0.1508, -0.2107, -0.1535,
1:         -0.1600], device='cuda:0', grad_fn=<SliceBackward0>)
0: epoch: -1 [1/5 (20%)]	Loss: 0.50161 : 0.11223 :: 0.07129 (1.28 s/sec)
0: epoch: -1 [2/5 (40%)]	Loss: 0.52956 : 0.13282 :: 0.07145 (8.23 s/sec)
0: epoch: -1 [3/5 (60%)]	Loss: 0.53658 : 0.14712 :: 0.07348 (8.20 s/sec)
0: epoch: -1 [4/5 (80%)]	Loss: 0.47937 : 0.10705 :: 0.08404 (8.19 s/sec)
0: validation loss for strategy=BERT at epoch -1 : 0.12325895577669144
0: validation loss for velocity_u : 0.004283129703253508
0: validation loss for velocity_v : 0.006313616875559092
0: validation loss for specific_humidity : 0.006919632200151682
0: validation loss for velocity_z : 0.1194557324051857
0: validation loss for temperature : 0.01876169629395008
0: validation loss for total_precip : 0.3250061869621277
0: validation loss for t2m : 0.3820725083351135
0: 0 : 15:42:11 :: batch_size = 96, lr = 1e-05
1: 0 : 15:42:23 :: batch_size = 96, lr = 1e-05
0: [DEBUG] TRAIN INPUT BATCH
0: Epoch 0, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
0:        device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-1.3635, -1.4498, -1.5327, -1.6058, -1.6632, -1.7015, -1.7197, -1.7216, -1.7135, -1.7024, -1.6952, -1.6996,
0:         -1.7225, -1.7654, -1.8215, -1.8800, -1.9328, -1.9776, -1.3279, -1.4144, -1.5023, -1.5834, -1.6500, -1.6967,
0:         -1.7214], device='cuda:0')
0:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.5803, -0.5875, -0.5949, -0.6027, -0.6057, -0.6064, -0.6033, -0.5983, -0.5923, -0.5905, -0.5901, -0.5925,
0:         -0.5979, -0.6051, -0.6092, -0.6100, -0.6032, -0.5906, -0.5741, -0.5763, -0.5806, -0.5866, -0.5912, -0.5945,
0:         -0.5945], device='cuda:0')
0:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.0359, -0.0337, -0.0193,  0.0105,  0.0480,  0.0667,  0.0425, -0.0204, -0.1054, -0.1970, -0.2720, -0.3195,
0:         -0.3603, -0.4243, -0.4949, -0.5357, -0.5313, -0.4861,  0.0612,  0.0392,  0.0226,  0.0215,  0.0447,  0.0601,
0:          0.0292], device='cuda:0')
0:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([-0.8381, -0.8248, -0.8122, -0.7989, -0.7836, -0.7657, -0.7454, -0.7241, -0.7026, -0.6826, -0.6652, -0.6502,
0:         -0.6351, -0.6186, -0.5995, -0.5757, -0.5450, -0.5067, -0.4608, -0.4083, -0.3526, -0.2991, -0.2503, -0.2031,
0:         -0.1534], device='cuda:0')
0:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([-0.1805, -0.1817, -0.1782, -0.1746, -0.1746, -0.1711, -0.1630, -0.1384, -0.1057, -0.1407, -0.1513, -0.1594,
0:         -0.1630, -0.1676, -0.1735, -0.1758, -0.1548, -0.1267, -0.1372, -0.1431, -0.1524, -0.1653, -0.1688, -0.1735,
0:         -0.1723], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([ 0.1819, -0.0495,  0.0238,  0.1160,  0.0248, -0.0068,  0.1302, -0.0048, -0.0170, -0.1402,  0.2021, -0.0452,
0:          0.0976, -0.0250, -0.0301,  0.0648,  0.0672, -0.0223, -0.2778, -0.0376,  0.0003, -0.1603, -0.0451, -0.0709,
0:          0.1662], device='cuda:0')
0: [DEBUG] TRAIN TARGET BATCH
0: Epoch 0, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2237, 2187])
0:     First 25 batch values:
0: tensor([ 0.1321,  0.1603,  0.1594,  0.1479,  0.1268,  0.1082,  0.0942,  0.0853,  0.0788,  0.0639,  0.0431,  0.0118,
0:         -0.0162, -0.0464, -0.0466, -0.0378, -0.0105,  0.0194,  0.0461,  0.1018,  0.1614,  0.2231,  0.2508,  0.2643,
0:          0.2230])
0: [DEBUG] TRAIN PREDICTIONS BATCH
0: Epoch 0, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([26775, 972])
0:      first 25 pred values: tensor([2.2477, 2.1872, 2.1282, 2.0780, 2.0296, 1.9897, 1.9560, 1.9260, 1.8943, 1.8650, 1.8283, 1.7896, 1.7515, 1.7066,
0:         1.6679, 1.6277, 1.5904, 1.5533, 2.2692, 2.2006, 2.1309, 2.0773, 2.0264, 1.9898, 1.9610], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([27273, 972])
0:      first 25 pred values: tensor([-0.9788, -1.1552, -1.3126, -1.4359, -1.5325, -1.6076, -1.6659, -1.7143, -1.7609, -1.8041, -1.8486, -1.8883,
0:         -1.9277, -1.9672, -2.0077, -2.0629, -2.1282, -2.2013, -1.0307, -1.2056, -1.3593, -1.4829, -1.5776, -1.6525,
0:         -1.7133], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([26595, 972])
0:      first 25 pred values: tensor([0.0561, 0.0589, 0.0534, 0.0515, 0.0629, 0.0931, 0.1318, 0.1840, 0.2326, 0.2727, 0.3046, 0.3202, 0.3237, 0.3193,
0:         0.3097, 0.3062, 0.3049, 0.3105, 0.0734, 0.0665, 0.0453, 0.0366, 0.0438, 0.0721, 0.1170], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([26854, 972])
0:      first 25 pred values: tensor([-0.0093,  0.0241,  0.0422,  0.0673,  0.0981,  0.1397,  0.1640,  0.1629,  0.1654,  0.1923,  0.2265,  0.2627,
0:          0.3234,  0.3697,  0.4214,  0.4591,  0.4783,  0.5323, -0.1513, -0.1186, -0.0828, -0.0403, -0.0123,  0.0241,
0:          0.0603], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([11575, 2187])
0:      first 25 pred values: tensor([-0.5828, -0.5592, -0.5366, -0.5155, -0.4963, -0.4780, -0.4570, -0.4341, -0.4119, -0.3953, -0.3845, -0.3801,
0:         -0.3756, -0.3695, -0.3602, -0.3507, -0.3407, -0.3341, -0.3304, -0.3295, -0.3329, -0.3376, -0.3412, -0.3404,
0:         -0.3346], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([10287, 243])
0:      first 25 pred values: tensor([-0.1099, -0.0999, -0.0882, -0.0758, -0.0624, -0.0581, -0.0559, -0.0541, -0.0550, -0.1197, -0.1050, -0.0926,
0:         -0.0712, -0.0644, -0.0518, -0.0578, -0.0609, -0.0631, -0.1353, -0.1196, -0.0929, -0.0782, -0.0578, -0.0583,
0:         -0.0699], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([2237, 2187])
0:      first 25 pred values: tensor([0.2626, 0.2476, 0.2632, 0.2452, 0.2086, 0.2845, 0.2649, 0.2949, 0.2643, 0.2637, 0.2886, 0.2089, 0.2118, 0.2858,
0:         0.2655, 0.2668, 0.2651, 0.2538, 0.2185, 0.3092, 0.2420, 0.3111, 0.3030, 0.3012, 0.2778], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
1: [DEBUG] TRAIN INPUT BATCH
1: Epoch 0, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([0.4941, 0.4969, 0.5036, 0.5152, 0.5320, 0.5541, 0.5807, 0.6110, 0.6442, 0.6786, 0.7140, 0.7494, 0.7834, 0.8154,
1:         0.8451, 0.8723, 0.8980, 0.9225, 0.5461, 0.5487, 0.5554, 0.5679, 0.5859, 0.6094, 0.6379], device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([ 0.0406,  0.0288,  0.0145, -0.0021, -0.0193, -0.0349, -0.0468, -0.0537, -0.0559, -0.0529, -0.0442, -0.0298,
1:         -0.0094,  0.0167,  0.0479,  0.0831,  0.1211,  0.1606,  0.0446,  0.0412,  0.0345,  0.0256,  0.0155,  0.0058,
1:         -0.0015], device='cuda:0')
1:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.3043, -0.3416, -0.3713, -0.3948, -0.4040, -0.4081, -0.4090, -0.4053, -0.3963, -0.3835, -0.3627, -0.3355,
1:         -0.3070, -0.2744, -0.2393, -0.2071, -0.1802, -0.1549, -0.3066, -0.3442, -0.3756, -0.4012, -0.4134, -0.4224,
1:         -0.4252], device='cuda:0')
1:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([0.0697, 0.0480, 0.0393, 0.0198, 0.0263, 0.0740, 0.1130, 0.1412, 0.1976, 0.2648, 0.3081, 0.3450, 0.3818, 0.3948,
1:         0.3905, 0.3905, 0.3992, 0.4295, 0.0523, 0.0285, 0.0090, 0.0046, 0.0350, 0.0718, 0.0978], device='cuda:0')
1:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([0.1235, 0.1392, 0.1534, 0.1662, 0.1765, 0.1841, 0.1896, 0.1918, 0.1906, 0.1876, 0.1840, 0.1787, 0.1719, 0.1647,
1:         0.1576, 0.1509, 0.1455, 0.1411, 0.1367, 0.1323, 0.1286, 0.1251, 0.1217, 0.1188, 0.1168], device='cuda:0')
1:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
1:      first 25 values: tensor([-0.2270, -0.2224, -0.2190, -0.2155, -0.2167, -0.2178, -0.2235, -0.2247, -0.2270, -0.2212, -0.2121, -0.2052,
1:         -0.1995, -0.2086, -0.2155, -0.2212, -0.2247, -0.2270, -0.2212, -0.2212, -0.2190, -0.2132, -0.2144, -0.2167,
1:         -0.2212], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-0.4291, -0.4815, -0.5220, -0.5419, -0.5478, -0.5433, -0.5451, -0.5456, -0.5551, -0.5776, -0.6034, -0.6222,
1:         -0.6093, -0.6244, -0.6690, -0.7192, -0.7510, -0.7642, -0.7926, -0.8580, -0.9267, -1.0001, -1.0482, -1.0828,
1:         -1.0991], device='cuda:0')
1: [DEBUG] TRAIN TARGET BATCH
1: Epoch 0, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2242, 2187])
1:     First 25 batch values:
1: tensor([-0.1708, -0.1541, -0.1510, -0.1685, -0.2160, -0.2230, -0.2016, -0.1999, -0.2050, -0.2127, -0.2154, -0.2132,
1:         -0.1978, -0.2383, -0.3223, -0.4346, -0.4723, -0.4897, -0.4672, -0.4993, -0.5414, -0.5983, -0.6358, -0.6485,
1:         -0.6530])
1: [DEBUG] TRAIN PREDICTIONS BATCH
1: Epoch 0, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([26127, 972])
1:      first 25 pred values: tensor([2.0258, 2.0225, 2.0233, 2.0306, 2.0363, 2.0340, 2.0327, 2.0309, 2.0282, 2.0256, 2.0224, 2.0228, 2.0199, 2.0139,
1:         2.0037, 1.9945, 1.9826, 1.9735, 2.1104, 2.1042, 2.1054, 2.1097, 2.1130, 2.1175, 2.1138], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([26290, 972])
1:      first 25 pred values: tensor([0.1031, 0.1148, 0.1253, 0.1366, 0.1488, 0.1636, 0.1760, 0.1868, 0.1947, 0.2045, 0.2117, 0.2224, 0.2321, 0.2466,
1:         0.2622, 0.2785, 0.2950, 0.3173, 0.1130, 0.1263, 0.1411, 0.1549, 0.1743, 0.1928, 0.2101], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([26726, 972])
1:      first 25 pred values: tensor([-0.6312, -0.6346, -0.6418, -0.6482, -0.6470, -0.6418, -0.6366, -0.6247, -0.6121, -0.6029, -0.5901, -0.5768,
1:         -0.5639, -0.5640, -0.5701, -0.5841, -0.5949, -0.5970, -0.6397, -0.6406, -0.6474, -0.6488, -0.6538, -0.6514,
1:         -0.6425], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([25205, 972])
1:      first 25 pred values: tensor([0.4461, 0.4726, 0.5068, 0.5395, 0.5660, 0.6014, 0.6207, 0.6220, 0.6255, 0.6348, 0.6518, 0.6647, 0.6776, 0.6794,
1:         0.6879, 0.6938, 0.6818, 0.6768, 0.4883, 0.4989, 0.5282, 0.5591, 0.5827, 0.6103, 0.6210], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([11955, 2187])
1:      first 25 pred values: tensor([0.1875, 0.1960, 0.2059, 0.2165, 0.2248, 0.2301, 0.2331, 0.2356, 0.2345, 0.2303, 0.2254, 0.2194, 0.2141, 0.2087,
1:         0.2047, 0.2006, 0.1969, 0.1945, 0.1945, 0.1988, 0.2046, 0.2121, 0.2180, 0.2219, 0.2238], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([10447, 243])
1:      first 25 pred values: tensor([-0.1538, -0.1616, -0.1761, -0.1867, -0.1986, -0.2059, -0.2046, -0.1993, -0.2028, -0.1290, -0.1424, -0.1603,
1:         -0.1783, -0.1956, -0.2056, -0.2049, -0.2133, -0.2008, -0.1078, -0.1260, -0.1588, -0.1778, -0.1926, -0.2046,
1:         -0.2088], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([2242, 2187])
1:      first 25 pred values: tensor([-0.3679, -0.3129, -0.3600, -0.3681, -0.3998, -0.3576, -0.3427, -0.3520, -0.3677, -0.3383, -0.3514, -0.3770,
1:         -0.3769, -0.3814, -0.3462, -0.3312, -0.3368, -0.3831, -0.3878, -0.3067, -0.3529, -0.3319, -0.4311, -0.3627,
1:         -0.3636], device='cuda:0', grad_fn=<SliceBackward0>)
0: epoch: 0 [1/5 (20%)]	Loss: 0.49657 : 0.11623 :: 0.08517 (1.22 s/sec)
0: epoch: 0 [2/5 (40%)]	Loss: 0.51261 : 0.12999 :: 0.08092 (8.12 s/sec)
0: epoch: 0 [3/5 (60%)]	Loss: 0.53166 : 0.11552 :: 0.07932 (8.13 s/sec)
0: epoch: 0 [4/5 (80%)]	Loss: 0.47539 : 0.09387 :: 0.07870 (8.12 s/sec)
0: validation loss for strategy=BERT at epoch 0 : 0.12425591051578522
0: validation loss for velocity_u : 0.004075960256159306
0: validation loss for velocity_v : 0.00589367188513279
0: validation loss for specific_humidity : 0.007890024222433567
0: validation loss for velocity_z : 0.12340223789215088
0: validation loss for temperature : 0.01999453455209732
0: validation loss for total_precip : 0.34608080983161926
0: validation loss for t2m : 0.36245405673980713
1: 1 : 15:49:00 :: batch_size = 96, lr = 1.5000000000000002e-05
0: 1 : 15:49:00 :: batch_size = 96, lr = 1.5000000000000002e-05
0: [DEBUG] TRAIN INPUT BATCH
0: Epoch 1, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
0:        device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([1.1523, 1.1959, 1.2401, 1.2849, 1.3303, 1.3766, 1.4240, 1.4728, 1.5227, 1.5739, 1.6261, 1.6787, 1.7313, 1.7833,
0:         1.8343, 1.8838, 1.9317, 1.9775, 1.2306, 1.2765, 1.3237, 1.3718, 1.4212, 1.4715, 1.5233], device='cuda:0')
0:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.5071, -0.5208, -0.5340, -0.5429, -0.5482, -0.5546, -0.5634, -0.5713, -0.5752, -0.5792, -0.5821, -0.5858,
0:         -0.5896, -0.5922, -0.5947, -0.5981, -0.6016, -0.6067, -0.5355, -0.5442, -0.5530, -0.5602, -0.5639, -0.5680,
0:         -0.5722], device='cuda:0')
0:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([ 0.0521,  0.0544,  0.0276, -0.0103, -0.0437, -0.0615, -0.0615, -0.0459, -0.0281, -0.0214, -0.0303, -0.0593,
0:         -0.1061, -0.1573, -0.2086, -0.2420, -0.2554, -0.2398,  0.0700,  0.1034,  0.1190,  0.1235,  0.1257,  0.1324,
0:          0.1480], device='cuda:0')
0:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([0.1687, 0.1727, 0.1754, 0.1765, 0.1772, 0.1774, 0.1771, 0.1770, 0.1763, 0.1749, 0.1720, 0.1674, 0.1609, 0.1525,
0:         0.1432, 0.1332, 0.1229, 0.1130, 0.1029, 0.0924, 0.0806, 0.0669, 0.0503, 0.0309, 0.0089], device='cuda:0')
0:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([-0.2267, -0.2199, -0.2154, -0.2154, -0.2176, -0.2176, -0.2222, -0.2244, -0.2290, -0.2267, -0.2290, -0.2290,
0:         -0.2290, -0.2312, -0.2312, -0.2312, -0.2335, -0.2358, -0.2154, -0.2018, -0.2176, -0.2176, -0.2176, -0.2176,
0:         -0.2222], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([ 0.1838, -0.0747, -0.0834, -0.0167, -0.0158, -0.0553,  0.2165, -0.0809, -0.0083, -0.0911, -0.1273,  0.0187,
0:         -0.1154, -0.1813, -0.0574, -0.1071,  0.0755, -0.0732,  0.0493, -0.1203,  0.0396,  0.0369,  0.0721,  0.1559,
0:         -0.0109], device='cuda:0')
0: [DEBUG] TRAIN TARGET BATCH
0: Epoch 1, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2237, 2187])
0:     First 25 batch values:
0: tensor([ 0.6022,  0.5245,  0.4426,  0.3067,  0.1499,  0.0052, -0.1234, -0.2377, -0.3048, -0.3699, -0.4891, -0.4498,
0:         -0.3696, -0.4463, -0.5233, -0.5780, -0.6316, -0.7921, -0.8527, -0.7289, -0.7773, -0.8233, -0.7756, -0.7039,
0:         -0.6744])
0: [DEBUG] TRAIN PREDICTIONS BATCH
0: Epoch 1, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([26775, 972])
0:      first 25 pred values: tensor([-0.1650, -0.1636, -0.1634, -0.1627, -0.1620, -0.1599, -0.1544, -0.1477, -0.1386, -0.1298, -0.1204, -0.1130,
0:         -0.1058, -0.1001, -0.0951, -0.0889, -0.0818, -0.0742, -0.1914, -0.1893, -0.1878, -0.1852, -0.1843, -0.1829,
0:         -0.1800], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([27273, 972])
0:      first 25 pred values: tensor([1.6242, 1.6436, 1.6707, 1.7043, 1.7413, 1.7818, 1.8243, 1.8669, 1.9068, 1.9414, 1.9686, 1.9916, 2.0085, 2.0175,
0:         2.0227, 2.0209, 2.0167, 2.0041, 1.6725, 1.6979, 1.7301, 1.7605, 1.7941, 1.8302, 1.8637], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([26595, 972])
0:      first 25 pred values: tensor([-0.6837, -0.6869, -0.6859, -0.6843, -0.6844, -0.6829, -0.6836, -0.6841, -0.6849, -0.6849, -0.6856, -0.6837,
0:         -0.6839, -0.6850, -0.6869, -0.6878, -0.6870, -0.6866, -0.6783, -0.6792, -0.6827, -0.6823, -0.6822, -0.6833,
0:         -0.6822], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([26854, 972])
0:      first 25 pred values: tensor([-0.1198, -0.1341, -0.1335, -0.1136, -0.0955, -0.0891, -0.0967, -0.1024, -0.0913, -0.0565, -0.0062,  0.0299,
0:          0.0538,  0.0549,  0.0500,  0.0829,  0.1041,  0.0867, -0.0610, -0.0695, -0.0847, -0.0717, -0.0566, -0.0527,
0:         -0.0538], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([11575, 2187])
0:      first 25 pred values: tensor([-1.1903, -1.2036, -1.2255, -1.2514, -1.2733, -1.2909, -1.3045, -1.3166, -1.3278, -1.3373, -1.3432, -1.3485,
0:         -1.3533, -1.3614, -1.3712, -1.3828, -1.3924, -1.4026, -1.4129, -1.4218, -1.4335, -1.4448, -1.4565, -1.4691,
0:         -1.4823], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([10287, 243])
0:      first 25 pred values: tensor([-0.2147, -0.2081, -0.2120, -0.2096, -0.2116, -0.2138, -0.2129, -0.2148, -0.2128, -0.2058, -0.2039, -0.2023,
0:         -0.2095, -0.2107, -0.2113, -0.2115, -0.2168, -0.2160, -0.2053, -0.2038, -0.2085, -0.2116, -0.2117, -0.2131,
0:         -0.2167], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([2237, 2187])
0:      first 25 pred values: tensor([0.2948, 0.3023, 0.2920, 0.2948, 0.2614, 0.3098, 0.2918, 0.2899, 0.2809, 0.3244, 0.3113, 0.2571, 0.2318, 0.2964,
0:         0.3056, 0.2783, 0.3197, 0.2648, 0.2783, 0.3171, 0.2485, 0.3256, 0.3004, 0.3419, 0.3037], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
1: [DEBUG] TRAIN INPUT BATCH
1: Epoch 1, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([0.4994, 0.5137, 0.5265, 0.5382, 0.5491, 0.5591, 0.5685, 0.5773, 0.5852, 0.5923, 0.5988, 0.6047, 0.6099, 0.6150,
1:         0.6198, 0.6248, 0.6297, 0.6347, 0.5294, 0.5412, 0.5517, 0.5613, 0.5701, 0.5783, 0.5858], device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([1.1523, 1.1959, 1.2401, 1.2849, 1.3303, 1.3766, 1.4240, 1.4728, 1.5227, 1.5739, 1.6261, 1.6787, 1.7313, 1.7833,
1:         1.8343, 1.8838, 1.9317, 1.9775, 1.2306, 1.2765, 1.3237, 1.3718, 1.4212, 1.4715, 1.5233], device='cuda:0')
1:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.5071, -0.5208, -0.5340, -0.5429, -0.5482, -0.5546, -0.5634, -0.5713, -0.5752, -0.5792, -0.5821, -0.5858,
1:         -0.5896, -0.5922, -0.5947, -0.5981, -0.6016, -0.6067, -0.5355, -0.5442, -0.5530, -0.5602, -0.5639, -0.5680,
1:         -0.5722], device='cuda:0')
1:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([ 0.0521,  0.0544,  0.0276, -0.0103, -0.0437, -0.0615, -0.0615, -0.0459, -0.0281, -0.0214, -0.0303, -0.0593,
1:         -0.1061, -0.1573, -0.2086, -0.2420, -0.2554, -0.2398,  0.0700,  0.1034,  0.1190,  0.1235,  0.1257,  0.1324,
1:          0.1480], device='cuda:0')
1:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([0.1687, 0.1727, 0.1754, 0.1765, 0.1772, 0.1774, 0.1771, 0.1770, 0.1763, 0.1749, 0.1720, 0.1674, 0.1609, 0.1525,
1:         0.1432, 0.1332, 0.1229, 0.1130, 0.1029, 0.0924, 0.0806, 0.0669, 0.0503, 0.0309, 0.0089], device='cuda:0')
1:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
1:      first 25 values: tensor([-0.2267, -0.2199, -0.2154, -0.2154, -0.2176, -0.2176, -0.2222, -0.2244, -0.2290, -0.2267, -0.2290, -0.2290,
1:         -0.2290, -0.2312, -0.2312, -0.2312, -0.2335, -0.2358, -0.2154, -0.2018, -0.2176, -0.2176, -0.2176, -0.2176,
1:         -0.2222], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-0.7180, -0.7780, -0.8350, -0.9380, -0.9744, -0.9653, -0.9243, -0.8904, -0.8943, -0.8957, -0.8829, -0.8356,
1:         -0.7729, -0.7207, -0.6644, -0.5686, -0.4705, -0.4071, -0.3487, -0.2796, -0.2497, -0.2202, -0.1675, -0.1103,
1:         -0.0405], device='cuda:0')
1: [DEBUG] TRAIN TARGET BATCH
1: Epoch 1, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2242, 2187])
1:     First 25 batch values:
1: tensor([-0.3568, -0.3267, -0.2818, -0.2325, -0.2064, -0.2244, -0.1909, -0.1734, -0.1623, -0.1569, -0.1607, -0.1593,
1:         -0.1158, -0.1490, -0.1953, -0.2358, -0.2546, -0.1785, -0.0902, -0.1305, -0.1362, -0.1358, -0.1990, -0.2550,
1:         -0.2784])
1: [DEBUG] TRAIN PREDICTIONS BATCH
1: Epoch 1, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([26127, 972])
1:      first 25 pred values: tensor([0.2598, 0.2591, 0.2535, 0.2461, 0.2378, 0.2291, 0.2190, 0.2088, 0.1951, 0.1819, 0.1675, 0.1537, 0.1398, 0.1254,
1:         0.1107, 0.0966, 0.0842, 0.0714, 0.1782, 0.1736, 0.1694, 0.1623, 0.1514, 0.1432, 0.1319], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([26290, 972])
1:      first 25 pred values: tensor([-0.1152, -0.0977, -0.0823, -0.0727, -0.0709, -0.0753, -0.0823, -0.0904, -0.0962, -0.1023, -0.1115, -0.1201,
1:         -0.1316, -0.1416, -0.1538, -0.1639, -0.1772, -0.1901, -0.1314, -0.1145, -0.0997, -0.0927, -0.0913, -0.0977,
1:         -0.1078], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([26726, 972])
1:      first 25 pred values: tensor([-0.5790, -0.5836, -0.5850, -0.5853, -0.5875, -0.5878, -0.5904, -0.5947, -0.5972, -0.5996, -0.6029, -0.6051,
1:         -0.6104, -0.6162, -0.6229, -0.6264, -0.6297, -0.6324, -0.5895, -0.5926, -0.5965, -0.5953, -0.5974, -0.5991,
1:         -0.6000], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([25205, 972])
1:      first 25 pred values: tensor([0.5720, 0.6574, 0.7508, 0.8283, 0.8296, 0.7681, 0.7004, 0.6032, 0.4888, 0.4156, 0.3851, 0.3731, 0.3949, 0.4463,
1:         0.5180, 0.5704, 0.5782, 0.5892, 0.3885, 0.5026, 0.6191, 0.7527, 0.8095, 0.7860, 0.7112], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([11955, 2187])
1:      first 25 pred values: tensor([-1.3518, -1.3517, -1.3612, -1.3787, -1.4015, -1.4248, -1.4498, -1.4764, -1.5022, -1.5276, -1.5484, -1.5651,
1:         -1.5769, -1.5890, -1.6003, -1.6154, -1.6313, -1.6486, -1.6622, -1.6709, -1.6782, -1.6866, -1.6977, -1.7088,
1:         -1.7136], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([10447, 243])
1:      first 25 pred values: tensor([-0.2132, -0.2059, -0.2093, -0.2075, -0.2114, -0.2117, -0.2123, -0.2169, -0.2166, -0.2044, -0.2040, -0.2003,
1:         -0.2051, -0.2091, -0.2119, -0.2135, -0.2139, -0.2162, -0.2028, -0.2012, -0.2083, -0.2098, -0.2104, -0.2116,
1:         -0.2159], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([2242, 2187])
1:      first 25 pred values: tensor([-0.2054, -0.1226, -0.1020, -0.1697, -0.1773, -0.2115, -0.1376, -0.1951, -0.1649, -0.1583, -0.1833, -0.1563,
1:         -0.1821, -0.1942, -0.1523, -0.1052, -0.1385, -0.1899, -0.1827, -0.1264, -0.1850, -0.1290, -0.1907, -0.1299,
1:         -0.1375], device='cuda:0', grad_fn=<SliceBackward0>)
0: epoch: 1 [1/5 (20%)]	Loss: 0.50292 : 0.14125 :: 0.07365 (1.66 s/sec)
0: epoch: 1 [2/5 (40%)]	Loss: 0.48208 : 0.11446 :: 0.06541 (8.12 s/sec)
0: epoch: 1 [3/5 (60%)]	Loss: 0.50759 : 0.11652 :: 0.06857 (8.13 s/sec)
0: epoch: 1 [4/5 (80%)]	Loss: 0.46987 : 0.10920 :: 0.06965 (8.13 s/sec)
0: validation loss for strategy=BERT at epoch 1 : 0.11197088658809662
0: validation loss for velocity_u : 0.0037278071977198124
0: validation loss for velocity_v : 0.005299807526171207
0: validation loss for specific_humidity : 0.006690961308777332
0: validation loss for velocity_z : 0.11107343435287476
0: validation loss for temperature : 0.017918657511472702
0: validation loss for total_precip : 0.2581124007701874
0: validation loss for t2m : 0.38097310066223145
0: 2 : 15:55:50 :: batch_size = 96, lr = 2e-05
1: 2 : 15:55:58 :: batch_size = 96, lr = 2e-05
0: [DEBUG] TRAIN INPUT BATCH
0: Epoch 2, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
0:        device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([0.6184, 0.6107, 0.6029, 0.5956, 0.5890, 0.5829, 0.5779, 0.5739, 0.5712, 0.5698, 0.5696, 0.5704, 0.5723, 0.5748,
0:         0.5777, 0.5806, 0.5838, 0.5871, 0.5404, 0.5337, 0.5278, 0.5233, 0.5195, 0.5168, 0.5149], device='cuda:0')
0:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.5461, -0.5395, -0.5328, -0.5262, -0.5237, -0.5222, -0.5207, -0.5192, -0.5193, -0.5201, -0.5207, -0.5214,
0:         -0.5213, -0.5212, -0.5211, -0.5210, -0.5196, -0.5181, -0.5286, -0.5279, -0.5271, -0.5228, -0.5224, -0.5237,
0:         -0.5250], device='cuda:0')
0:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([ 0.1078,  0.1233,  0.1321,  0.1321,  0.1255,  0.1145,  0.1034,  0.0902,  0.0791,  0.0659,  0.0482,  0.0283,
0:          0.0063, -0.0158, -0.0357, -0.0445, -0.0445, -0.0313,  0.1123,  0.1167,  0.1101,  0.0924,  0.0703,  0.0460,
0:          0.0239], device='cuda:0')
0:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([0.9396, 0.9296, 0.9181, 0.9041, 0.8893, 0.8739, 0.8579, 0.8422, 0.8281, 0.8161, 0.8062, 0.7990, 0.7953, 0.7945,
0:         0.7972, 0.8030, 0.8110, 0.8217, 0.8334, 0.8456, 0.8576, 0.8686, 0.8772, 0.8833, 0.8861], device='cuda:0')
0:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([-0.2359, -0.2359, -0.2359, -0.2359, -0.2359, -0.2370, -0.2370, -0.2382, -0.2382, -0.2382, -0.2382, -0.2382,
0:         -0.2382, -0.2382, -0.2382, -0.2382, -0.2382, -0.2382, -0.2382, -0.2382, -0.2382, -0.2382, -0.2382, -0.2382,
0:         -0.2382], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([-0.0354,  0.0252, -0.0142, -0.1163,  0.1153, -0.0731,  0.0744,  0.0376,  0.0128, -0.0918, -0.1321,  0.1882,
0:          0.1738, -0.1149, -0.1311,  0.0066,  0.0936,  0.1623,  0.0823, -0.0777,  0.0263,  0.0328,  0.2535,  0.0923,
0:         -0.1101], device='cuda:0')
0: [DEBUG] TRAIN TARGET BATCH
0: Epoch 2, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2237, 2187])
0:     First 25 batch values:
0: tensor([-0.5452, -0.5309, -0.5169, -0.5024, -0.4948, -0.4859, -0.4772, -0.4684, -0.4649, -0.4615, -0.4578, -0.4542,
0:         -0.4590, -0.4642, -0.4688, -0.4733, -0.4828, -0.4921, -0.5012, -0.5092, -0.5174, -0.5250, -0.5325, -0.5399,
0:         -0.5459])
0: [DEBUG] TRAIN PREDICTIONS BATCH
0: Epoch 2, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([26775, 972])
0:      first 25 pred values: tensor([-0.2968, -0.2871, -0.2798, -0.2768, -0.2780, -0.2796, -0.2793, -0.2770, -0.2695, -0.2622, -0.2557, -0.2535,
0:         -0.2497, -0.2442, -0.2354, -0.2254, -0.2164, -0.2081, -0.2976, -0.2903, -0.2820, -0.2781, -0.2767, -0.2747,
0:         -0.2680], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([27273, 972])
0:      first 25 pred values: tensor([0.9632, 1.0076, 1.0501, 1.0836, 1.1132, 1.1378, 1.1567, 1.1725, 1.1887, 1.2034, 1.2196, 1.2359, 1.2520, 1.2681,
0:         1.2862, 1.3072, 1.3286, 1.3472, 0.9838, 1.0301, 1.0700, 1.1039, 1.1299, 1.1484, 1.1613], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([26595, 972])
0:      first 25 pred values: tensor([-0.6270, -0.6309, -0.6329, -0.6380, -0.6406, -0.6438, -0.6452, -0.6449, -0.6477, -0.6527, -0.6575, -0.6641,
0:         -0.6698, -0.6781, -0.6827, -0.6865, -0.6848, -0.6807, -0.6403, -0.6427, -0.6478, -0.6520, -0.6528, -0.6559,
0:         -0.6543], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([26854, 972])
0:      first 25 pred values: tensor([0.2500, 0.2590, 0.2700, 0.2643, 0.2423, 0.1752, 0.1296, 0.1180, 0.1003, 0.0840, 0.0668, 0.0640, 0.0722, 0.1083,
0:         0.1693, 0.2016, 0.2296, 0.2445, 0.4337, 0.3862, 0.3480, 0.3164, 0.3073, 0.2610, 0.2149], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([11575, 2187])
0:      first 25 pred values: tensor([-0.7523, -0.7382, -0.7265, -0.7217, -0.7246, -0.7330, -0.7467, -0.7638, -0.7778, -0.7867, -0.7887, -0.7840,
0:         -0.7760, -0.7677, -0.7579, -0.7459, -0.7288, -0.7093, -0.6888, -0.6672, -0.6432, -0.6152, -0.5801, -0.5404,
0:         -0.5039], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([10287, 243])
0:      first 25 pred values: tensor([-0.2101, -0.1985, -0.2024, -0.1968, -0.1854, -0.1825, -0.1840, -0.1917, -0.1881, -0.2135, -0.2154, -0.2084,
0:         -0.2089, -0.2058, -0.2002, -0.1994, -0.1965, -0.2069, -0.2235, -0.2259, -0.2230, -0.2199, -0.2185, -0.2078,
0:         -0.2083], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([2237, 2187])
0:      first 25 pred values: tensor([-0.5157, -0.5186, -0.4565, -0.5206, -0.5141, -0.5348, -0.5645, -0.5880, -0.5660, -0.5275, -0.4814, -0.5566,
0:         -0.6042, -0.5908, -0.5836, -0.5057, -0.5148, -0.5292, -0.5555, -0.5578, -0.6122, -0.4880, -0.5597, -0.4832,
0:         -0.4450], device='cuda:0', grad_fn=<SliceBackward0>)
1: [DEBUG] TRAIN INPUT BATCH
1: Epoch 2, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.2780, -0.2777, -0.2797, -0.3016, -0.3412, -0.3796, -0.4123, -0.4378, -0.4576, -0.4829, -0.5031, -0.5092,
1:         -0.5089, -0.4977, -0.4757, -0.4481, -0.4295, -0.4364, -0.2706, -0.2457, -0.2271, -0.2417, -0.2740, -0.3024,
1:         -0.3366], device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([ 0.0726,  0.0717,  0.0583,  0.0295, -0.0012, -0.0606, -0.1617, -0.2766, -0.3735, -0.4255, -0.4352, -0.4280,
1:         -0.4189, -0.4147, -0.4253, -0.4696, -0.5525, -0.6455,  0.0295,  0.0440,  0.0486,  0.0200, -0.0070, -0.0345,
1:         -0.1105], device='cuda:0')
1:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([ 3.3800e+00,  3.4697e+00,  3.4269e+00,  3.0928e+00,  2.3862e+00,  1.2783e+00,  2.9606e-01,  5.0568e-04,
1:         -1.9246e-01, -2.1623e-01, -2.5954e-01, -3.4408e-01, -4.5950e-01, -5.5668e-01, -6.0985e-01, -6.2997e-01,
1:         -6.3343e-01, -6.0186e-01,  3.2924e+00,  3.3763e+00,  3.4386e+00,  3.3004e+00,  2.9263e+00,  2.0871e+00,
1:          1.0197e+00], device='cuda:0')
1:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.2402, -0.0870, -0.5422, -1.2710, -0.5116,  0.3529,  0.0990,  0.0684, -0.0213, -0.1680, -0.1023, -0.1570,
1:         -0.1592, -0.1877, -0.0782,  0.1297,  0.1559,  0.2325,  0.0356, -0.0170, -0.6845, -1.5424, -1.0675,  0.0487,
1:          0.1384], device='cuda:0')
1:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([0.5233, 0.5940, 0.6856, 0.7576, 0.7850, 0.9479, 1.3004, 1.5920, 1.7000, 1.6671, 1.6277, 1.7051, 1.8440, 1.9684,
1:         2.0608, 2.0795, 2.0216, 1.8815, 1.6676, 1.4251, 1.2160, 1.0521, 0.9375, 0.8820, 0.8470], device='cuda:0')
1:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
1:      first 25 values: tensor([ 0.0577,  0.0665, -0.1168, -0.0174,  0.0422,  0.0091, -0.0704, -0.1765, -0.2206, -0.1279, -0.1433,  0.0599,
1:          0.2764,  0.1858, -0.0837, -0.1058, -0.1721, -0.2162, -0.0594, -0.0594,  0.2167,  0.4354,  0.4089,  0.0709,
1:         -0.0395], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-1.5791, -1.5905, -1.5992, -1.5437, -1.4360, -1.3518, -1.2161, -1.0649, -0.9285, -0.8683, -0.8062, -0.7483,
1:         -0.6683, -0.6708, -0.6676, -0.6316, -0.6199, -0.6566, -0.6076, -0.6408, -0.5120, -0.3226, -0.1123, -0.0359,
1:          0.0097], device='cuda:0')
1: [DEBUG] TRAIN TARGET BATCH
1: Epoch 2, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2242, 2187])
1:     First 25 batch values:
1: tensor([ 0.0135, -0.0349,  0.0475,  0.2337,  0.4704,  0.6106,  0.7240,  0.8571,  0.9683,  0.9738,  0.6927,  0.5237,
1:          0.6956,  1.0233,  1.2862,  1.3376,  1.2685,  1.3091,  1.3308,  1.1424,  0.9287,  0.3849, -0.4171, -0.7922,
1:         -0.8603])
1: [DEBUG] TRAIN PREDICTIONS BATCH
1: Epoch 2, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([26127, 972])
1:      first 25 pred values: tensor([1.3123, 1.2974, 1.2861, 1.2741, 1.2650, 1.2537, 1.2430, 1.2288, 1.2141, 1.1918, 1.1577, 1.1162, 1.0716, 1.0302,
1:         0.9956, 0.9646, 0.9395, 0.9178, 1.2879, 1.2670, 1.2490, 1.2368, 1.2288, 1.2227, 1.2188], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([26290, 972])
1:      first 25 pred values: tensor([-0.0700, -0.0421, -0.0102,  0.0225,  0.0577,  0.0930,  0.1279,  0.1642,  0.2022,  0.2390,  0.2751,  0.3088,
1:          0.3408,  0.3750,  0.4112,  0.4512,  0.4911,  0.5247, -0.0254,  0.0083,  0.0423,  0.0774,  0.1116,  0.1434,
1:          0.1728], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([26726, 972])
1:      first 25 pred values: tensor([ 0.4629,  0.4835,  0.4952,  0.4998,  0.5023,  0.4988,  0.5001,  0.4999,  0.4974,  0.4670,  0.3977,  0.2905,
1:          0.1642,  0.0446, -0.0155, -0.0093,  0.0608,  0.1556,  0.4588,  0.4930,  0.5113,  0.5197,  0.5132,  0.5009,
1:          0.4914], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([25205, 972])
1:      first 25 pred values: tensor([ 0.2146,  0.1368,  0.1554,  0.2524,  0.3563,  0.3937,  0.3195,  0.1685,  0.0144, -0.0715, -0.0874, -0.0503,
1:          0.0165,  0.0578,  0.1265,  0.2464,  0.3813,  0.5038,  0.2313,  0.1464,  0.1581,  0.2638,  0.4035,  0.4768,
1:          0.4090], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([11955, 2187])
1:      first 25 pred values: tensor([ 1.8771,  1.9278,  1.9298,  1.8689,  1.7416,  1.5753,  1.3974,  1.2404,  1.1195,  1.0371,  0.9847,  0.9489,
1:          0.9180,  0.8821,  0.8362,  0.7659,  0.6618,  0.5101,  0.3050,  0.0532, -0.2316, -0.5235, -0.7938, -1.0168,
1:         -1.1795], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([10447, 243])
1:      first 25 pred values: tensor([-0.2053, -0.1982, -0.2000, -0.1919, -0.1810, -0.1818, -0.1826, -0.2020, -0.1985, -0.1948, -0.1977, -0.1872,
1:         -0.1806, -0.1789, -0.1799, -0.1820, -0.1927, -0.2127, -0.1882, -0.1846, -0.1859, -0.1765, -0.1746, -0.1724,
1:         -0.1856], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([2242, 2187])
1:      first 25 pred values: tensor([0.2496, 0.3023, 0.3439, 0.2578, 0.2757, 0.2577, 0.2830, 0.2956, 0.2692, 0.3015, 0.3292, 0.3094, 0.2533, 0.2986,
1:         0.2395, 0.3122, 0.3173, 0.2490, 0.2901, 0.3031, 0.2893, 0.3491, 0.2628, 0.3152, 0.3162], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
0: epoch: 2 [1/5 (20%)]	Loss: 0.51967 : 0.13160 :: 0.07738 (1.32 s/sec)
0: epoch: 2 [2/5 (40%)]	Loss: 0.49147 : 0.12093 :: 0.07006 (7.99 s/sec)
0: epoch: 2 [3/5 (60%)]	Loss: 0.48022 : 0.11175 :: 0.07342 (8.04 s/sec)
0: epoch: 2 [4/5 (80%)]	Loss: 0.46915 : 0.12028 :: 0.07377 (8.13 s/sec)
0: validation loss for strategy=BERT at epoch 2 : 0.09943106025457382
0: validation loss for velocity_u : 0.003571623470634222
0: validation loss for velocity_v : 0.005253220908343792
0: validation loss for specific_humidity : 0.006777851842343807
0: validation loss for velocity_z : 0.1070517897605896
0: validation loss for temperature : 0.015709541738033295
0: validation loss for total_precip : 0.2116093784570694
0: validation loss for t2m : 0.34604412317276
0: 3 : 16:02:49 :: batch_size = 96, lr = 1.9512195121951222e-05
1: 3 : 16:03:02 :: batch_size = 96, lr = 1.9512195121951222e-05
0: [DEBUG] TRAIN INPUT BATCH
0: Epoch 3, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
0:        device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-1.4731, -1.4670, -1.4456, -1.4137, -1.3744, -1.3311, -1.2861, -1.2411, -1.2009, -1.1652, -1.1373, -1.1127,
0:         -1.0881, -1.0608, -1.0289, -0.9974, -0.9679, -0.9455, -1.4824, -1.4747, -1.4507, -1.4188, -1.3806, -1.3366,
0:         -1.2910], device='cuda:0')
0:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.2242, -0.2043, -0.1915, -0.1877, -0.1884, -0.1949, -0.2075, -0.2222, -0.2396, -0.2562, -0.2740, -0.2914,
0:         -0.3103, -0.3300, -0.3498, -0.3665, -0.3812, -0.3933, -0.2385, -0.2185, -0.2054, -0.2006, -0.2002, -0.2048,
0:         -0.2134], device='cuda:0')
0:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.1207, -0.3262, -0.3772, -0.3017, -0.2240, -0.1118, -0.0452, -0.0530, -0.0407, -0.0996, -0.1285, -0.1607,
0:         -0.1851, -0.1918, -0.2329, -0.2873, -0.3795, -0.4628, -0.2140, -0.3684, -0.3561, -0.2517, -0.1551, -0.1052,
0:         -0.0307], device='cuda:0')
0:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([-0.7526, -0.8220, -0.9079, -0.9928, -1.0606, -1.1077, -1.1379, -1.1567, -1.1654, -1.1663, -1.1670, -1.1681,
0:         -1.1783, -1.1974, -1.2239, -1.2519, -1.2708, -1.2778, -1.2656, -1.2407, -1.2023, -1.1580, -1.1165, -1.0782,
0:         -1.0471], device='cuda:0')
0:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([ 0.0177,  0.0582, -0.0571, -0.1159, -0.0975, -0.1233, -0.1576, -0.2533, -0.2533,  0.0680,  0.2765,  0.0864,
0:          0.0729,  0.2029,  0.1355, -0.1527, -0.2484, -0.2533, -0.1147,  0.0656,  0.1146,  0.2017,  0.0312, -0.1355,
0:         -0.2091], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([-4.3009e-02, -9.4104e-02, -5.5809e-02, -2.0888e-01, -9.5362e-02,  1.4933e-02, -1.1421e-02,  1.5156e-01,
0:         -1.1740e-01,  3.7397e-04,  8.3587e-02, -3.7450e-02, -6.9606e-03, -3.2114e-02,  9.2787e-02,  9.5138e-03,
0:         -1.1720e-01,  1.5749e-01, -1.7749e-01,  4.6010e-02,  5.1779e-05, -3.6580e-02,  1.7634e-02,  2.3780e-01,
0:          2.1807e-02], device='cuda:0')
0: [DEBUG] TRAIN TARGET BATCH
0: Epoch 3, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2237, 2187])
0:     First 25 batch values:
0: tensor([ 0.2152,  0.2865,  0.3417,  0.5072,  0.6631,  0.9366,  1.1133,  1.3308,  1.3905,  1.3709,  1.2529,  0.9932,
0:          0.6816,  0.3501,  0.1042, -0.0132, -0.0276, -0.0306,  0.0316,  0.0933,  0.1177,  0.1380,  0.1986,  0.2942,
0:          0.4540])
0: [DEBUG] TRAIN PREDICTIONS BATCH
0: Epoch 3, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([26775, 972])
0:      first 25 pred values: tensor([-1.1363, -1.1514, -1.1642, -1.1725, -1.1754, -1.1761, -1.1784, -1.1815, -1.1854, -1.1854, -1.1829, -1.1798,
0:         -1.1786, -1.1821, -1.1889, -1.1965, -1.2022, -1.2065, -1.1231, -1.1389, -1.1541, -1.1645, -1.1697, -1.1714,
0:         -1.1756], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([27273, 972])
0:      first 25 pred values: tensor([0.2981, 0.3211, 0.3381, 0.3522, 0.3590, 0.3616, 0.3566, 0.3474, 0.3344, 0.3210, 0.3125, 0.3120, 0.3178, 0.3309,
0:         0.3468, 0.3637, 0.3788, 0.3905, 0.2867, 0.3084, 0.3217, 0.3299, 0.3328, 0.3317, 0.3279], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([26595, 972])
0:      first 25 pred values: tensor([-0.2337, -0.2521, -0.2706, -0.2876, -0.3002, -0.3104, -0.3132, -0.3138, -0.3113, -0.2984, -0.2770, -0.2495,
0:         -0.2141, -0.1758, -0.1333, -0.0944, -0.0598, -0.0318, -0.2223, -0.2418, -0.2574, -0.2721, -0.2845, -0.2948,
0:         -0.3028], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([26854, 972])
0:      first 25 pred values: tensor([ 0.0530, -0.0739, -0.1947, -0.3328, -0.4327, -0.4995, -0.5277, -0.5606, -0.6066, -0.6271, -0.6556, -0.6598,
0:         -0.6322, -0.5805, -0.4968, -0.4265, -0.3955, -0.3995,  0.1974,  0.0624, -0.0753, -0.2498, -0.3723, -0.4589,
0:         -0.5021], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([11575, 2187])
0:      first 25 pred values: tensor([-0.2177, -0.1517, -0.0835, -0.0203,  0.0358,  0.0859,  0.1320,  0.1739,  0.2154,  0.2583,  0.3029,  0.3508,
0:          0.3996,  0.4468,  0.4871,  0.5196,  0.5453,  0.5675,  0.5922,  0.6206,  0.6552,  0.6926,  0.7274,  0.7551,
0:          0.7734], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([10287, 243])
0:      first 25 pred values: tensor([-0.2388, -0.2379, -0.2499, -0.2601, -0.2539, -0.2486, -0.2468, -0.2606, -0.2495, -0.2483, -0.2528, -0.2536,
0:         -0.2630, -0.2628, -0.2550, -0.2548, -0.2407, -0.2453, -0.2442, -0.2527, -0.2592, -0.2593, -0.2578, -0.2466,
0:         -0.2379], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([2237, 2187])
0:      first 25 pred values: tensor([-0.2395, -0.2190, -0.1992, -0.2242, -0.2434, -0.2354, -0.2908, -0.2575, -0.2568, -0.2124, -0.1934, -0.2284,
0:         -0.2805, -0.2669, -0.2677, -0.2111, -0.2556, -0.2536, -0.2662, -0.2334, -0.2521, -0.1690, -0.2044, -0.2012,
0:         -0.1607], device='cuda:0', grad_fn=<SliceBackward0>)
1: [DEBUG] TRAIN INPUT BATCH
1: Epoch 3, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.6670, -0.6784, -0.6890, -0.6980, -0.7046, -0.7086, -0.7100, -0.7097, -0.7081, -0.7061, -0.7037, -0.7016,
1:         -0.7001, -0.6993, -0.6985, -0.6975, -0.6958, -0.6933, -0.7325, -0.7420, -0.7502, -0.7568, -0.7612, -0.7635,
1:         -0.7639], device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([1.1134, 1.1078, 1.1099, 1.1215, 1.1419, 1.1682, 1.1957, 1.2216, 1.2446, 1.2657, 1.2860, 1.3048, 1.3212, 1.3336,
1:         1.3410, 1.3441, 1.3439, 1.3414, 1.1041, 1.0989, 1.0983, 1.1039, 1.1159, 1.1335, 1.1548], device='cuda:0')
1:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.5951, -0.5930, -0.5919, -0.5910, -0.5908, -0.5910, -0.5921, -0.5929, -0.5927, -0.5929, -0.5944, -0.5959,
1:         -0.5967, -0.5998, -0.6029, -0.6035, -0.6042, -0.6004, -0.5903, -0.5885, -0.5869, -0.5858, -0.5856, -0.5851,
1:         -0.5844], device='cuda:0')
1:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([0.4279, 0.4143, 0.3805, 0.3353, 0.3015, 0.2812, 0.2631, 0.2360, 0.2044, 0.1841, 0.1886, 0.2157, 0.2360, 0.2270,
1:         0.1886, 0.1390, 0.1074, 0.1006, 0.3579, 0.3353, 0.2970, 0.2541, 0.2248, 0.2112, 0.2090], device='cuda:0')
1:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([1.4100, 1.4266, 1.4447, 1.4637, 1.4822, 1.5000, 1.5154, 1.5287, 1.5391, 1.5457, 1.5475, 1.5435, 1.5349, 1.5238,
1:         1.5132, 1.5051, 1.4991, 1.4943, 1.4906, 1.4876, 1.4869, 1.4892, 1.4956, 1.5068, 1.5225], device='cuda:0')
1:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
1:      first 25 values: tensor([-0.2380, -0.2380, -0.2392, -0.2404, -0.2404, -0.2404, -0.2404, -0.2404, -0.2404, -0.2380, -0.2380, -0.2392,
1:         -0.2404, -0.2404, -0.2404, -0.2404, -0.2404, -0.2404, -0.2380, -0.2392, -0.2404, -0.2404, -0.2404, -0.2404,
1:         -0.2404], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-0.8119, -0.7843, -0.7534, -0.7017, -0.6738, -0.6524, -0.6243, -0.6254, -0.6260, -0.5555, -0.3421, -0.2294,
1:         -0.3983, -0.6227, -0.8275, -0.9728, -1.0687, -0.9681, -1.0349, -0.9966, -1.2687, -1.6045, -1.7469, -1.3313,
1:         -0.7309], device='cuda:0')
1: [DEBUG] TRAIN TARGET BATCH
1: Epoch 3, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2242, 2187])
1:     First 25 batch values:
1: tensor([-0.9307, -1.0041, -0.9970, -0.9678, -0.8763, -0.7770, -0.7835, -0.8111, -0.8196, -0.8705, -0.9346, -0.9724,
1:         -1.0136, -0.9649, -0.9294, -0.9338, -0.9185, -0.8250, -0.8183, -0.8014, -0.7810, -0.7538, -0.7294, -0.6839,
1:         -0.6381])
1: [DEBUG] TRAIN PREDICTIONS BATCH
1: Epoch 3, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([26127, 972])
1:      first 25 pred values: tensor([-1.9477, -1.9556, -1.9649, -1.9722, -1.9812, -1.9921, -2.0037, -2.0139, -2.0236, -2.0283, -2.0333, -2.0404,
1:         -2.0492, -2.0599, -2.0708, -2.0815, -2.0905, -2.1033, -1.9388, -1.9441, -1.9518, -1.9607, -1.9766, -1.9966,
1:         -2.0213], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([26290, 972])
1:      first 25 pred values: tensor([-0.0436,  0.0363,  0.1030,  0.1532,  0.1832,  0.1913,  0.1802,  0.1534,  0.1168,  0.0777,  0.0329, -0.0117,
1:         -0.0534, -0.0891, -0.1187, -0.1371, -0.1507, -0.1624, -0.1006, -0.0354,  0.0175,  0.0521,  0.0669,  0.0594,
1:          0.0359], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([26726, 972])
1:      first 25 pred values: tensor([-0.6412, -0.6460, -0.6518, -0.6585, -0.6650, -0.6708, -0.6706, -0.6684, -0.6669, -0.6676, -0.6700, -0.6740,
1:         -0.6763, -0.6772, -0.6727, -0.6671, -0.6618, -0.6575, -0.6461, -0.6514, -0.6563, -0.6635, -0.6681, -0.6717,
1:         -0.6704], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([25205, 972])
1:      first 25 pred values: tensor([-2.2350, -2.3170, -2.1624, -1.7386, -1.2594, -0.8286, -0.4676, -0.0352,  0.5193,  1.0161,  1.2817,  1.2823,
1:          1.1767,  1.0354,  0.8717,  0.6583,  0.4141,  0.2773, -2.3662, -2.8989, -3.3754, -3.5528, -3.5101, -3.3086,
1:         -3.0564], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([11955, 2187])
1:      first 25 pred values: tensor([1.4536, 1.4206, 1.4043, 1.3973, 1.3923, 1.3805, 1.3643, 1.3446, 1.3310, 1.3279, 1.3363, 1.3532, 1.3725, 1.3877,
1:         1.3970, 1.4030, 1.4119, 1.4265, 1.4478, 1.4699, 1.4899, 1.5061, 1.5200, 1.5334, 1.5437], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([10447, 243])
1:      first 25 pred values: tensor([-0.2387, -0.2365, -0.2394, -0.2367, -0.2320, -0.2262, -0.2362, -0.2493, -0.2432, -0.2431, -0.2397, -0.2322,
1:         -0.2335, -0.2310, -0.2256, -0.2300, -0.2273, -0.2455, -0.2388, -0.2419, -0.2354, -0.2350, -0.2305, -0.2223,
1:         -0.2221], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([2242, 2187])
1:      first 25 pred values: tensor([-0.6453, -0.5614, -0.5515, -0.6099, -0.6032, -0.5913, -0.5953, -0.6105, -0.6041, -0.5967, -0.6151, -0.6179,
1:         -0.6234, -0.6224, -0.6127, -0.5823, -0.5946, -0.6224, -0.6111, -0.5728, -0.6250, -0.5759, -0.6370, -0.5727,
1:         -0.5583], device='cuda:0', grad_fn=<SliceBackward0>)
0: epoch: 3 [1/5 (20%)]	Loss: 0.48386 : 0.10964 :: 0.06980 (1.29 s/sec)
0: epoch: 3 [2/5 (40%)]	Loss: 0.49401 : 0.13302 :: 0.07464 (8.12 s/sec)
0: epoch: 3 [3/5 (60%)]	Loss: 0.47923 : 0.11411 :: 0.06908 (8.12 s/sec)
0: epoch: 3 [4/5 (80%)]	Loss: 0.47261 : 0.12454 :: 0.06532 (8.13 s/sec)
0: validation loss for strategy=BERT at epoch 3 : 0.10322774201631546
0: validation loss for velocity_u : 0.0037300805561244488
0: validation loss for velocity_v : 0.005147122777998447
0: validation loss for specific_humidity : 0.006400775164365768
0: validation loss for velocity_z : 0.1045093908905983
0: validation loss for temperature : 0.015425615012645721
0: validation loss for total_precip : 0.2490312159061432
0: validation loss for t2m : 0.338349848985672
0: 4 : 16:09:41 :: batch_size = 96, lr = 1.903628792385485e-05
1: 4 : 16:09:41 :: batch_size = 96, lr = 1.903628792385485e-05
0: [DEBUG] TRAIN INPUT BATCH
0: Epoch 4, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
0:        device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.2993, -0.3415, -0.3783, -0.4138, -0.4508, -0.4926, -0.5424, -0.6019, -0.6692, -0.7427, -0.8223, -0.9067,
0:         -0.9942, -1.0841, -1.1762, -1.2689, -1.3609, -1.4517, -0.2681, -0.3055, -0.3411, -0.3791, -0.4215, -0.4703,
0:         -0.5279], device='cuda:0')
0:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([0.3135, 0.2880, 0.2723, 0.2641, 0.2590, 0.2633, 0.2710, 0.2926, 0.3427, 0.3851, 0.4412, 0.5011, 0.5528, 0.5943,
0:         0.6275, 0.6416, 0.6545, 0.6567, 0.2820, 0.2561, 0.2384, 0.2287, 0.2224, 0.2305, 0.2599], device='cuda:0')
0:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([ 0.4334,  0.3157,  0.1337, -0.1018, -0.3416, -0.5334, -0.6424, -0.6446, -0.5367, -0.3558, -0.1465,  0.0639,
0:          0.2492,  0.3822,  0.4618,  0.5021,  0.4966,  0.4411,  0.3920,  0.2383,  0.0377, -0.2021, -0.4419, -0.6315,
0:         -0.7395], device='cuda:0')
0:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([1.8125, 1.8033, 1.7918, 1.7763, 1.7554, 1.7295, 1.6998, 1.6682, 1.6372, 1.6089, 1.5854, 1.5669, 1.5531, 1.5429,
0:         1.5348, 1.5272, 1.5194, 1.5112, 1.5022, 1.4926, 1.4827, 1.4720, 1.4610, 1.4499, 1.4384], device='cuda:0')
0:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([ 0.3735,  0.2704,  0.1521,  0.0315, -0.0610, -0.1078, -0.1676, -0.2027, -0.2074,  0.0139, -0.0434, -0.0657,
0:         -0.1067, -0.1641, -0.1804, -0.1933, -0.1980, -0.1992,  0.0151, -0.0212, -0.0493, -0.0797, -0.1125, -0.1348,
0:         -0.1500], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([-0.1436,  0.0573,  0.0257,  0.1592,  0.0405,  0.1376,  0.0778, -0.0781, -0.0224, -0.1553, -0.0742,  0.1358,
0:         -0.2235, -0.1618,  0.0431,  0.0119, -0.1234, -0.1261, -0.0453,  0.1191,  0.0294,  0.0928, -0.1489,  0.1127,
0:         -0.1329], device='cuda:0')
0: [DEBUG] TRAIN TARGET BATCH
0: Epoch 4, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2237, 2187])
0:     First 25 batch values:
0: tensor([0.4939, 0.4592, 0.4373, 0.4042, 0.3723, 0.3509, 0.3541, 0.4003, 0.4350, 0.4320, 0.4567, 0.4582, 0.4344, 0.3860,
0:         0.3287, 0.2617, 0.2186, 0.2032, 0.1912, 0.2287, 0.1767, 0.1369, 0.0884, 0.0742, 0.0755])
0: [DEBUG] TRAIN PREDICTIONS BATCH
0: Epoch 4, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([26775, 972])
0:      first 25 pred values: tensor([2.0871, 2.0777, 2.0665, 2.0533, 2.0389, 2.0209, 1.9979, 1.9712, 1.9398, 1.9041, 1.8664, 1.8309, 1.7999, 1.7726,
0:         1.7472, 1.7247, 1.7097, 1.6988, 2.0229, 2.0110, 1.9990, 1.9840, 1.9673, 1.9467, 1.9220], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([27273, 972])
0:      first 25 pred values: tensor([-1.9490, -2.0347, -2.1260, -2.2260, -2.3290, -2.4348, -2.5351, -2.6259, -2.7094, -2.7815, -2.8511, -2.9156,
0:         -2.9788, -3.0361, -3.0852, -3.1197, -3.1377, -3.1426, -1.9134, -1.9968, -2.0832, -2.1788, -2.2786, -2.3817,
0:         -2.4876], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([26595, 972])
0:      first 25 pred values: tensor([ 0.3426,  0.3403,  0.3361,  0.3339,  0.3280,  0.3153,  0.2955,  0.2631,  0.2169,  0.1570,  0.0780, -0.0160,
0:         -0.1223, -0.2310, -0.3304, -0.4153, -0.4807, -0.5258,  0.3580,  0.3500,  0.3474,  0.3439,  0.3353,  0.3231,
0:          0.3065], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([26854, 972])
0:      first 25 pred values: tensor([0.2608, 0.2790, 0.2737, 0.2408, 0.1974, 0.1483, 0.0958, 0.0610, 0.0357, 0.0247, 0.0473, 0.0981, 0.1565, 0.1929,
0:         0.1981, 0.1650, 0.1091, 0.0797, 0.1620, 0.1904, 0.2058, 0.1951, 0.1580, 0.1077, 0.0632], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([11575, 2187])
0:      first 25 pred values: tensor([1.0030, 0.9938, 0.9853, 0.9760, 0.9667, 0.9590, 0.9520, 0.9461, 0.9386, 0.9303, 0.9223, 0.9152, 0.9094, 0.9042,
0:         0.8967, 0.8863, 0.8698, 0.8499, 0.8267, 0.8006, 0.7735, 0.7464, 0.7209, 0.6997, 0.6842], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([10287, 243])
0:      first 25 pred values: tensor([-0.1738, -0.1809, -0.1910, -0.1960, -0.1950, -0.1945, -0.2081, -0.2223, -0.2160, -0.1795, -0.1839, -0.1814,
0:         -0.1849, -0.1875, -0.1860, -0.1955, -0.1975, -0.2115, -0.1736, -0.1827, -0.1780, -0.1764, -0.1778, -0.1739,
0:         -0.1831], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([2237, 2187])
0:      first 25 pred values: tensor([-0.7377, -0.6915, -0.6569, -0.6603, -0.6850, -0.6875, -0.7205, -0.7079, -0.7231, -0.6868, -0.6786, -0.6764,
0:         -0.7083, -0.6730, -0.7132, -0.6917, -0.6491, -0.7595, -0.7222, -0.6641, -0.6756, -0.6130, -0.6762, -0.6136,
0:         -0.6146], device='cuda:0', grad_fn=<SliceBackward0>)
1: [DEBUG] TRAIN INPUT BATCH
1: Epoch 4, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([1.6741, 1.6643, 1.6553, 1.6497, 1.6488, 1.6537, 1.6672, 1.6917, 1.7259, 1.7650, 1.8046, 1.8406, 1.8688, 1.8864,
1:         1.8941, 1.8951, 1.8931, 1.8920, 1.6271, 1.6196, 1.6132, 1.6097, 1.6102, 1.6159, 1.6294], device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.2993, -0.3415, -0.3783, -0.4138, -0.4508, -0.4926, -0.5424, -0.6019, -0.6692, -0.7427, -0.8223, -0.9067,
1:         -0.9942, -1.0841, -1.1762, -1.2689, -1.3609, -1.4517, -0.2681, -0.3055, -0.3411, -0.3791, -0.4215, -0.4703,
1:         -0.5279], device='cuda:0')
1:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([0.3135, 0.2880, 0.2723, 0.2641, 0.2590, 0.2633, 0.2710, 0.2926, 0.3427, 0.3851, 0.4412, 0.5011, 0.5528, 0.5943,
1:         0.6275, 0.6416, 0.6545, 0.6567, 0.2820, 0.2561, 0.2384, 0.2287, 0.2224, 0.2305, 0.2599], device='cuda:0')
1:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([ 0.4334,  0.3157,  0.1337, -0.1018, -0.3416, -0.5334, -0.6424, -0.6446, -0.5367, -0.3558, -0.1465,  0.0639,
1:          0.2492,  0.3822,  0.4618,  0.5021,  0.4966,  0.4411,  0.3920,  0.2383,  0.0377, -0.2021, -0.4419, -0.6315,
1:         -0.7395], device='cuda:0')
1:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([1.8125, 1.8033, 1.7918, 1.7763, 1.7554, 1.7295, 1.6998, 1.6682, 1.6372, 1.6089, 1.5854, 1.5669, 1.5531, 1.5429,
1:         1.5348, 1.5272, 1.5194, 1.5112, 1.5022, 1.4926, 1.4827, 1.4720, 1.4610, 1.4499, 1.4384], device='cuda:0')
1:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
1:      first 25 values: tensor([ 0.3735,  0.2704,  0.1521,  0.0315, -0.0610, -0.1078, -0.1676, -0.2027, -0.2074,  0.0139, -0.0434, -0.0657,
1:         -0.1067, -0.1641, -0.1804, -0.1933, -0.1980, -0.1992,  0.0151, -0.0212, -0.0493, -0.0797, -0.1125, -0.1348,
1:         -0.1500], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([ 0.1443,  0.1662,  0.1493,  0.1528,  0.1997,  0.2068,  0.2061,  0.2111,  0.2092,  0.2229,  0.2029,  0.1827,
1:          0.1154,  0.0141, -0.1012, -0.1147, -0.0868, -0.0330,  0.0188,  0.1192,  0.2709,  0.4082,  0.5111,  0.6020,
1:          0.7037], device='cuda:0')
1: [DEBUG] TRAIN TARGET BATCH
1: Epoch 4, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2242, 2187])
1:     First 25 batch values:
1: tensor([-0.6819, -0.6734, -0.6671, -0.6508, -0.6249, -0.5646, -0.5386, -0.5131, -0.5051, -0.4920, -0.4669, -0.4227,
1:         -0.3404, -0.2746, -0.1887, -0.0656,  0.0623,  0.1732,  0.2775,  0.3684,  0.4417,  0.4953,  0.5627,  0.6238,
1:          0.6795])
1: [DEBUG] TRAIN PREDICTIONS BATCH
1: Epoch 4, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([26127, 972])
1:      first 25 pred values: tensor([0.5027, 0.4934, 0.4932, 0.4994, 0.5067, 0.5103, 0.5079, 0.5033, 0.4969, 0.4931, 0.4922, 0.4966, 0.5045, 0.5114,
1:         0.5172, 0.5212, 0.5180, 0.5132, 0.5273, 0.5143, 0.5109, 0.5101, 0.5089, 0.5055, 0.4957], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([26290, 972])
1:      first 25 pred values: tensor([-3.3283, -3.4210, -3.5081, -3.5910, -3.6671, -3.7452, -3.8291, -3.9117, -3.9865, -4.0571, -4.1199, -4.1787,
1:         -4.2412, -4.3072, -4.3854, -4.4635, -4.5406, -4.6053, -3.3008, -3.3881, -3.4763, -3.5616, -3.6353, -3.7126,
1:         -3.7923], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([26726, 972])
1:      first 25 pred values: tensor([0.4037, 0.4482, 0.4901, 0.5288, 0.5628, 0.5994, 0.6347, 0.6683, 0.7062, 0.7362, 0.7644, 0.7808, 0.7952, 0.8074,
1:         0.8181, 0.8356, 0.8526, 0.8680, 0.3517, 0.4156, 0.4803, 0.5341, 0.5815, 0.6247, 0.6634], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([25205, 972])
1:      first 25 pred values: tensor([ 0.3314,  0.2835,  0.2395,  0.2297,  0.2483,  0.2758,  0.2948,  0.3063,  0.2968,  0.2992,  0.3541,  0.4033,
1:          0.4052,  0.3595,  0.2748,  0.1797,  0.0781, -0.0151,  0.4980,  0.4582,  0.4261,  0.3969,  0.3881,  0.3900,
1:          0.3868], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([11955, 2187])
1:      first 25 pred values: tensor([ 0.5661,  0.5379,  0.5106,  0.4866,  0.4647,  0.4448,  0.4265,  0.4056,  0.3784,  0.3440,  0.3003,  0.2481,
1:          0.1869,  0.1169,  0.0423, -0.0326, -0.0978, -0.1464, -0.1796, -0.2062, -0.2402, -0.2934, -0.3721, -0.4764,
1:         -0.5909], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([10447, 243])
1:      first 25 pred values: tensor([-0.1899, -0.1889, -0.1798, -0.1732, -0.1591, -0.1503, -0.1538, -0.1660, -0.1529, -0.1999, -0.1944, -0.1801,
1:         -0.1748, -0.1670, -0.1565, -0.1571, -0.1534, -0.1604, -0.2034, -0.1993, -0.1848, -0.1780, -0.1665, -0.1580,
1:         -0.1639], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([2242, 2187])
1:      first 25 pred values: tensor([-0.1480, -0.0404, -0.0246, -0.0832, -0.0747, -0.0691, -0.1108, -0.1117, -0.1128, -0.0703, -0.0627, -0.0188,
1:         -0.0750, -0.1137, -0.0948, -0.0407, -0.0432, -0.1214, -0.0711, -0.0721, -0.0845, -0.0460, -0.1108, -0.0485,
1:         -0.0522], device='cuda:0', grad_fn=<SliceBackward0>)
0: epoch: 4 [1/5 (20%)]	Loss: 0.50564 : 0.11977 :: 0.07088 (1.44 s/sec)
0: epoch: 4 [2/5 (40%)]	Loss: 0.47785 : 0.10830 :: 0.07102 (8.04 s/sec)
0: epoch: 4 [3/5 (60%)]	Loss: 0.54299 : 0.12905 :: 0.06819 (8.13 s/sec)
0: epoch: 4 [4/5 (80%)]	Loss: 0.49109 : 0.13642 :: 0.06798 (8.13 s/sec)
0: validation loss for strategy=BERT at epoch 4 : 0.10788869857788086
0: validation loss for velocity_u : 0.003361698240041733
0: validation loss for velocity_v : 0.00492282398045063
0: validation loss for specific_humidity : 0.006711023859679699
0: validation loss for velocity_z : 0.10175495594739914
0: validation loss for temperature : 0.018561609089374542
0: validation loss for total_precip : 0.24899789690971375
0: validation loss for t2m : 0.37091100215911865
1: 5 : 16:16:13 :: batch_size = 96, lr = 1.857198821839498e-05
0: 5 : 16:16:13 :: batch_size = 96, lr = 1.857198821839498e-05
0: [DEBUG] TRAIN INPUT BATCH
0: Epoch 5, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
0:        device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([ 0.4106,  0.2988,  0.1775,  0.0512, -0.0750, -0.1946, -0.3043, -0.4013, -0.4799, -0.5385, -0.5818, -0.6208,
0:         -0.6797, -0.7898, -0.9794, -1.2606, -1.6161, -2.0068,  0.5544,  0.4852,  0.4078,  0.3223,  0.2290,  0.1314,
0:          0.0329], device='cuda:0')
0:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.7461, -0.7488, -0.7306, -0.7219, -0.7110, -0.6726, -0.6556, -0.6290, -0.6082, -0.5862, -0.5804, -0.5913,
0:         -0.5907, -0.6252, -0.6630, -0.6892, -0.7202, -0.7387, -0.7380, -0.7420, -0.7463, -0.7481, -0.7480, -0.7531,
0:         -0.7400], device='cuda:0')
0:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([0.6796, 1.0390, 1.0887, 0.9870, 0.9147, 0.8559, 0.8582, 0.9599, 1.0752, 1.2085, 1.3916, 1.5838, 1.8075, 2.0471,
0:         2.2235, 2.3207, 2.2280, 1.8708, 0.6638, 0.9169, 0.8062, 0.5553, 0.3541, 0.1823, 0.0829], device='cuda:0')
0:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([-3.5261, -3.5312, -3.5370, -3.5478, -3.5640, -3.5810, -3.5942, -3.6042, -3.6085, -3.5995, -3.5703, -3.5128,
0:         -3.4164, -3.2677, -3.0615, -2.8087, -2.5324, -2.2558, -1.9938, -1.7515, -1.5285, -1.3289, -1.1617, -1.0327,
0:         -0.9421], device='cuda:0')
0:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([ 0.4374, -0.0478, -0.0772, -0.1067, -0.1950, -0.2315, -0.2362, -0.2221, -0.1997,  1.1323,  0.5905, -0.0431,
0:         -0.1032, -0.1868, -0.2256, -0.2339, -0.2127, -0.1750,  1.2843,  0.9121,  0.2678, -0.0125, -0.1208, -0.1597,
0:         -0.2221], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([ 0.0066,  0.0453, -0.0727,  0.0488, -0.0473, -0.0643,  0.0094,  0.0157,  0.0747,  0.0514,  0.1426, -0.0273,
0:          0.1877, -0.0666,  0.0104,  0.0622,  0.0289, -0.0250, -0.0613,  0.0004,  0.0849, -0.1959, -0.2315, -0.1733,
0:          0.1179], device='cuda:0')
0: [DEBUG] TRAIN TARGET BATCH
0: Epoch 5, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2237, 2187])
0:     First 25 batch values:
0: tensor([0.8976, 0.8256, 0.7400, 0.6928, 0.6981, 0.6996, 0.7110, 0.7248, 0.7347, 0.7366, 0.7434, 0.7610, 0.7466, 0.7299,
0:         0.6994, 0.6756, 0.6774, 0.6898, 0.6709, 0.6457, 0.5341, 0.3932, 0.2369, 0.1238, 0.0095])
0: [DEBUG] TRAIN PREDICTIONS BATCH
0: Epoch 5, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([26775, 972])
0:      first 25 pred values: tensor([1.1373, 1.1380, 1.1359, 1.1316, 1.1277, 1.1206, 1.1101, 1.0984, 1.0914, 1.0869, 1.0857, 1.0875, 1.0899, 1.0934,
0:         1.0933, 1.0929, 1.0950, 1.0986, 1.0705, 1.0665, 1.0635, 1.0618, 1.0601, 1.0555, 1.0476], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([27273, 972])
0:      first 25 pred values: tensor([ 0.0311, -0.4478, -0.9961, -1.5741, -2.1178, -2.5755, -2.9166, -3.1181, -3.2148, -3.2166, -3.1791, -3.1193,
0:         -3.0616, -3.0184, -2.9969, -2.9693, -2.9394, -2.8998,  0.0706, -0.4202, -0.9846, -1.5684, -2.1066, -2.5518,
0:         -2.8794], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([26595, 972])
0:      first 25 pred values: tensor([ 0.9701,  0.8729,  0.7280,  0.5508,  0.3844,  0.2629,  0.2221,  0.2597,  0.3443,  0.4410,  0.4906,  0.4782,
0:          0.3866,  0.2472,  0.0768, -0.0924, -0.2484, -0.3750,  1.0663,  0.9906,  0.8567,  0.6715,  0.4802,  0.3321,
0:          0.2635], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([26854, 972])
0:      first 25 pred values: tensor([ 1.3558,  1.3742,  1.2524,  1.0791,  0.9086,  0.7303,  0.4747,  0.2738,  0.1706,  0.0535, -0.0661, -0.1907,
0:         -0.2595, -0.3198, -0.3483, -0.2420, -0.1918, -0.1951,  1.3040,  1.3631,  1.3080,  1.1681,  1.0018,  0.8317,
0:          0.5516], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([11575, 2187])
0:      first 25 pred values: tensor([-0.4782, -0.4539, -0.4325, -0.4137, -0.3967, -0.3819, -0.3696, -0.3576, -0.3463, -0.3336, -0.3186, -0.3034,
0:         -0.2868, -0.2687, -0.2481, -0.2226, -0.1919, -0.1554, -0.1156, -0.0778, -0.0506, -0.0341, -0.0271, -0.0229,
0:         -0.0140], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([10287, 243])
0:      first 25 pred values: tensor([0.0058, 0.0398, 0.0656, 0.0870, 0.1196, 0.1266, 0.1137, 0.0809, 0.0762, 0.0270, 0.0598, 0.1151, 0.1597, 0.1936,
0:         0.2261, 0.2127, 0.1948, 0.1649, 0.0347, 0.0842, 0.1590, 0.2232, 0.2655, 0.3144, 0.3134], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([2237, 2187])
0:      first 25 pred values: tensor([-0.0684, -0.0411, -0.0383, -0.0758, -0.0685, -0.0688, -0.1002, -0.0721, -0.0894, -0.0471, -0.0381, -0.1253,
0:         -0.1686, -0.1292, -0.0954, -0.0557, -0.0666, -0.0734, -0.1171, -0.0657, -0.1450, -0.0125, -0.1007, -0.0490,
0:         -0.0086], device='cuda:0', grad_fn=<SliceBackward0>)
1: [DEBUG] TRAIN INPUT BATCH
1: Epoch 5, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([2.5145, 2.5099, 2.5043, 2.4980, 2.4910, 2.4831, 2.4747, 2.4655, 2.4554, 2.4446, 2.4330, 2.4205, 2.4075, 2.3938,
1:         2.3794, 2.3646, 2.3491, 2.3330, 2.6785, 2.6761, 2.6736, 2.6705, 2.6672, 2.6634, 2.6589], device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([1.6167, 1.5718, 1.5257, 1.4784, 1.4300, 1.3807, 1.3307, 1.2798, 1.2280, 1.1757, 1.1229, 1.0697, 1.0165, 0.9633,
1:         0.9105, 0.8580, 0.8058, 0.7541, 1.6598, 1.6152, 1.5697, 1.5228, 1.4750, 1.4262, 1.3764], device='cuda:0')
1:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.6991, -0.6985, -0.6979, -0.6975, -0.6971, -0.6963, -0.6957, -0.6950, -0.6941, -0.6933, -0.6923, -0.6917,
1:         -0.6913, -0.6905, -0.6897, -0.6889, -0.6884, -0.6880, -0.6948, -0.6937, -0.6919, -0.6901, -0.6881, -0.6861,
1:         -0.6847], device='cuda:0')
1:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.6963, -0.6742, -0.6477, -0.6234, -0.6013, -0.5859, -0.5770, -0.5726, -0.5682, -0.5616, -0.5505, -0.5351,
1:         -0.5174, -0.5020, -0.4843, -0.4688, -0.4534, -0.4313, -0.7272, -0.6808, -0.6300, -0.5814, -0.5373, -0.5086,
1:         -0.4931], device='cuda:0')
1:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-0.2990, -0.2965, -0.2936, -0.2902, -0.2867, -0.2828, -0.2787, -0.2742, -0.2697, -0.2650, -0.2603, -0.2556,
1:         -0.2509, -0.2463, -0.2417, -0.2371, -0.2325, -0.2279, -0.2232, -0.2182, -0.2132, -0.2079, -0.2023, -0.1968,
1:         -0.1911], device='cuda:0')
1:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
1:      first 25 values: tensor([-0.2382, -0.2382, -0.2382, -0.2382, -0.2382, -0.2382, -0.2382, -0.2382, -0.2382, -0.2382, -0.2382, -0.2382,
1:         -0.2382, -0.2382, -0.2382, -0.2382, -0.2382, -0.2382, -0.2382, -0.2382, -0.2382, -0.2382, -0.2382, -0.2382,
1:         -0.2382], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([0.2079, 0.2153, 0.2225, 0.2300, 0.2390, 0.2537, 0.2689, 0.2837, 0.2996, 0.3157, 0.3319, 0.3441, 0.3555, 0.3693,
1:         0.3835, 0.3977, 0.4096, 0.4217, 0.4330, 0.4384, 0.4483, 0.4554, 0.4610, 0.4668, 0.4892], device='cuda:0')
1: [DEBUG] TRAIN TARGET BATCH
1: Epoch 5, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2242, 2187])
1:     First 25 batch values:
1: tensor([0.3140, 0.3571, 0.3955, 0.4347, 0.4734, 0.5137, 0.5547, 0.5945, 0.6259, 0.6376, 0.6545, 0.6706, 0.6871, 0.6926,
1:         0.6971, 0.7016, 0.7020, 0.6842, 0.6787, 0.6730, 0.6663, 0.6607, 0.6541, 0.6460, 0.6270])
1: [DEBUG] TRAIN PREDICTIONS BATCH
1: Epoch 5, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([26127, 972])
1:      first 25 pred values: tensor([0.4296, 0.4480, 0.4711, 0.4956, 0.5209, 0.5450, 0.5654, 0.5827, 0.5918, 0.5934, 0.5836, 0.5719, 0.5580, 0.5477,
1:         0.5408, 0.5346, 0.5228, 0.5063, 0.4627, 0.4920, 0.5210, 0.5451, 0.5632, 0.5754, 0.5778], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([26290, 972])
1:      first 25 pred values: tensor([-0.8990, -0.9109, -0.9191, -0.9265, -0.9243, -0.9183, -0.9096, -0.8991, -0.8907, -0.8856, -0.8812, -0.8752,
1:         -0.8699, -0.8569, -0.8391, -0.8185, -0.7943, -0.7689, -0.8727, -0.8836, -0.8980, -0.9052, -0.9049, -0.9014,
1:         -0.9002], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([26726, 972])
1:      first 25 pred values: tensor([-0.6866, -0.6874, -0.6872, -0.6873, -0.6870, -0.6875, -0.6874, -0.6892, -0.6919, -0.6932, -0.6943, -0.6956,
1:         -0.6975, -0.6960, -0.6952, -0.6927, -0.6887, -0.6838, -0.6816, -0.6829, -0.6855, -0.6853, -0.6864, -0.6883,
1:         -0.6889], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([25205, 972])
1:      first 25 pred values: tensor([-1.1935, -1.2411, -1.2776, -1.2373, -1.1662, -1.1331, -1.1619, -1.2455, -1.3015, -1.3431, -1.3958, -1.4248,
1:         -1.4352, -1.4571, -1.5091, -1.5309, -1.5466, -1.6160, -1.1502, -1.1869, -1.2150, -1.2265, -1.2624, -1.3123,
1:         -1.3404], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([11955, 2187])
1:      first 25 pred values: tensor([0.8810, 0.8997, 0.9182, 0.9409, 0.9651, 0.9874, 1.0034, 1.0136, 1.0200, 1.0256, 1.0329, 1.0380, 1.0411, 1.0406,
1:         1.0355, 1.0286, 1.0230, 1.0209, 1.0201, 1.0205, 1.0169, 1.0118, 1.0059, 1.0028, 1.0027], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([10447, 243])
1:      first 25 pred values: tensor([-0.2329, -0.2294, -0.2320, -0.2356, -0.2274, -0.2239, -0.2330, -0.2452, -0.2378, -0.2371, -0.2318, -0.2308,
1:         -0.2299, -0.2289, -0.2228, -0.2280, -0.2328, -0.2427, -0.2286, -0.2326, -0.2244, -0.2277, -0.2284, -0.2244,
1:         -0.2255], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([2242, 2187])
1:      first 25 pred values: tensor([-0.1238, -0.0383, -0.0240, -0.0972, -0.0660, -0.0795, -0.0051, -0.0597, -0.0593, -0.0213, -0.0384, -0.0694,
1:         -0.0479, -0.1025, -0.0345, -0.0242, -0.0487, -0.0894, -0.0685, -0.0308, -0.0775, -0.0123, -0.0770, -0.0435,
1:         -0.0387], device='cuda:0', grad_fn=<SliceBackward0>)
0: epoch: 5 [1/5 (20%)]	Loss: 0.48818 : 0.13158 :: 0.06866 (1.39 s/sec)
0: epoch: 5 [2/5 (40%)]	Loss: 0.49212 : 0.12812 :: 0.06832 (8.12 s/sec)
0: epoch: 5 [3/5 (60%)]	Loss: 0.47837 : 0.09841 :: 0.06583 (8.12 s/sec)
0: epoch: 5 [4/5 (80%)]	Loss: 0.48533 : 0.11778 :: 0.06734 (8.12 s/sec)
0: validation loss for strategy=BERT at epoch 5 : 0.12276707589626312
0: validation loss for velocity_u : 0.0034459480084478855
0: validation loss for velocity_v : 0.0049078939482569695
0: validation loss for specific_humidity : 0.006972050294280052
0: validation loss for velocity_z : 0.10663885623216629
0: validation loss for temperature : 0.01842237263917923
0: validation loss for total_precip : 0.36868590116500854
0: validation loss for t2m : 0.35029658675193787
0: 6 : 16:23:00 :: batch_size = 96, lr = 1.8119012895995104e-05
1: 6 : 16:23:00 :: batch_size = 96, lr = 1.8119012895995104e-05
0: [DEBUG] TRAIN INPUT BATCH
0: Epoch 6, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
0:        device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.2460, -0.2520, -0.2584, -0.2650, -0.2718, -0.2788, -0.2861, -0.2933, -0.3007, -0.3082, -0.3154, -0.3228,
0:         -0.3303, -0.3375, -0.3449, -0.3522, -0.3596, -0.3668, -0.2693, -0.2751, -0.2811, -0.2873, -0.2935, -0.2999,
0:         -0.3063], device='cuda:0')
0:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.5720, -0.5717, -0.5713, -0.5710, -0.5706, -0.5702, -0.5696, -0.5692, -0.5687, -0.5683, -0.5678, -0.5676,
0:         -0.5677, -0.5683, -0.5685, -0.5685, -0.5685, -0.5685, -0.5671, -0.5666, -0.5661, -0.5657, -0.5656, -0.5658,
0:         -0.5659], device='cuda:0')
0:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.0606, -0.0460, -0.0337, -0.0236, -0.0135, -0.0022,  0.0090,  0.0225,  0.0393,  0.0595,  0.0831,  0.1089,
0:          0.1392,  0.1706,  0.2031,  0.2357,  0.2660,  0.2929, -0.2166, -0.1885, -0.1605, -0.1347, -0.1088, -0.0842,
0:         -0.0595], device='cuda:0')
0:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([-0.6149, -0.6170, -0.6192, -0.6218, -0.6248, -0.6279, -0.6310, -0.6345, -0.6384, -0.6419, -0.6459, -0.6499,
0:         -0.6540, -0.6582, -0.6627, -0.6672, -0.6723, -0.6776, -0.6836, -0.6902, -0.6976, -0.7060, -0.7151, -0.7250,
0:         -0.7361], device='cuda:0')
0:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([-0.0340, -0.0352, -0.0364, -0.0376, -0.0388, -0.0400, -0.0424, -0.0448, -0.0460, -0.0134, -0.0110, -0.0086,
0:         -0.0074, -0.0050, -0.0086, -0.0098, -0.0110, -0.0122, -0.0050, -0.0026, -0.0001,  0.0023,  0.0035, -0.0038,
0:         -0.0110], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([-0.0210,  0.1544, -0.0709,  0.0199, -0.1045,  0.0585, -0.0510,  0.2259,  0.0863, -0.0999, -0.0945, -0.0595,
0:          0.0262, -0.0482,  0.1393,  0.0657, -0.0654, -0.0933,  0.0507,  0.0217, -0.0504, -0.1715,  0.1138,  0.0129,
0:          0.0185], device='cuda:0')
0: [DEBUG] TRAIN TARGET BATCH
0: Epoch 6, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2237, 2187])
0:     First 25 batch values:
0: tensor([-1.3347, -1.3139, -1.2927, -1.2715, -1.2501, -1.2378, -1.2252, -1.2119, -1.1987, -1.1848, -1.1708, -1.1529,
0:         -1.1264, -1.1086, -1.0953, -1.0838, -1.0723, -1.0604, -1.0485, -1.0364, -1.0240, -1.0558, -1.0826, -1.1033,
0:         -1.1190])
0: [DEBUG] TRAIN PREDICTIONS BATCH
0: Epoch 6, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([26775, 972])
0:      first 25 pred values: tensor([0.2179, 0.2250, 0.2271, 0.2286, 0.2324, 0.2354, 0.2397, 0.2418, 0.2437, 0.2432, 0.2433, 0.2440, 0.2433, 0.2426,
0:         0.2424, 0.2388, 0.2362, 0.2320, 0.1663, 0.1784, 0.1809, 0.1849, 0.1896, 0.1920, 0.1947], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([27273, 972])
0:      first 25 pred values: tensor([-1.1214, -1.1222, -1.1244, -1.1256, -1.1268, -1.1280, -1.1305, -1.1325, -1.1346, -1.1381, -1.1426, -1.1479,
0:         -1.1555, -1.1657, -1.1780, -1.1887, -1.1982, -1.2013, -0.9281, -0.9278, -0.9276, -0.9262, -0.9221, -0.9218,
0:         -0.9195], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([26595, 972])
0:      first 25 pred values: tensor([-0.6301, -0.6309, -0.6303, -0.6295, -0.6284, -0.6268, -0.6263, -0.6251, -0.6239, -0.6226, -0.6205, -0.6190,
0:         -0.6165, -0.6144, -0.6147, -0.6152, -0.6145, -0.6140, -0.6285, -0.6300, -0.6311, -0.6330, -0.6316, -0.6317,
0:         -0.6313], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([26854, 972])
0:      first 25 pred values: tensor([-0.0350, -0.0302, -0.0146, -0.0004,  0.0268,  0.0616,  0.1006,  0.1395,  0.1661,  0.1851,  0.1891,  0.1871,
0:          0.1988,  0.2230,  0.2537,  0.2676,  0.2557,  0.2411, -0.0604, -0.0657, -0.0497, -0.0246,  0.0088,  0.0388,
0:          0.0774], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([11575, 2187])
0:      first 25 pred values: tensor([-0.5027, -0.5085, -0.5132, -0.5184, -0.5239, -0.5320, -0.5424, -0.5546, -0.5672, -0.5785, -0.5877, -0.5946,
0:         -0.6008, -0.6080, -0.6169, -0.6265, -0.6355, -0.6433, -0.6490, -0.6527, -0.6565, -0.6600, -0.6646, -0.6672,
0:         -0.6666], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([10287, 243])
0:      first 25 pred values: tensor([ 0.2289,  0.2601,  0.2758,  0.2845,  0.3160,  0.3327,  0.3398,  0.3094,  0.3039,  0.0813,  0.1106,  0.1243,
0:          0.1411,  0.1618,  0.1809,  0.1868,  0.1842,  0.1878, -0.0623, -0.0380, -0.0221, -0.0133,  0.0020,  0.0259,
0:          0.0324], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([2237, 2187])
0:      first 25 pred values: tensor([-0.1016, -0.0958, -0.0708, -0.0722, -0.0883, -0.0803, -0.1359, -0.1178, -0.1211, -0.1091, -0.0510, -0.1198,
0:         -0.1511, -0.0882, -0.1523, -0.0406, -0.0686, -0.1082, -0.1257, -0.0715, -0.1093, -0.0332, -0.0738, -0.0519,
0:         -0.0175], device='cuda:0', grad_fn=<SliceBackward0>)
1: [DEBUG] TRAIN INPUT BATCH
1: Epoch 6, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.0330, -0.0351, -0.0372, -0.0395, -0.0417, -0.0441, -0.0464, -0.0488, -0.0511, -0.0533, -0.0556, -0.0578,
1:         -0.0599, -0.0622, -0.0644, -0.0668, -0.0694, -0.0721,  0.0340,  0.0309,  0.0279,  0.0248,  0.0217,  0.0187,
1:          0.0156], device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.2460, -0.2520, -0.2584, -0.2650, -0.2718, -0.2788, -0.2861, -0.2933, -0.3007, -0.3082, -0.3154, -0.3228,
1:         -0.3303, -0.3375, -0.3449, -0.3522, -0.3596, -0.3668, -0.2693, -0.2751, -0.2811, -0.2873, -0.2935, -0.2999,
1:         -0.3063], device='cuda:0')
1:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.5720, -0.5717, -0.5713, -0.5710, -0.5706, -0.5702, -0.5696, -0.5692, -0.5687, -0.5683, -0.5678, -0.5676,
1:         -0.5677, -0.5683, -0.5685, -0.5685, -0.5685, -0.5685, -0.5671, -0.5666, -0.5661, -0.5657, -0.5656, -0.5658,
1:         -0.5659], device='cuda:0')
1:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.0606, -0.0460, -0.0337, -0.0236, -0.0135, -0.0022,  0.0090,  0.0225,  0.0393,  0.0595,  0.0831,  0.1089,
1:          0.1392,  0.1706,  0.2031,  0.2357,  0.2660,  0.2929, -0.2166, -0.1885, -0.1605, -0.1347, -0.1088, -0.0842,
1:         -0.0595], device='cuda:0')
1:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-0.6149, -0.6170, -0.6192, -0.6218, -0.6248, -0.6279, -0.6310, -0.6345, -0.6384, -0.6419, -0.6459, -0.6499,
1:         -0.6540, -0.6582, -0.6627, -0.6672, -0.6723, -0.6776, -0.6836, -0.6902, -0.6976, -0.7060, -0.7151, -0.7250,
1:         -0.7361], device='cuda:0')
1:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
1:      first 25 values: tensor([-0.0340, -0.0352, -0.0364, -0.0376, -0.0388, -0.0400, -0.0424, -0.0448, -0.0460, -0.0134, -0.0110, -0.0086,
1:         -0.0074, -0.0050, -0.0086, -0.0098, -0.0110, -0.0122, -0.0050, -0.0026, -0.0001,  0.0023,  0.0035, -0.0038,
1:         -0.0110], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-0.4663, -0.4688, -0.4712, -0.4735, -0.4760, -0.4683, -0.4606, -0.4528, -0.4452, -0.4377, -0.4301, -0.4239,
1:         -0.4206, -0.3812, -0.3384, -0.2943, -0.2510, -0.2081, -0.1656, -0.1237, -0.0827, -0.1156, -0.1480, -0.1793,
1:         -0.2089], device='cuda:0')
1: [DEBUG] TRAIN TARGET BATCH
1: Epoch 6, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2242, 2187])
1:     First 25 batch values:
1: tensor([0.1556, 0.1750, 0.1404, 0.1612, 0.2082, 0.2556, 0.3024, 0.3489, 0.3935, 0.4364, 0.4444, 0.4518, 0.4582, 0.4637,
1:         0.4690, 0.4732, 0.4829, 0.5025, 0.4669, 0.4551, 0.4542, 0.4531, 0.4518, 0.4501, 0.4482])
1: [DEBUG] TRAIN PREDICTIONS BATCH
1: Epoch 6, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([26127, 972])
1:      first 25 pred values: tensor([-0.4556, -0.4539, -0.4509, -0.4486, -0.4489, -0.4503, -0.4526, -0.4522, -0.4497, -0.4461, -0.4409, -0.4342,
1:         -0.4274, -0.4192, -0.4089, -0.4013, -0.3948, -0.3921, -0.4705, -0.4686, -0.4670, -0.4675, -0.4696, -0.4740,
1:         -0.4754], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([26290, 972])
1:      first 25 pred values: tensor([-0.4975, -0.5086, -0.5225, -0.5381, -0.5505, -0.5584, -0.5602, -0.5535, -0.5453, -0.5370, -0.5284, -0.5192,
1:         -0.5072, -0.4899, -0.4687, -0.4457, -0.4201, -0.3945, -0.4919, -0.4926, -0.4959, -0.4991, -0.4993, -0.4954,
1:         -0.4853], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([26726, 972])
1:      first 25 pred values: tensor([-0.6000, -0.6006, -0.6026, -0.6030, -0.6023, -0.6008, -0.6024, -0.6023, -0.6033, -0.6042, -0.6066, -0.6068,
1:         -0.6083, -0.6087, -0.6098, -0.6099, -0.6089, -0.6068, -0.6065, -0.6082, -0.6115, -0.6136, -0.6132, -0.6145,
1:         -0.6149], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([25205, 972])
1:      first 25 pred values: tensor([-0.4104, -0.4020, -0.3882, -0.3727, -0.3528, -0.3355, -0.3185, -0.3020, -0.2801, -0.2638, -0.2514, -0.2230,
1:         -0.1757, -0.1125, -0.0562, -0.0175,  0.0146,  0.0314, -0.4290, -0.4202, -0.3999, -0.3705, -0.3275, -0.2996,
1:         -0.2829], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([11955, 2187])
1:      first 25 pred values: tensor([-0.9573, -0.9548, -0.9523, -0.9497, -0.9500, -0.9536, -0.9605, -0.9690, -0.9788, -0.9871, -0.9920, -0.9940,
1:         -0.9954, -0.9978, -1.0011, -1.0040, -1.0048, -1.0030, -1.0001, -0.9992, -1.0010, -1.0039, -1.0053, -1.0024,
1:         -0.9942], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([10447, 243])
1:      first 25 pred values: tensor([-0.2236, -0.2176, -0.2159, -0.2181, -0.2143, -0.2191, -0.2134, -0.2247, -0.2123, -0.2300, -0.2263, -0.2271,
1:         -0.2268, -0.2215, -0.2178, -0.2148, -0.2153, -0.2162, -0.2411, -0.2399, -0.2305, -0.2309, -0.2292, -0.2233,
1:         -0.2177], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([2242, 2187])
1:      first 25 pred values: tensor([0.6623, 0.7539, 0.7587, 0.7084, 0.6905, 0.7386, 0.6938, 0.6812, 0.6787, 0.7415, 0.7069, 0.7323, 0.7297, 0.7135,
1:         0.6898, 0.7557, 0.7218, 0.6735, 0.6846, 0.7102, 0.7142, 0.7283, 0.6548, 0.6952, 0.7682], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
0: epoch: 6 [1/5 (20%)]	Loss: 0.46394 : 0.10906 :: 0.06913 (1.62 s/sec)
0: epoch: 6 [2/5 (40%)]	Loss: 0.48205 : 0.12991 :: 0.07179 (7.99 s/sec)
0: epoch: 6 [3/5 (60%)]	Loss: 0.47033 : 0.13561 :: 0.06750 (8.04 s/sec)
0: epoch: 6 [4/5 (80%)]	Loss: 0.45199 : 0.09578 :: 0.06903 (8.10 s/sec)
0: validation loss for strategy=BERT at epoch 6 : 0.09837318956851959
0: validation loss for velocity_u : 0.0033970833756029606
0: validation loss for velocity_v : 0.004845352377742529
0: validation loss for specific_humidity : 0.006600483320653439
0: validation loss for velocity_z : 0.10478192567825317
0: validation loss for temperature : 0.01815047860145569
0: validation loss for total_precip : 0.2068578451871872
0: validation loss for t2m : 0.343979150056839
0: 7 : 16:29:54 :: batch_size = 96, lr = 1.7677085752190346e-05
1: 7 : 16:30:04 :: batch_size = 96, lr = 1.7677085752190346e-05
0: [DEBUG] TRAIN INPUT BATCH
0: Epoch 7, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
0:        device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([ 0.0399,  0.0351,  0.0256,  0.0133,  0.0068,  0.0062, -0.0010, -0.0168, -0.0339, -0.0495, -0.0571, -0.0533,
0:         -0.0535, -0.0668, -0.0797, -0.0965, -0.1383, -0.1897,  0.1177,  0.1072,  0.0838,  0.0760,  0.0690,  0.0547,
0:          0.0488], device='cuda:0')
0:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([ 0.8070,  0.6064,  0.4198,  0.2474,  0.1196,  0.0541,  0.0250,  0.0651,  0.1945,  0.2236,  0.1896,  0.1079,
0:          0.0303, -0.0182, -0.0417, -0.0400, -0.0773, -0.1237,  1.3126,  1.1126,  1.0031,  0.7260,  0.5996,  0.4816,
0:          0.4947], device='cuda:0')
0:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.6185, -0.4152, -0.2937, -0.0617,  0.0709,  0.0576,  0.2189,  0.3736,  0.4531,  0.6188,  0.6719,  0.7713,
0:          1.0652,  1.1138,  0.9856,  0.8818,  0.4907,  0.0311, -0.3423, -0.5434, -0.6892, -0.4329, -0.1457, -0.0197,
0:          0.2521], device='cuda:0')
0:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([-0.6451, -0.6492, -0.6300, -0.5939, -0.5422, -0.4842, -0.4414, -0.4177, -0.3952, -0.3581, -0.3020, -0.2247,
0:         -0.1276, -0.0156,  0.0946,  0.1857,  0.2526,  0.2925,  0.3061,  0.3086,  0.3061,  0.2989,  0.2940,  0.2910,
0:          0.2881], device='cuda:0')
0:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([-0.2597, -0.2597, -0.2597, -0.2597, -0.2597, -0.2597, -0.2597, -0.2597, -0.2597, -0.2597, -0.2597, -0.2597,
0:         -0.2597, -0.2597, -0.2597, -0.2597, -0.2597, -0.2597, -0.2597, -0.2597, -0.2597, -0.2597, -0.2597, -0.2597,
0:         -0.2597], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([-0.0244,  0.1999,  0.0214,  0.0737,  0.1010,  0.0599,  0.2104, -0.1002, -0.0073,  0.0954, -0.0577, -0.2768,
0:          0.1292, -0.0371, -0.1029,  0.0029, -0.0042,  0.0819, -0.2142,  0.1020,  0.0317, -0.0785, -0.1150,  0.0640,
0:          0.1513], device='cuda:0')
0: [DEBUG] TRAIN TARGET BATCH
0: Epoch 7, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2237, 2187])
0:     First 25 batch values:
0: tensor([-0.4157, -0.5062, -0.4987, -0.4874, -0.5534, -0.6506, -0.6419, -0.2996,  0.1166,  0.1110, -0.1215, -0.2491,
0:         -0.2763, -0.2420, -0.1520, -0.0258, -0.0965, -0.2654, -0.2966, -0.3124, -0.5007, -0.5554, -0.5871, -0.6870,
0:         -0.7978])
0: [DEBUG] TRAIN PREDICTIONS BATCH
0: Epoch 7, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([26775, 972])
0:      first 25 pred values: tensor([0.4340, 0.3864, 0.3377, 0.2911, 0.2477, 0.2125, 0.1854, 0.1717, 0.1725, 0.1876, 0.2130, 0.2420, 0.2775, 0.3157,
0:         0.3599, 0.4050, 0.4503, 0.4913, 0.6189, 0.5770, 0.5233, 0.4640, 0.4040, 0.3531, 0.3147], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([27273, 972])
0:      first 25 pred values: tensor([-0.5001, -0.5135, -0.5210, -0.5191, -0.5066, -0.4847, -0.4551, -0.4223, -0.3901, -0.3586, -0.3277, -0.2915,
0:         -0.2511, -0.2098, -0.1708, -0.1374, -0.1137, -0.1029, -0.4382, -0.4540, -0.4645, -0.4699, -0.4649, -0.4480,
0:         -0.4251], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([26595, 972])
0:      first 25 pred values: tensor([1.1026, 1.2110, 1.3480, 1.4871, 1.5989, 1.6798, 1.7331, 1.7575, 1.7703, 1.7756, 1.7971, 1.8184, 1.8562, 1.8802,
0:         1.8898, 1.8748, 1.8361, 1.7854, 1.3919, 1.4903, 1.6148, 1.7300, 1.8286, 1.8911, 1.9316], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([26854, 972])
0:      first 25 pred values: tensor([0.6416, 0.5597, 0.4802, 0.4433, 0.4094, 0.4138, 0.4416, 0.3948, 0.3738, 0.4054, 0.4038, 0.3745, 0.3391, 0.3563,
0:         0.3404, 0.2503, 0.2486, 0.2786, 0.7020, 0.5804, 0.4653, 0.4425, 0.4125, 0.4196, 0.4722], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([11575, 2187])
0:      first 25 pred values: tensor([0.5077, 0.4009, 0.3035, 0.2439, 0.2264, 0.2195, 0.1974, 0.1707, 0.1764, 0.2512, 0.3957, 0.5653, 0.7074, 0.8036,
0:         0.8707, 0.9711, 1.1383, 1.3697, 1.6120, 1.8001, 1.8933, 1.8957, 1.8343, 1.7374, 1.6219], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([10287, 243])
0:      first 25 pred values: tensor([-0.2651, -0.2664, -0.2609, -0.2601, -0.2626, -0.2628, -0.2620, -0.2643, -0.2676, -0.2557, -0.2577, -0.2597,
0:         -0.2584, -0.2576, -0.2600, -0.2628, -0.2627, -0.2625, -0.2537, -0.2558, -0.2555, -0.2559, -0.2558, -0.2602,
0:         -0.2588], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([2237, 2187])
0:      first 25 pred values: tensor([0.3713, 0.4017, 0.4174, 0.4001, 0.3443, 0.4057, 0.3880, 0.4205, 0.3905, 0.4199, 0.3742, 0.3556, 0.3507, 0.4345,
0:         0.3706, 0.3930, 0.3852, 0.3849, 0.3395, 0.4340, 0.3777, 0.3924, 0.3642, 0.4171, 0.3706], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
1: [DEBUG] TRAIN INPUT BATCH
1: Epoch 7, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([0.3473, 0.3642, 0.3807, 0.3963, 0.4110, 0.4273, 0.4414, 0.4573, 0.4828, 0.4966, 0.5048, 0.5358, 0.5510, 0.5445,
1:         0.5649, 0.5932, 0.6183, 0.6664, 0.3872, 0.4043, 0.4206, 0.4353, 0.4495, 0.4646, 0.4813], device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([ 0.1491,  0.1271,  0.1051,  0.0879,  0.0721,  0.0588,  0.0406,  0.0321,  0.0452,  0.0336,  0.0260,  0.0562,
1:          0.0624,  0.0626,  0.0911,  0.0975,  0.0729,  0.0450,  0.1180,  0.0930,  0.0687,  0.0469,  0.0258,  0.0055,
1:         -0.0165], device='cuda:0')
1:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.6742, -0.6744, -0.6747, -0.6751, -0.6756, -0.6762, -0.6773, -0.6785, -0.6789, -0.6794, -0.6803, -0.6814,
1:         -0.6822, -0.6833, -0.6848, -0.6876, -0.6900, -0.6938, -0.6828, -0.6823, -0.6823, -0.6823, -0.6826, -0.6830,
1:         -0.6834], device='cuda:0')
1:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([ 0.3522,  0.3961,  0.3588,  0.3247,  0.2413,  0.2424,  0.2633,  0.3489,  0.5716,  0.4487,  0.4465,  0.7725,
1:          0.5332,  0.3192,  0.4213, -0.0209, -0.2525,  0.0581,  0.1832,  0.2435,  0.2369,  0.1876,  0.1053,  0.0581,
1:          0.0647], device='cuda:0')
1:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-0.3455, -0.3486, -0.3496, -0.3557, -0.3588, -0.3651, -0.3648, -0.3727, -0.4053, -0.4160, -0.4327, -0.4781,
1:         -0.4903, -0.4991, -0.5591, -0.6417, -0.7343, -0.8262, -0.8657, -0.8595, -0.8292, -0.7529, -0.6605, -0.5838,
1:         -0.5105], device='cuda:0')
1:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
1:      first 25 values: tensor([-0.1912, -0.2180, -0.2558, -0.2558, -0.2558, -0.2558, -0.2558, -0.2558, -0.2558, -0.2402, -0.2514, -0.2558,
1:         -0.2558, -0.2558, -0.2558, -0.2558, -0.2558, -0.2558, -0.2536, -0.2558, -0.2558, -0.2558, -0.2558, -0.2558,
1:         -0.2558], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-0.6846, -0.4900, -0.3514, -0.5944, -0.8745, -0.8627, -1.0913, -1.6209, -1.5845, -1.5248, -1.5349, -1.3928,
1:         -1.3554, -1.3319, -1.3494, -1.3558, -1.2634, -1.1230, -0.8395, -0.7020, -0.6347, -0.5924, -0.6675, -0.7531,
1:         -0.8519], device='cuda:0')
1: [DEBUG] TRAIN TARGET BATCH
1: Epoch 7, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2242, 2187])
1:     First 25 batch values:
1: tensor([-0.8131, -0.8553, -1.7685, -2.0375, -1.8347, -1.1716, -0.8204, -0.9793, -1.1382, -1.5485, -1.8321, -0.7957,
1:          0.3806,  0.6123,  0.7447,  0.8963,  1.0376,  1.0949,  1.0958,  1.0062,  1.1707,  1.2723,  1.6913,  1.6458,
1:          1.8032])
1: [DEBUG] TRAIN PREDICTIONS BATCH
1: Epoch 7, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([26127, 972])
1:      first 25 pred values: tensor([-0.3297, -0.3345, -0.3381, -0.3439, -0.3538, -0.3655, -0.3805, -0.3992, -0.4228, -0.4474, -0.4716, -0.4982,
1:         -0.5208, -0.5410, -0.5580, -0.5721, -0.5851, -0.5983, -0.2706, -0.2748, -0.2798, -0.2869, -0.2960, -0.3060,
1:         -0.3181], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([26290, 972])
1:      first 25 pred values: tensor([0.4835, 0.4962, 0.5068, 0.5133, 0.5152, 0.5134, 0.5085, 0.5013, 0.4961, 0.4901, 0.4816, 0.4721, 0.4623, 0.4539,
1:         0.4460, 0.4354, 0.4220, 0.4077, 0.5475, 0.5589, 0.5705, 0.5811, 0.5866, 0.5884, 0.5852], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([26726, 972])
1:      first 25 pred values: tensor([-0.6867, -0.6572, -0.6185, -0.5633, -0.4953, -0.4152, -0.3297, -0.2458, -0.1758, -0.1173, -0.0761, -0.0406,
1:         -0.0097,  0.0229,  0.0618,  0.1027,  0.1437,  0.1864, -0.7357, -0.7170, -0.6877, -0.6421, -0.5809, -0.5013,
1:         -0.4116], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([25205, 972])
1:      first 25 pred values: tensor([1.1199, 1.0780, 1.0174, 0.9118, 0.7722, 0.6200, 0.4996, 0.4450, 0.4121, 0.4135, 0.4297, 0.4314, 0.4161, 0.3838,
1:         0.3662, 0.3417, 0.3359, 0.3761, 1.1737, 1.1740, 1.1696, 1.1057, 1.0059, 0.8691, 0.7346], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([11955, 2187])
1:      first 25 pred values: tensor([1.4260, 1.4904, 1.5556, 1.6115, 1.6424, 1.6450, 1.6222, 1.5832, 1.5439, 1.5143, 1.5012, 1.5077, 1.5308, 1.5638,
1:         1.5974, 1.6231, 1.6365, 1.6352, 1.6184, 1.5873, 1.5461, 1.4995, 1.4526, 1.4098, 1.3728], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([10447, 243])
1:      first 25 pred values: tensor([-0.1724, -0.1742, -0.1730, -0.1833, -0.1910, -0.1996, -0.2081, -0.2276, -0.2400, -0.1336, -0.1447, -0.1520,
1:         -0.1706, -0.1827, -0.2042, -0.2210, -0.2394, -0.2427, -0.0807, -0.0948, -0.1190, -0.1553, -0.1826, -0.2039,
1:         -0.2334], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([2242, 2187])
1:      first 25 pred values: tensor([0.7259, 0.8129, 0.8027, 0.7709, 0.7374, 0.7896, 0.8078, 0.7983, 0.7790, 0.8214, 0.8213, 0.7914, 0.7901, 0.8204,
1:         0.7973, 0.7867, 0.8195, 0.7548, 0.7759, 0.8359, 0.7643, 0.7966, 0.7251, 0.8016, 0.7550], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
0: epoch: 7 [1/5 (20%)]	Loss: 0.48266 : 0.14039 :: 0.06785 (1.43 s/sec)
0: epoch: 7 [2/5 (40%)]	Loss: 0.48201 : 0.10855 :: 0.06845 (8.11 s/sec)
0: epoch: 7 [3/5 (60%)]	Loss: 0.47761 : 0.13846 :: 0.07131 (8.02 s/sec)
0: epoch: 7 [4/5 (80%)]	Loss: 0.53124 : 0.11414 :: 0.06573 (8.11 s/sec)
0: validation loss for strategy=BERT at epoch 7 : 0.11508934199810028
0: validation loss for velocity_u : 0.003501168917864561
0: validation loss for velocity_v : 0.004777660593390465
0: validation loss for specific_humidity : 0.007009774446487427
0: validation loss for velocity_z : 0.11844293773174286
0: validation loss for temperature : 0.022035520523786545
0: validation loss for total_precip : 0.2910456955432892
0: validation loss for t2m : 0.3588125705718994
1: 8 : 16:36:40 :: batch_size = 96, lr = 1.7245937319210094e-05
0: 8 : 16:36:40 :: batch_size = 96, lr = 1.7245937319210094e-05
0: [DEBUG] TRAIN INPUT BATCH
0: Epoch 8, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
0:        device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([ 2.8892e-01,  2.4378e-01,  2.0318e-01,  1.6876e-01,  1.4073e-01,  1.1888e-01,  1.0033e-01,  8.0541e-02,
0:          5.7456e-02,  3.0455e-02, -4.9832e-05, -3.3028e-02, -6.7861e-02, -1.0187e-01, -1.3134e-01, -1.5587e-01,
0:         -1.7978e-01, -2.0513e-01,  3.0974e-01,  2.6728e-01,  2.2523e-01,  1.8628e-01,  1.5247e-01,  1.2465e-01,
0:          9.9091e-02], device='cuda:0')
0:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.2935, -0.2962, -0.2992, -0.2989, -0.2921, -0.2652, -0.2325, -0.1692, -0.1051, -0.0311,  0.0580,  0.1278,
0:          0.2104,  0.3013,  0.3858,  0.4563,  0.5210,  0.5773, -0.1387, -0.1365, -0.1287, -0.1285, -0.1233, -0.1093,
0:         -0.0766], device='cuda:0')
0:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([ 0.0654,  0.0478,  0.0742,  0.1622,  0.2854,  0.3448,  0.3052,  0.1820, -0.0006, -0.1568, -0.2360, -0.3064,
0:         -0.3878, -0.4120, -0.3658, -0.2976, -0.3042, -0.4999,  0.2018,  0.1314,  0.1094,  0.1182,  0.1776,  0.2282,
0:          0.2194], device='cuda:0')
0:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([0.5490, 0.5861, 0.6218, 0.6583, 0.6910, 0.7208, 0.7458, 0.7624, 0.7758, 0.7900, 0.8047, 0.8274, 0.8526, 0.8727,
0:         0.8955, 0.9210, 0.9449, 0.9687, 0.9843, 0.9936, 1.0101, 1.0214, 1.0149, 0.9856, 0.9237], device='cuda:0')
0:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([-0.2488, -0.2488, -0.2488, -0.2488, -0.2488, -0.2488, -0.2488, -0.2464, -0.2440, -0.2488, -0.2488, -0.2488,
0:         -0.2488, -0.2488, -0.2488, -0.2464, -0.2417, -0.2345, -0.2488, -0.2488, -0.2488, -0.2488, -0.2488, -0.2488,
0:         -0.2488], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([ 0.0976, -0.0024, -0.1080, -0.1076,  0.0421, -0.0085, -0.1790,  0.0336,  0.0993,  0.1026, -0.0967,  0.1414,
0:         -0.0149,  0.0342,  0.0631,  0.1672,  0.0259, -0.1289,  0.0959,  0.0057, -0.1888,  0.0144,  0.0493, -0.0469,
0:         -0.0534], device='cuda:0')
0: [DEBUG] TRAIN TARGET BATCH
0: Epoch 8, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2237, 2187])
0:     First 25 batch values:
0: tensor([-2.0114, -2.0793, -2.1326, -2.1638, -2.2013, -2.2447, -2.2778, -2.3126, -2.3441, -2.3676, -2.4049, -2.4693,
0:         -2.4991, -2.4863, -2.4687, -2.4273, -2.4189, -2.4566, -2.4775, -2.5056, -2.5131, -2.5216, -2.5162, -2.4995,
0:         -2.4888])
0: [DEBUG] TRAIN PREDICTIONS BATCH
0: Epoch 8, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([26775, 972])
0:      first 25 pred values: tensor([0.6021, 0.5916, 0.5857, 0.5882, 0.5997, 0.6164, 0.6370, 0.6583, 0.6822, 0.6995, 0.7088, 0.7075, 0.6925, 0.6703,
0:         0.6432, 0.6197, 0.6013, 0.5952, 0.6366, 0.6118, 0.5977, 0.5948, 0.6013, 0.6145, 0.6324], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([27273, 972])
0:      first 25 pred values: tensor([-0.4338, -0.4356, -0.4326, -0.4176, -0.4095, -0.4048, -0.4101, -0.4153, -0.4159, -0.4032, -0.3783, -0.3523,
0:         -0.3251, -0.3089, -0.3074, -0.3117, -0.3267, -0.3452, -0.4994, -0.4870, -0.4677, -0.4518, -0.4420, -0.4476,
0:         -0.4647], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([26595, 972])
0:      first 25 pred values: tensor([-0.6211, -0.6148, -0.6093, -0.6052, -0.5998, -0.5820, -0.5510, -0.5089, -0.4604, -0.4018, -0.3245, -0.2453,
0:         -0.1610, -0.0903, -0.0406, -0.0204, -0.0246, -0.0491, -0.6487, -0.6427, -0.6457, -0.6591, -0.6560, -0.6470,
0:         -0.6366], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([26854, 972])
0:      first 25 pred values: tensor([-0.3212, -0.3294, -0.3178, -0.3034, -0.2654, -0.2086, -0.1519, -0.0782, -0.0221,  0.0075,  0.0170, -0.0131,
0:         -0.0369, -0.0255,  0.0306,  0.1311,  0.2303,  0.3270, -0.3420, -0.3493, -0.3174, -0.2890, -0.2504, -0.1937,
0:         -0.1396], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([11575, 2187])
0:      first 25 pred values: tensor([1.0049, 1.0130, 1.0217, 1.0255, 1.0203, 1.0094, 0.9946, 0.9814, 0.9725, 0.9690, 0.9736, 0.9884, 1.0136, 1.0463,
0:         1.0849, 1.1225, 1.1577, 1.1872, 1.2123, 1.2321, 1.2500, 1.2688, 1.2859, 1.2987, 1.3015], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([10287, 243])
0:      first 25 pred values: tensor([-0.2436, -0.2460, -0.2506, -0.2493, -0.2470, -0.2480, -0.2515, -0.2453, -0.2502, -0.2487, -0.2500, -0.2539,
0:         -0.2490, -0.2518, -0.2490, -0.2539, -0.2531, -0.2492, -0.2499, -0.2520, -0.2544, -0.2530, -0.2527, -0.2544,
0:         -0.2517], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([2237, 2187])
0:      first 25 pred values: tensor([-1.3005, -1.2960, -1.3041, -1.3096, -1.3740, -1.2684, -1.3180, -1.2933, -1.3869, -1.2996, -1.2846, -1.3403,
0:         -1.4106, -1.2599, -1.2948, -1.3349, -1.2793, -1.3448, -1.3745, -1.2700, -1.3563, -1.2676, -1.2830, -1.2155,
0:         -1.2206], device='cuda:0', grad_fn=<SliceBackward0>)
1: [DEBUG] TRAIN INPUT BATCH
1: Epoch 8, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([0.9072, 0.8818, 0.8638, 0.8545, 0.8524, 0.8564, 0.8665, 0.8843, 0.9120, 0.9457, 0.9822, 1.0207, 1.0562, 1.0847,
1:         1.1081, 1.1261, 1.1398, 1.1541, 0.9454, 0.9118, 0.8869, 0.8723, 0.8664, 0.8686, 0.8779], device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([ 2.8892e-01,  2.4378e-01,  2.0318e-01,  1.6876e-01,  1.4073e-01,  1.1888e-01,  1.0033e-01,  8.0541e-02,
1:          5.7456e-02,  3.0455e-02, -4.9832e-05, -3.3028e-02, -6.7861e-02, -1.0187e-01, -1.3134e-01, -1.5587e-01,
1:         -1.7978e-01, -2.0513e-01,  3.0974e-01,  2.6728e-01,  2.2523e-01,  1.8628e-01,  1.5247e-01,  1.2465e-01,
1:          9.9091e-02], device='cuda:0')
1:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.2935, -0.2962, -0.2992, -0.2989, -0.2921, -0.2652, -0.2325, -0.1692, -0.1051, -0.0311,  0.0580,  0.1278,
1:          0.2104,  0.3013,  0.3858,  0.4563,  0.5210,  0.5773, -0.1387, -0.1365, -0.1287, -0.1285, -0.1233, -0.1093,
1:         -0.0766], device='cuda:0')
1:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([ 0.0654,  0.0478,  0.0742,  0.1622,  0.2854,  0.3448,  0.3052,  0.1820, -0.0006, -0.1568, -0.2360, -0.3064,
1:         -0.3878, -0.4120, -0.3658, -0.2976, -0.3042, -0.4999,  0.2018,  0.1314,  0.1094,  0.1182,  0.1776,  0.2282,
1:          0.2194], device='cuda:0')
1:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([0.5490, 0.5861, 0.6218, 0.6583, 0.6910, 0.7208, 0.7458, 0.7624, 0.7758, 0.7900, 0.8047, 0.8274, 0.8526, 0.8727,
1:         0.8955, 0.9210, 0.9449, 0.9687, 0.9843, 0.9936, 1.0101, 1.0214, 1.0149, 0.9856, 0.9237], device='cuda:0')
1:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
1:      first 25 values: tensor([-0.2488, -0.2488, -0.2488, -0.2488, -0.2488, -0.2488, -0.2488, -0.2464, -0.2440, -0.2488, -0.2488, -0.2488,
1:         -0.2488, -0.2488, -0.2488, -0.2464, -0.2417, -0.2345, -0.2488, -0.2488, -0.2488, -0.2488, -0.2488, -0.2488,
1:         -0.2488], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([0.3628, 0.3179, 0.2641, 0.3122, 0.3635, 0.3934, 0.3514, 0.3451, 0.2849, 0.2299, 0.1806, 0.1619, 0.1626, 0.1605,
1:         0.1935, 0.1996, 0.1899, 0.1624, 0.1671, 0.1559, 0.1484, 0.1529, 0.1959, 0.2356, 0.2513], device='cuda:0')
1: [DEBUG] TRAIN TARGET BATCH
1: Epoch 8, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2242, 2187])
1:     First 25 batch values:
1: tensor([-0.0593,  0.0342,  0.1717,  0.1998,  0.1258,  0.0576, -0.0215, -0.0645, -0.2703, -0.4456, -0.1395,  0.0210,
1:          0.1680,  0.0299, -0.0135, -0.1576, -0.1891,  0.0102,  0.1494,  0.2061,  0.2031,  0.2542,  0.2797,  0.3052,
1:          0.3036])
1: [DEBUG] TRAIN PREDICTIONS BATCH
1: Epoch 8, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([26127, 972])
1:      first 25 pred values: tensor([0.8871, 0.8699, 0.8463, 0.8180, 0.7849, 0.7518, 0.7236, 0.6986, 0.6780, 0.6606, 0.6438, 0.6273, 0.6120, 0.5963,
1:         0.5780, 0.5597, 0.5382, 0.5167, 0.8124, 0.7949, 0.7715, 0.7438, 0.7125, 0.6810, 0.6527], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([26290, 972])
1:      first 25 pred values: tensor([0.3853, 0.3550, 0.3260, 0.3015, 0.2851, 0.2734, 0.2675, 0.2663, 0.2690, 0.2738, 0.2761, 0.2717, 0.2593, 0.2385,
1:         0.2129, 0.1831, 0.1538, 0.1277, 0.3537, 0.3227, 0.2952, 0.2748, 0.2630, 0.2574, 0.2564], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([26726, 972])
1:      first 25 pred values: tensor([-0.4710, -0.4811, -0.5107, -0.5321, -0.5464, -0.5712, -0.5761, -0.5870, -0.5822, -0.5793, -0.5635, -0.5532,
1:         -0.5458, -0.5458, -0.5405, -0.5355, -0.5125, -0.4828, -0.5660, -0.5682, -0.5862, -0.5884, -0.5816, -0.5748,
1:         -0.5651], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([25205, 972])
1:      first 25 pred values: tensor([ 0.2416,  0.2777,  0.3438,  0.4022,  0.4370,  0.4482,  0.4257,  0.3794,  0.2983,  0.2170,  0.1430,  0.0715,
1:          0.0305,  0.0068, -0.0258, -0.0444, -0.0434, -0.0540,  0.1282,  0.1827,  0.2477,  0.3038,  0.3553,  0.3785,
1:          0.3599], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([11955, 2187])
1:      first 25 pred values: tensor([ 0.1530,  0.1854,  0.2122,  0.2290,  0.2393,  0.2453,  0.2474,  0.2433,  0.2314,  0.2138,  0.1931,  0.1731,
1:          0.1554,  0.1388,  0.1214,  0.1032,  0.0826,  0.0591,  0.0355,  0.0140, -0.0029, -0.0138, -0.0198, -0.0212,
1:         -0.0192], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([10447, 243])
1:      first 25 pred values: tensor([ 0.0243, -0.1216, -0.2495, -0.2836, -0.3505, -0.2960, -0.2297, -0.0619,  0.1840, -0.0891, -0.1073, -0.2242,
1:         -0.3442, -0.3387, -0.2102, -0.1157,  0.0577,  0.3768, -0.1536, -0.2732, -0.2532, -0.3186, -0.2193,  0.0139,
1:          0.1365], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([2242, 2187])
1:      first 25 pred values: tensor([-0.0587,  0.0339,  0.0235,  0.0139, -0.0400,  0.0337,  0.0764,  0.0603,  0.0495,  0.0326, -0.0028, -0.0060,
1:          0.0237,  0.0469,  0.0201,  0.0324,  0.0257,  0.0090, -0.0048,  0.1131, -0.0254,  0.0527, -0.0086,  0.0381,
1:         -0.0010], device='cuda:0', grad_fn=<SliceBackward0>)
0: epoch: 8 [1/5 (20%)]	Loss: 0.48035 : 0.10899 :: 0.06425 (1.55 s/sec)
0: epoch: 8 [2/5 (40%)]	Loss: 0.46272 : 0.11331 :: 0.06812 (8.09 s/sec)
0: epoch: 8 [3/5 (60%)]	Loss: 0.47797 : 0.10567 :: 0.06846 (8.11 s/sec)
0: epoch: 8 [4/5 (80%)]	Loss: 0.48528 : 0.11858 :: 0.06550 (8.11 s/sec)
0: validation loss for strategy=BERT at epoch 8 : 0.10658395290374756
0: validation loss for velocity_u : 0.0036801632959395647
0: validation loss for velocity_v : 0.0051377443596720695
0: validation loss for specific_humidity : 0.00629985798150301
0: validation loss for velocity_z : 0.1182013526558876
0: validation loss for temperature : 0.01712825521826744
0: validation loss for total_precip : 0.26354360580444336
0: validation loss for t2m : 0.33209672570228577
0: 9 : 16:43:08 :: batch_size = 96, lr = 1.6825304701668386e-05
1: 9 : 16:43:08 :: batch_size = 96, lr = 1.6825304701668386e-05
0: [DEBUG] TRAIN INPUT BATCH
0: Epoch 9, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
0:        device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([1.2001, 1.1882, 1.1829, 1.1831, 1.1882, 1.1979, 1.2111, 1.2255, 1.2384, 1.2479, 1.2541, 1.2577, 1.2581, 1.2549,
0:         1.2505, 1.2458, 1.2414, 1.2384, 1.2030, 1.1920, 1.1869, 1.1869, 1.1907, 1.1973, 1.2049], device='cuda:0')
0:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.6602, -0.6641, -0.6686, -0.6736, -0.6784, -0.6842, -0.6880, -0.6923, -0.6978, -0.7029, -0.7079, -0.7121,
0:         -0.7165, -0.7199, -0.7221, -0.7244, -0.7263, -0.7278, -0.6511, -0.6592, -0.6661, -0.6738, -0.6814, -0.6883,
0:         -0.6951], device='cuda:0')
0:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([0.7366, 0.8026, 0.8709, 0.9426, 0.9950, 1.0257, 1.0508, 1.0656, 1.0747, 1.0815, 1.0736, 1.0599, 1.0485, 1.0337,
0:         1.0235, 1.0109, 0.9757, 0.9438, 1.0986, 1.1385, 1.1737, 1.2079, 1.2181, 1.1908, 1.1476], device='cuda:0')
0:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([-1.2197, -1.2324, -1.2423, -1.2511, -1.2576, -1.2632, -1.2702, -1.2777, -1.2849, -1.2928, -1.3014, -1.3081,
0:         -1.3139, -1.3209, -1.3252, -1.3247, -1.3185, -1.3078, -1.2928, -1.2721, -1.2432, -1.2068, -1.1643, -1.1131,
0:         -1.0536], device='cuda:0')
0:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([-0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598,
0:         -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598,
0:         -0.2598], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([-0.0641, -0.0646, -0.0621,  0.1462, -0.0794,  0.2227, -0.1120,  0.0166, -0.1352,  0.0577, -0.0031,  0.2107,
0:          0.0247, -0.1397,  0.2207, -0.0140,  0.0272,  0.0600,  0.0397, -0.0216, -0.0643,  0.0800,  0.1810, -0.0253,
0:         -0.0184], device='cuda:0')
0: [DEBUG] TRAIN TARGET BATCH
0: Epoch 9, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2237, 2187])
0:     First 25 batch values:
0: tensor([-0.1934, -0.1944, -0.2200, -0.2976, -0.3743, -0.4417, -0.4457, -0.4603, -0.4640, -0.4263, -0.3854, -0.3830,
0:         -0.4348, -0.4542, -0.4351, -0.3894, -0.3773, -0.3645, -0.3604, -0.3951, -0.4377, -0.4931, -0.5478, -0.5796,
0:         -0.5980])
0: [DEBUG] TRAIN PREDICTIONS BATCH
0: Epoch 9, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([26775, 972])
0:      first 25 pred values: tensor([-0.6592, -0.6558, -0.6440, -0.6265, -0.6042, -0.5782, -0.5531, -0.5277, -0.5020, -0.4770, -0.4524, -0.4255,
0:         -0.3940, -0.3600, -0.3245, -0.2912, -0.2600, -0.2344, -0.5695, -0.5678, -0.5598, -0.5466, -0.5288, -0.5068,
0:         -0.4851], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([27273, 972])
0:      first 25 pred values: tensor([2.4466, 2.5227, 2.5970, 2.6718, 2.7447, 2.8093, 2.8817, 2.9446, 3.0060, 3.0577, 3.0911, 3.1054, 3.0992, 3.0815,
0:         3.0692, 3.0613, 3.0670, 3.0861, 2.4430, 2.5202, 2.5991, 2.6737, 2.7491, 2.8165, 2.8827], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([26595, 972])
0:      first 25 pred values: tensor([-0.7766, -0.7791, -0.7779, -0.7773, -0.7772, -0.7781, -0.7797, -0.7832, -0.7870, -0.7893, -0.7898, -0.7887,
0:         -0.7849, -0.7775, -0.7684, -0.7581, -0.7452, -0.7375, -0.7753, -0.7757, -0.7754, -0.7753, -0.7739, -0.7747,
0:         -0.7783], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([26854, 972])
0:      first 25 pred values: tensor([0.7341, 0.7645, 0.7900, 0.7991, 0.7801, 0.7446, 0.6894, 0.6027, 0.5619, 0.5597, 0.5265, 0.4689, 0.4135, 0.3392,
0:         0.2558, 0.1961, 0.1206, 0.0734, 0.8937, 0.8925, 0.8882, 0.8555, 0.8200, 0.7994, 0.7719], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([11575, 2187])
0:      first 25 pred values: tensor([0.7573, 0.7388, 0.7191, 0.6984, 0.6781, 0.6585, 0.6374, 0.6162, 0.5961, 0.5768, 0.5613, 0.5474, 0.5344, 0.5209,
0:         0.5079, 0.4939, 0.4796, 0.4632, 0.4454, 0.4249, 0.4014, 0.3737, 0.3421, 0.3078, 0.2693], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([10287, 243])
0:      first 25 pred values: tensor([-0.2552, -0.2547, -0.2586, -0.2625, -0.2631, -0.2628, -0.2608, -0.2577, -0.2543, -0.2529, -0.2586, -0.2597,
0:         -0.2618, -0.2623, -0.2644, -0.2619, -0.2600, -0.2628, -0.2509, -0.2556, -0.2590, -0.2642, -0.2622, -0.2618,
0:         -0.2596], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([2237, 2187])
0:      first 25 pred values: tensor([-1.2063, -1.2313, -1.2147, -1.2081, -1.2476, -1.2191, -1.2350, -1.2380, -1.2605, -1.2454, -1.2075, -1.1860,
0:         -1.2735, -1.2315, -1.2694, -1.2385, -1.1837, -1.2604, -1.2471, -1.2101, -1.2401, -1.1855, -1.1984, -1.1676,
0:         -1.1522], device='cuda:0', grad_fn=<SliceBackward0>)
1: [DEBUG] TRAIN INPUT BATCH
1: Epoch 9, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([0.1377, 0.1703, 0.2022, 0.2312, 0.2544, 0.2725, 0.2865, 0.2951, 0.2946, 0.2844, 0.2683, 0.2472, 0.2207, 0.1920,
1:         0.1642, 0.1367, 0.1108, 0.0888, 0.1609, 0.1854, 0.2052, 0.2189, 0.2248, 0.2220, 0.2108], device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([1.2001, 1.1882, 1.1829, 1.1831, 1.1882, 1.1979, 1.2111, 1.2255, 1.2384, 1.2479, 1.2541, 1.2577, 1.2581, 1.2549,
1:         1.2505, 1.2458, 1.2414, 1.2384, 1.2030, 1.1920, 1.1869, 1.1869, 1.1907, 1.1973, 1.2049], device='cuda:0')
1:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.6602, -0.6641, -0.6686, -0.6736, -0.6784, -0.6842, -0.6880, -0.6923, -0.6978, -0.7029, -0.7079, -0.7121,
1:         -0.7165, -0.7199, -0.7221, -0.7244, -0.7263, -0.7278, -0.6511, -0.6592, -0.6661, -0.6738, -0.6814, -0.6883,
1:         -0.6951], device='cuda:0')
1:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([0.7366, 0.8026, 0.8709, 0.9426, 0.9950, 1.0257, 1.0508, 1.0656, 1.0747, 1.0815, 1.0736, 1.0599, 1.0485, 1.0337,
1:         1.0235, 1.0109, 0.9757, 0.9438, 1.0986, 1.1385, 1.1737, 1.2079, 1.2181, 1.1908, 1.1476], device='cuda:0')
1:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-1.2197, -1.2324, -1.2423, -1.2511, -1.2576, -1.2632, -1.2702, -1.2777, -1.2849, -1.2928, -1.3014, -1.3081,
1:         -1.3139, -1.3209, -1.3252, -1.3247, -1.3185, -1.3078, -1.2928, -1.2721, -1.2432, -1.2068, -1.1643, -1.1131,
1:         -1.0536], device='cuda:0')
1:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
1:      first 25 values: tensor([-0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598,
1:         -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598,
1:         -0.2598], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-0.4365, -0.4726, -0.5294, -0.4996, -0.5191, -0.5538, -0.6189, -0.6903, -0.7617, -0.8310, -0.8892, -0.9498,
1:         -0.9997, -1.0029, -0.9827, -0.9106, -0.8153, -0.7589, -0.7610, -0.8013, -0.8309, -0.8536, -0.8404, -0.7825,
1:         -0.6873], device='cuda:0')
1: [DEBUG] TRAIN TARGET BATCH
1: Epoch 9, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2242, 2187])
1:     First 25 batch values:
1: tensor([-0.5027, -0.5449, -0.6186, -0.7026, -0.7687, -0.8248, -0.8587, -0.8766, -0.8593, -0.8159, -0.7916, -0.7609,
1:         -0.7419, -0.7464, -0.8049, -0.8251, -0.8196, -0.8050, -0.8184, -0.7958, -0.7824, -0.7815, -0.7666, -0.7079,
1:         -0.6046])
1: [DEBUG] TRAIN PREDICTIONS BATCH
1: Epoch 9, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([26127, 972])
1:      first 25 pred values: tensor([0.8054, 0.8062, 0.7988, 0.7849, 0.7675, 0.7455, 0.7258, 0.7063, 0.6917, 0.6836, 0.6781, 0.6755, 0.6693, 0.6688,
1:         0.6712, 0.6773, 0.6816, 0.6848, 0.8702, 0.8800, 0.8781, 0.8687, 0.8521, 0.8290, 0.8040], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([26290, 972])
1:      first 25 pred values: tensor([3.8636, 3.8776, 3.8844, 3.8863, 3.8887, 3.8983, 3.9235, 3.9794, 4.0664, 4.1841, 4.3321, 4.5055, 4.6919, 4.8888,
1:         5.0667, 5.2020, 5.2666, 5.2423, 3.8105, 3.8277, 3.8262, 3.8316, 3.8418, 3.8589, 3.9001], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([26726, 972])
1:      first 25 pred values: tensor([-0.3333, -0.3179, -0.2991, -0.2828, -0.2622, -0.2459, -0.2307, -0.2148, -0.1989, -0.1851, -0.1706, -0.1595,
1:         -0.1461, -0.1339, -0.1230, -0.1120, -0.1035, -0.0976, -0.3451, -0.3215, -0.2999, -0.2784, -0.2545, -0.2330,
1:         -0.2151], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([25205, 972])
1:      first 25 pred values: tensor([0.9467, 1.0937, 1.3330, 1.6070, 1.8156, 1.9449, 2.0201, 1.9946, 1.9116, 1.8289, 1.7052, 1.6178, 1.6076, 1.5333,
1:         1.3825, 1.2527, 1.1466, 1.0275, 0.5075, 0.6415, 0.9536, 1.3118, 1.5806, 1.7354, 1.8297], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([11955, 2187])
1:      first 25 pred values: tensor([-1.1508, -1.0757, -0.9757, -0.8756, -0.7998, -0.7633, -0.7679, -0.7971, -0.8276, -0.8485, -0.8632, -0.8833,
1:         -0.9195, -0.9707, -1.0311, -1.0827, -1.1212, -1.1467, -1.1646, -1.1846, -1.2081, -1.2352, -1.2600, -1.2818,
1:         -1.3106], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([10447, 243])
1:      first 25 pred values: tensor([-0.2560, -0.2550, -0.2540, -0.2529, -0.2507, -0.2541, -0.2494, -0.2405, -0.2405, -0.2570, -0.2591, -0.2531,
1:         -0.2538, -0.2567, -0.2571, -0.2516, -0.2444, -0.2485, -0.2557, -0.2562, -0.2542, -0.2555, -0.2504, -0.2521,
1:         -0.2521], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([2242, 2187])
1:      first 25 pred values: tensor([-0.6571, -0.6537, -0.6203, -0.6524, -0.6560, -0.6393, -0.7045, -0.6361, -0.6723, -0.6581, -0.6460, -0.6088,
1:         -0.6632, -0.6619, -0.6413, -0.6140, -0.6437, -0.7098, -0.6576, -0.6505, -0.6794, -0.5884, -0.6654, -0.6256,
1:         -0.6090], device='cuda:0', grad_fn=<SliceBackward0>)
0: epoch: 9 [1/5 (20%)]	Loss: 0.48228 : 0.12365 :: 0.07364 (1.65 s/sec)
0: epoch: 9 [2/5 (40%)]	Loss: 0.47465 : 0.10874 :: 0.06758 (8.02 s/sec)
0: epoch: 9 [3/5 (60%)]	Loss: 0.46689 : 0.10571 :: 0.07107 (8.05 s/sec)
0: epoch: 9 [4/5 (80%)]	Loss: 0.50847 : 0.10036 :: 0.06593 (8.12 s/sec)
0: validation loss for strategy=BERT at epoch 9 : 0.11643663048744202
0: validation loss for velocity_u : 0.0034661288373172283
0: validation loss for velocity_v : 0.004873764701187611
0: validation loss for specific_humidity : 0.006641032639890909
0: validation loss for velocity_z : 0.1160481795668602
0: validation loss for temperature : 0.020606767386198044
0: validation loss for total_precip : 0.32642799615859985
0: validation loss for t2m : 0.3369925022125244
0: 10 : 16:49:40 :: batch_size = 96, lr = 1.6414931416261842e-05
1: 10 : 16:49:40 :: batch_size = 96, lr = 1.6414931416261842e-05
0: [DEBUG] TRAIN INPUT BATCH
0: Epoch 10, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
0:        device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([0.7124, 0.7305, 0.7397, 0.7408, 0.7170, 0.6638, 0.6033, 0.5503, 0.5000, 0.4518, 0.4134, 0.3821, 0.3464, 0.3080,
0:         0.2773, 0.2523, 0.2172, 0.1676, 0.6623, 0.6736, 0.6771, 0.6702, 0.6419, 0.5951, 0.5438], device='cuda:0')
0:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([ 0.6524,  0.7093,  0.6972,  0.6322,  0.5317,  0.4248,  0.3655,  0.3310,  0.3040,  0.2664,  0.2389,  0.1992,
0:          0.1638,  0.1227,  0.0527, -0.0690, -0.1654, -0.2441,  0.6567,  0.7187,  0.6874,  0.6190,  0.5168,  0.4148,
0:          0.3490], device='cuda:0')
0:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([ 0.3607,  0.2777,  0.2105,  0.2755,  0.5669,  0.6521,  0.2576, -0.1235, -0.2042, -0.3477, -0.5495, -0.4598,
0:         -0.2961, -0.3858, -0.5203, -0.5136, -0.4553, -0.3320,  0.3719,  0.2508,  0.2733,  0.3786,  0.4862,  0.4817,
0:          0.3338], device='cuda:0')
0:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([0.3935, 0.4195, 0.4484, 0.4731, 0.4938, 0.5190, 0.5495, 0.5686, 0.5660, 0.5512, 0.5362, 0.5223, 0.5117, 0.5083,
0:         0.5049, 0.4901, 0.4670, 0.4467, 0.4282, 0.4028, 0.3729, 0.3473, 0.3238, 0.2901, 0.2426], device='cuda:0')
0:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([-0.2563, -0.2563, -0.2588, -0.2588, -0.2588, -0.2588, -0.2588, -0.2588, -0.2588, -0.2563, -0.2539, -0.2563,
0:         -0.2588, -0.2588, -0.2588, -0.2588, -0.2588, -0.2588, -0.2588, -0.2563, -0.2588, -0.2588, -0.2588, -0.2588,
0:         -0.2588], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([ 0.0739, -0.0756,  0.0608,  0.1352, -0.1098,  0.1706, -0.0524,  0.0964,  0.0678,  0.0678, -0.0156, -0.1390,
0:         -0.1255,  0.0771,  0.0193, -0.2451, -0.0312, -0.0191,  0.0969, -0.1002,  0.0626,  0.1608, -0.3073,  0.2723,
0:          0.0373], device='cuda:0')
0: [DEBUG] TRAIN TARGET BATCH
0: Epoch 10, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2237, 2187])
0:     First 25 batch values:
0: tensor([-0.9685, -0.3552,  0.1270,  0.3105,  0.3393,  0.3558,  0.4190,  0.4161,  0.3777,  0.3650,  0.3307,  0.3204,
0:          0.2915,  0.3641,  0.2558,  0.6673,  0.5613,  0.2290,  0.1831,  0.2116,  0.3017,  0.3987,  0.3679,  0.3161,
0:          0.4560])
0: [DEBUG] TRAIN PREDICTIONS BATCH
0: Epoch 10, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([26775, 972])
0:      first 25 pred values: tensor([0.2444, 0.2589, 0.2678, 0.2762, 0.2859, 0.2962, 0.3067, 0.3193, 0.3319, 0.3456, 0.3560, 0.3620, 0.3621, 0.3565,
0:         0.3524, 0.3525, 0.3594, 0.3740, 0.1576, 0.1811, 0.2023, 0.2256, 0.2493, 0.2726, 0.2927], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([27273, 972])
0:      first 25 pred values: tensor([-0.5691, -0.6058, -0.6394, -0.6623, -0.6773, -0.6944, -0.7158, -0.7443, -0.7699, -0.7808, -0.7654, -0.7246,
0:         -0.6676, -0.6089, -0.5586, -0.5225, -0.4958, -0.4818, -0.5588, -0.5973, -0.6336, -0.6616, -0.6840, -0.7073,
0:         -0.7385], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([26595, 972])
0:      first 25 pred values: tensor([-0.2920, -0.2658, -0.2487, -0.2457, -0.2574, -0.2777, -0.2978, -0.3067, -0.2968, -0.2669, -0.2241, -0.1731,
0:         -0.1268, -0.0961, -0.0852, -0.0933, -0.1139, -0.1442, -0.3177, -0.2905, -0.2739, -0.2757, -0.2945, -0.3187,
0:         -0.3368], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([26854, 972])
0:      first 25 pred values: tensor([-0.3004, -0.3705, -0.2830, -0.1371, -0.2764, -0.4629, -0.3808, -0.2577, -0.5985, -1.1040, -0.8374,  0.0386,
0:          0.2995, -0.2318, -0.5191, -0.4580, -0.4593, -0.4123, -0.5114, -0.1544,  0.3313,  0.5923,  0.4182,  0.0959,
0:         -0.0570], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([11575, 2187])
0:      first 25 pred values: tensor([0.3432, 0.3675, 0.3920, 0.4130, 0.4286, 0.4419, 0.4521, 0.4617, 0.4678, 0.4698, 0.4692, 0.4699, 0.4766, 0.4897,
0:         0.5054, 0.5206, 0.5313, 0.5416, 0.5522, 0.5659, 0.5742, 0.5713, 0.5551, 0.5318, 0.5115], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([10287, 243])
0:      first 25 pred values: tensor([-0.2650, -0.2681, -0.2683, -0.2705, -0.2685, -0.2656, -0.2624, -0.2622, -0.2575, -0.2670, -0.2712, -0.2722,
0:         -0.2711, -0.2679, -0.2653, -0.2621, -0.2575, -0.2528, -0.2700, -0.2697, -0.2692, -0.2691, -0.2663, -0.2618,
0:         -0.2584], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([2237, 2187])
0:      first 25 pred values: tensor([0.1296, 0.1338, 0.1657, 0.1503, 0.0893, 0.1293, 0.1161, 0.1348, 0.1277, 0.1524, 0.1750, 0.1120, 0.0331, 0.0935,
0:         0.1037, 0.1403, 0.1570, 0.1616, 0.0887, 0.1181, 0.0590, 0.1743, 0.1499, 0.1585, 0.2439], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
1: [DEBUG] TRAIN INPUT BATCH
1: Epoch 10, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([0.5957, 0.5882, 0.5846, 0.5751, 0.5596, 0.5390, 0.5019, 0.4501, 0.4098, 0.3962, 0.3937, 0.3934, 0.4057, 0.4248,
1:         0.4238, 0.3990, 0.3797, 0.3855, 0.6120, 0.5994, 0.5897, 0.5846, 0.5783, 0.5600, 0.5209], device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([0.7124, 0.7305, 0.7397, 0.7408, 0.7170, 0.6638, 0.6033, 0.5503, 0.5000, 0.4518, 0.4134, 0.3821, 0.3464, 0.3080,
1:         0.2773, 0.2523, 0.2172, 0.1676, 0.6623, 0.6736, 0.6771, 0.6702, 0.6419, 0.5951, 0.5438], device='cuda:0')
1:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([ 0.6524,  0.7093,  0.6972,  0.6322,  0.5317,  0.4248,  0.3655,  0.3310,  0.3040,  0.2664,  0.2389,  0.1992,
1:          0.1638,  0.1227,  0.0527, -0.0690, -0.1654, -0.2441,  0.6567,  0.7187,  0.6874,  0.6190,  0.5168,  0.4148,
1:          0.3490], device='cuda:0')
1:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([ 0.3607,  0.2777,  0.2105,  0.2755,  0.5669,  0.6521,  0.2576, -0.1235, -0.2042, -0.3477, -0.5495, -0.4598,
1:         -0.2961, -0.3858, -0.5203, -0.5136, -0.4553, -0.3320,  0.3719,  0.2508,  0.2733,  0.3786,  0.4862,  0.4817,
1:          0.3338], device='cuda:0')
1:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([0.3935, 0.4195, 0.4484, 0.4731, 0.4938, 0.5190, 0.5495, 0.5686, 0.5660, 0.5512, 0.5362, 0.5223, 0.5117, 0.5083,
1:         0.5049, 0.4901, 0.4670, 0.4467, 0.4282, 0.4028, 0.3729, 0.3473, 0.3238, 0.2901, 0.2426], device='cuda:0')
1:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
1:      first 25 values: tensor([-0.2563, -0.2563, -0.2588, -0.2588, -0.2588, -0.2588, -0.2588, -0.2588, -0.2588, -0.2563, -0.2539, -0.2563,
1:         -0.2588, -0.2588, -0.2588, -0.2588, -0.2588, -0.2588, -0.2588, -0.2563, -0.2588, -0.2588, -0.2588, -0.2588,
1:         -0.2588], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-1.4115, -1.4145, -1.1184, -1.1087, -1.1645, -1.2828, -1.3679, -1.3717, -1.4099, -1.4109, -1.2397, -1.1952,
1:         -1.2339, -1.5331, -1.4766, -1.2583, -1.1350, -1.0736, -1.1868, -0.9778, -0.7684, -0.7193, -0.7726, -0.8792,
1:         -0.8534], device='cuda:0')
1: [DEBUG] TRAIN TARGET BATCH
1: Epoch 10, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2242, 2187])
1:     First 25 batch values:
1: tensor([-1.0328, -1.0186, -0.9612, -0.8082, -0.7167, -0.7496, -1.0255, -1.2424, -1.4784, -1.5994, -1.6542, -1.6031,
1:         -1.6561, -1.6486, -1.6318, -1.5831, -1.6397, -1.7296, -1.6485, -1.6493, -1.6236, -1.2700, -1.0599, -1.0341,
1:         -1.5474])
1: [DEBUG] TRAIN PREDICTIONS BATCH
1: Epoch 10, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([26127, 972])
1:      first 25 pred values: tensor([-0.1020, -0.0697, -0.0443, -0.0357, -0.0532, -0.0859, -0.1238, -0.1525, -0.1633, -0.1599, -0.1486, -0.1376,
1:         -0.1276, -0.1187, -0.1092, -0.0959, -0.0800, -0.0567, -0.1301, -0.1069, -0.0928, -0.0962, -0.1183, -0.1516,
1:         -0.1795], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([26290, 972])
1:      first 25 pred values: tensor([-0.8471, -0.8212, -0.7838, -0.7472, -0.7117, -0.6812, -0.6588, -0.6410, -0.6262, -0.6140, -0.5996, -0.5838,
1:         -0.5679, -0.5504, -0.5336, -0.5216, -0.5119, -0.5031, -0.8707, -0.8498, -0.8148, -0.7757, -0.7337, -0.6942,
1:         -0.6598], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([26726, 972])
1:      first 25 pred values: tensor([-0.4454, -0.4992, -0.5236, -0.5032, -0.4438, -0.3549, -0.2611, -0.1728, -0.1051, -0.0629, -0.0498, -0.0603,
1:         -0.1038, -0.1719, -0.2532, -0.3458, -0.4301, -0.4985, -0.4314, -0.4975, -0.5329, -0.5220, -0.4622, -0.3695,
1:         -0.2698], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([25205, 972])
1:      first 25 pred values: tensor([0.3101, 0.2789, 0.2354, 0.2094, 0.2677, 0.3183, 0.3830, 0.5299, 0.6078, 0.6251, 0.6576, 0.6603, 0.6140, 0.5877,
1:         0.5547, 0.5239, 0.5150, 0.5263, 0.3822, 0.3369, 0.3056, 0.3055, 0.3600, 0.3955, 0.4360], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([11955, 2187])
1:      first 25 pred values: tensor([ 0.1203,  0.1041,  0.0912,  0.0879,  0.0986,  0.1242,  0.1547,  0.1769,  0.1833,  0.1724,  0.1517,  0.1357,
1:          0.1297,  0.1300,  0.1258,  0.1088,  0.0784,  0.0474,  0.0277,  0.0209,  0.0149, -0.0074, -0.0575, -0.1321,
1:         -0.2138], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([10447, 243])
1:      first 25 pred values: tensor([-0.2582, -0.2605, -0.2614, -0.2619, -0.2655, -0.2659, -0.2686, -0.2687, -0.2675, -0.2598, -0.2621, -0.2625,
1:         -0.2646, -0.2645, -0.2630, -0.2673, -0.2651, -0.2632, -0.2612, -0.2627, -0.2634, -0.2641, -0.2654, -0.2655,
1:         -0.2632], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([2242, 2187])
1:      first 25 pred values: tensor([-1.0142, -0.9756, -1.0278, -1.0497, -1.0223, -1.0570, -1.0158, -1.0266, -1.0480, -1.0483, -1.0517, -0.9972,
1:         -1.0737, -1.0631, -1.0671, -1.0412, -0.9655, -1.0718, -1.0633, -1.0107, -1.0318, -1.0059, -1.0790, -0.9934,
1:         -0.9654], device='cuda:0', grad_fn=<SliceBackward0>)
0: epoch: 10 [1/5 (20%)]	Loss: 0.48738 : 0.13419 :: 0.07065 (1.63 s/sec)
0: epoch: 10 [2/5 (40%)]	Loss: 0.47722 : 0.13476 :: 0.06976 (8.03 s/sec)
0: epoch: 10 [3/5 (60%)]	Loss: 0.48539 : 0.13821 :: 0.06956 (8.12 s/sec)
0: epoch: 10 [4/5 (80%)]	Loss: 0.46966 : 0.09858 :: 0.07126 (8.12 s/sec)
0: validation loss for strategy=BERT at epoch 10 : 0.1411811113357544
0: validation loss for velocity_u : 0.0035818128380924463
0: validation loss for velocity_v : 0.005208904389292002
0: validation loss for specific_humidity : 0.006842939183115959
0: validation loss for velocity_z : 0.11821643263101578
0: validation loss for temperature : 0.02005055546760559
0: validation loss for total_precip : 0.5006535649299622
0: validation loss for t2m : 0.3337136507034302
0: 11 : 16:56:14 :: batch_size = 96, lr = 1.601456723537741e-05
1: 11 : 16:56:14 :: batch_size = 96, lr = 1.601456723537741e-05
0: [DEBUG] TRAIN INPUT BATCH
0: Epoch 11, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
0:        device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([0.6094, 0.5738, 0.5401, 0.5087, 0.4796, 0.4524, 0.4268, 0.4025, 0.3792, 0.3567, 0.3347, 0.3130, 0.2914, 0.2694,
0:         0.2467, 0.2234, 0.1993, 0.1745, 0.6626, 0.6171, 0.5730, 0.5314, 0.4929, 0.4578, 0.4253], device='cuda:0')
0:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.6797, -0.6768, -0.6742, -0.6724, -0.6702, -0.6676, -0.6650, -0.6633, -0.6617, -0.6603, -0.6591, -0.6584,
0:         -0.6578, -0.6570, -0.6564, -0.6564, -0.6565, -0.6563, -0.6827, -0.6804, -0.6780, -0.6752, -0.6723, -0.6696,
0:         -0.6670], device='cuda:0')
0:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([1.0406, 1.0582, 1.0604, 1.0472, 1.0231, 0.9902, 0.9507, 0.9069, 0.8630, 0.8214, 0.7819, 0.7446, 0.7117, 0.6810,
0:         0.6547, 0.6306, 0.6109, 0.5933, 0.9025, 0.9025, 0.8937, 0.8762, 0.8542, 0.8257, 0.7950], device='cuda:0')
0:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([-1.0849, -1.0844, -1.0834, -1.0817, -1.0789, -1.0752, -1.0707, -1.0653, -1.0594, -1.0527, -1.0457, -1.0382,
0:         -1.0305, -1.0223, -1.0138, -1.0050, -0.9957, -0.9860, -0.9763, -0.9664, -0.9563, -0.9460, -0.9352, -0.9240,
0:         -0.9125], device='cuda:0')
0:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([-0.2399, -0.2399, -0.2399, -0.2399, -0.2399, -0.2399, -0.2399, -0.2399, -0.2399, -0.2399, -0.2399, -0.2388,
0:         -0.2388, -0.2388, -0.2388, -0.2388, -0.2388, -0.2388, -0.2388, -0.2388, -0.2388, -0.2388, -0.2388, -0.2388,
0:         -0.2388], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([-0.0150,  0.1705,  0.0009, -0.0407, -0.0319, -0.1077, -0.1035, -0.0207, -0.2132,  0.0128, -0.0781,  0.0876,
0:         -0.1073, -0.0447, -0.2094,  0.0430,  0.0194, -0.0115,  0.0175,  0.1811,  0.0214, -0.0840,  0.0243,  0.1567,
0:         -0.0405], device='cuda:0')
0: [DEBUG] TRAIN TARGET BATCH
0: Epoch 11, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2237, 2187])
0:     First 25 batch values:
0: tensor([-0.7494, -0.7721, -0.7792, -0.7754, -0.7824, -0.7992, -0.8147, -0.8395, -0.8623, -0.8761, -0.8807, -0.9030,
0:         -0.9239, -0.9433, -0.9613, -1.0021, -1.0417, -1.0816, -1.1215, -1.1707, -1.2115, -1.2454, -1.2772, -1.3010,
0:         -1.3237])
0: [DEBUG] TRAIN PREDICTIONS BATCH
0: Epoch 11, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([26775, 972])
0:      first 25 pred values: tensor([-0.6298, -0.6219, -0.6099, -0.5961, -0.5791, -0.5602, -0.5379, -0.5162, -0.4950, -0.4755, -0.4569, -0.4435,
0:         -0.4313, -0.4233, -0.4177, -0.4104, -0.4039, -0.3949, -0.6085, -0.5958, -0.5795, -0.5617, -0.5422, -0.5230,
0:         -0.5035], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([27273, 972])
0:      first 25 pred values: tensor([ 0.6641,  0.6555,  0.6448,  0.6300,  0.6064,  0.5777,  0.5448,  0.5089,  0.4706,  0.4317,  0.3855,  0.3333,
0:          0.2728,  0.2082,  0.1417,  0.0783,  0.0191, -0.0383,  0.6464,  0.6321,  0.6158,  0.5943,  0.5670,  0.5354,
0:          0.4987], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([26595, 972])
0:      first 25 pred values: tensor([-0.6401, -0.6373, -0.6363, -0.6383, -0.6416, -0.6420, -0.6429, -0.6416, -0.6415, -0.6426, -0.6453, -0.6485,
0:         -0.6513, -0.6552, -0.6558, -0.6569, -0.6579, -0.6590, -0.6388, -0.6379, -0.6372, -0.6383, -0.6399, -0.6398,
0:         -0.6395], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([26854, 972])
0:      first 25 pred values: tensor([-1.3802, -1.3088, -1.1554, -1.0171, -0.8991, -0.8131, -0.7167, -0.5925, -0.4709, -0.3690, -0.2814, -0.2484,
0:         -0.2134, -0.1899, -0.2032, -0.1634, -0.1234, -0.1284, -1.4637, -1.4192, -1.2635, -1.1155, -0.9907, -0.9138,
0:         -0.8332], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([11575, 2187])
0:      first 25 pred values: tensor([-1.1742, -1.1951, -1.2118, -1.2260, -1.2395, -1.2548, -1.2748, -1.2976, -1.3222, -1.3454, -1.3650, -1.3836,
0:         -1.4026, -1.4224, -1.4408, -1.4544, -1.4601, -1.4594, -1.4554, -1.4509, -1.4495, -1.4503, -1.4534, -1.4565,
0:         -1.4604], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([10287, 243])
0:      first 25 pred values: tensor([-0.1606, -0.1612, -0.1655, -0.1682, -0.1747, -0.1844, -0.1928, -0.1988, -0.2024, -0.1798, -0.1826, -0.1891,
0:         -0.1942, -0.2052, -0.2093, -0.2159, -0.2214, -0.2189, -0.2037, -0.2028, -0.2138, -0.2203, -0.2274, -0.2291,
0:         -0.2335], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([2237, 2187])
0:      first 25 pred values: tensor([-0.8215, -0.7941, -0.7905, -0.8042, -0.8513, -0.7830, -0.7726, -0.7301, -0.7754, -0.7742, -0.7445, -0.8118,
0:         -0.8824, -0.7793, -0.8132, -0.7703, -0.7549, -0.7806, -0.8190, -0.7216, -0.7768, -0.7650, -0.7556, -0.7049,
0:         -0.7425], device='cuda:0', grad_fn=<SliceBackward0>)
1: [DEBUG] TRAIN INPUT BATCH
1: Epoch 11, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.3017, -0.3028, -0.3043, -0.3061, -0.3081, -0.3102, -0.3128, -0.3155, -0.3184, -0.3214, -0.3240, -0.3263,
1:         -0.3278, -0.3285, -0.3280, -0.3265, -0.3237, -0.3198, -0.3148, -0.3109, -0.3074, -0.3045, -0.3020, -0.3005,
1:         -0.2998], device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([0.6094, 0.5738, 0.5401, 0.5087, 0.4796, 0.4524, 0.4268, 0.4025, 0.3792, 0.3567, 0.3347, 0.3130, 0.2914, 0.2694,
1:         0.2467, 0.2234, 0.1993, 0.1745, 0.6626, 0.6171, 0.5730, 0.5314, 0.4929, 0.4578, 0.4253], device='cuda:0')
1:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.6797, -0.6768, -0.6742, -0.6724, -0.6702, -0.6676, -0.6650, -0.6633, -0.6617, -0.6603, -0.6591, -0.6584,
1:         -0.6578, -0.6570, -0.6564, -0.6564, -0.6565, -0.6563, -0.6827, -0.6804, -0.6780, -0.6752, -0.6723, -0.6696,
1:         -0.6670], device='cuda:0')
1:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([1.0406, 1.0582, 1.0604, 1.0472, 1.0231, 0.9902, 0.9507, 0.9069, 0.8630, 0.8214, 0.7819, 0.7446, 0.7117, 0.6810,
1:         0.6547, 0.6306, 0.6109, 0.5933, 0.9025, 0.9025, 0.8937, 0.8762, 0.8542, 0.8257, 0.7950], device='cuda:0')
1:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-1.0849, -1.0844, -1.0834, -1.0817, -1.0789, -1.0752, -1.0707, -1.0653, -1.0594, -1.0527, -1.0457, -1.0382,
1:         -1.0305, -1.0223, -1.0138, -1.0050, -0.9957, -0.9860, -0.9763, -0.9664, -0.9563, -0.9460, -0.9352, -0.9240,
1:         -0.9125], device='cuda:0')
1:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
1:      first 25 values: tensor([-0.2399, -0.2399, -0.2399, -0.2399, -0.2399, -0.2399, -0.2399, -0.2399, -0.2399, -0.2399, -0.2399, -0.2388,
1:         -0.2388, -0.2388, -0.2388, -0.2388, -0.2388, -0.2388, -0.2388, -0.2388, -0.2388, -0.2388, -0.2388, -0.2388,
1:         -0.2388], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-0.7521, -0.7895, -0.8349, -0.8892, -0.9341, -0.9698, -1.0031, -1.0128, -1.0213, -1.0258, -1.0254, -1.0237,
1:         -1.0302, -1.0428, -1.0542, -1.0592, -1.0631, -1.0573, -1.0416, -1.0294, -1.0228, -1.0219, -1.0189, -1.0101,
1:         -1.0001], device='cuda:0')
1: [DEBUG] TRAIN TARGET BATCH
1: Epoch 11, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2242, 2187])
1:     First 25 batch values:
1: tensor([-1.1534, -1.1407, -1.1267, -1.1125, -1.0899, -1.0667, -1.0462, -1.0282, -1.0175, -1.0026, -0.9838, -0.9649,
1:         -0.9655, -0.9658, -0.9632, -0.9574, -0.9558, -0.9585, -0.9653, -0.9721, -0.9759, -0.9793, -0.9810, -0.9809,
1:         -0.9789])
1: [DEBUG] TRAIN PREDICTIONS BATCH
1: Epoch 11, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([26127, 972])
1:      first 25 pred values: tensor([0.8565, 0.8710, 0.8824, 0.8948, 0.8970, 0.8913, 0.8776, 0.8598, 0.8407, 0.8260, 0.8138, 0.8039, 0.7996, 0.7911,
1:         0.7817, 0.7696, 0.7595, 0.7540, 0.8594, 0.8664, 0.8752, 0.8844, 0.8889, 0.8879, 0.8811], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([26290, 972])
1:      first 25 pred values: tensor([-2.3928, -2.4805, -2.5440, -2.5866, -2.6047, -2.5991, -2.5759, -2.5315, -2.4757, -2.4142, -2.3520, -2.2885,
1:         -2.2300, -2.1657, -2.1006, -2.0373, -1.9796, -1.9348, -2.3249, -2.4347, -2.5211, -2.5824, -2.6179, -2.6296,
1:         -2.6186], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([26726, 972])
1:      first 25 pred values: tensor([-0.6966, -0.6971, -0.6973, -0.6971, -0.6985, -0.6993, -0.6998, -0.7002, -0.7011, -0.7013, -0.7016, -0.7005,
1:         -0.6994, -0.6978, -0.6952, -0.6927, -0.6913, -0.6886, -0.6934, -0.6951, -0.6965, -0.6982, -0.6985, -0.6991,
1:         -0.6990], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([25205, 972])
1:      first 25 pred values: tensor([-0.0371, -0.2172, -0.4283, -0.6480, -0.8546, -0.9797, -1.0261, -0.9974, -0.8990, -0.7922, -0.6906, -0.5996,
1:         -0.5417, -0.5229, -0.5445, -0.5788, -0.5935, -0.5833,  0.1157, -0.0918, -0.3402, -0.5814, -0.8238, -0.9955,
1:         -1.0798], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([11955, 2187])
1:      first 25 pred values: tensor([-0.5811, -0.5882, -0.5936, -0.5948, -0.5945, -0.5930, -0.5955, -0.6007, -0.6063, -0.6098, -0.6094, -0.6037,
1:         -0.5938, -0.5792, -0.5584, -0.5314, -0.4966, -0.4549, -0.4096, -0.3633, -0.3179, -0.2732, -0.2285, -0.1816,
1:         -0.1315], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([10447, 243])
1:      first 25 pred values: tensor([-0.2318, -0.2254, -0.2294, -0.2271, -0.2265, -0.2318, -0.2306, -0.2346, -0.2351, -0.2230, -0.2231, -0.2205,
1:         -0.2222, -0.2239, -0.2238, -0.2299, -0.2352, -0.2336, -0.2156, -0.2134, -0.2193, -0.2193, -0.2243, -0.2228,
1:         -0.2266], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([2242, 2187])
1:      first 25 pred values: tensor([-1.3336, -1.2934, -1.3507, -1.3887, -1.4370, -1.3735, -1.3461, -1.3517, -1.3862, -1.3222, -1.3310, -1.3237,
1:         -1.3801, -1.3432, -1.3431, -1.3675, -1.3448, -1.3660, -1.3997, -1.3126, -1.3839, -1.3388, -1.3610, -1.3272,
1:         -1.3213], device='cuda:0', grad_fn=<SliceBackward0>)
0: epoch: 11 [1/5 (20%)]	Loss: 0.47474 : 0.13976 :: 0.07271 (1.41 s/sec)
0: epoch: 11 [2/5 (40%)]	Loss: 0.47167 : 0.10612 :: 0.06447 (8.09 s/sec)
0: epoch: 11 [3/5 (60%)]	Loss: 0.48951 : 0.10789 :: 0.07271 (8.10 s/sec)
0: epoch: 11 [4/5 (80%)]	Loss: 0.46283 : 0.12088 :: 0.06949 (8.10 s/sec)
0: validation loss for strategy=BERT at epoch 11 : 0.1151360422372818
0: validation loss for velocity_u : 0.0035401908680796623
0: validation loss for velocity_v : 0.005031483713537455
0: validation loss for specific_humidity : 0.006447969935834408
0: validation loss for velocity_z : 0.10787971317768097
0: validation loss for temperature : 0.019677579402923584
0: validation loss for total_precip : 0.3002713918685913
0: validation loss for t2m : 0.3631037771701813
0: 12 : 17:02:56 :: batch_size = 96, lr = 1.5623968034514547e-05
1: 12 : 17:02:56 :: batch_size = 96, lr = 1.5623968034514547e-05
0: [DEBUG] TRAIN INPUT BATCH
0: Epoch 12, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
0:        device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([0.4613, 0.4607, 0.4597, 0.4587, 0.4573, 0.4559, 0.4542, 0.4526, 0.4506, 0.4486, 0.4464, 0.4439, 0.4415, 0.4387,
0:         0.4359, 0.4330, 0.4300, 0.4268, 0.4335, 0.4335, 0.4332, 0.4328, 0.4322, 0.4314, 0.4306], device='cuda:0')
0:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.6441, -0.6440, -0.6440, -0.6440, -0.6439, -0.6439, -0.6439, -0.6439, -0.6439, -0.6439, -0.6439, -0.6439,
0:         -0.6439, -0.6439, -0.6439, -0.6439, -0.6439, -0.6439, -0.6447, -0.6446, -0.6444, -0.6443, -0.6443, -0.6442,
0:         -0.6442], device='cuda:0')
0:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.0534, -0.0423, -0.0334, -0.0223, -0.0134, -0.0045,  0.0022,  0.0110,  0.0177,  0.0266,  0.0332,  0.0399,
0:          0.0444,  0.0510,  0.0577,  0.0621,  0.0688,  0.0732, -0.0423, -0.0334, -0.0223, -0.0134, -0.0067,  0.0022,
0:          0.0088], device='cuda:0')
0:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([-0.4191, -0.4179, -0.4166, -0.4153, -0.4140, -0.4130, -0.4117, -0.4107, -0.4096, -0.4088, -0.4078, -0.4070,
0:         -0.4064, -0.4056, -0.4050, -0.4044, -0.4040, -0.4036, -0.4033, -0.4028, -0.4027, -0.4026, -0.4027, -0.4028,
0:         -0.4029], device='cuda:0')
0:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([-0.1760, -0.1760, -0.1736, -0.1723, -0.1711, -0.1699, -0.1674, -0.1662, -0.1650, -0.1821, -0.1797, -0.1785,
0:         -0.1772, -0.1760, -0.1748, -0.1723, -0.1711, -0.1686, -0.1809, -0.1797, -0.1785, -0.1772, -0.1760, -0.1748,
0:         -0.1736], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([-0.1772, -0.0882,  0.0165,  0.0066, -0.0363, -0.0749,  0.0133, -0.1125,  0.1176, -0.0900, -0.1207, -0.1259,
0:          0.0408, -0.1432,  0.0707,  0.0108,  0.0847,  0.1563,  0.0286, -0.1332, -0.0628,  0.1019,  0.2525, -0.0054,
0:          0.0176], device='cuda:0')
0: [DEBUG] TRAIN TARGET BATCH
0: Epoch 12, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2237, 2187])
0:     First 25 batch values:
0: tensor([0.4330, 0.4352, 0.4419, 0.4521, 0.4624, 0.4722, 0.4826, 0.4920, 0.5013, 0.5105, 0.5192, 0.5285, 0.5372, 0.5465,
0:         0.5558, 0.5646, 0.5740, 0.5827, 0.5921, 0.6168, 0.6416, 0.6667, 0.6918, 0.7170, 0.7431])
0: [DEBUG] TRAIN PREDICTIONS BATCH
0: Epoch 12, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([26775, 972])
0:      first 25 pred values: tensor([0.1943, 0.1980, 0.1997, 0.2005, 0.2010, 0.2026, 0.2047, 0.2064, 0.2087, 0.2110, 0.2115, 0.2128, 0.2154, 0.2183,
0:         0.2227, 0.2252, 0.2284, 0.2289, 0.1872, 0.1892, 0.1896, 0.1905, 0.1911, 0.1932, 0.1954], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([27273, 972])
0:      first 25 pred values: tensor([0.2729, 0.2738, 0.2743, 0.2756, 0.2759, 0.2770, 0.2753, 0.2735, 0.2711, 0.2694, 0.2693, 0.2700, 0.2700, 0.2676,
0:         0.2668, 0.2645, 0.2638, 0.2627, 0.2786, 0.2779, 0.2769, 0.2772, 0.2776, 0.2782, 0.2786], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([26595, 972])
0:      first 25 pred values: tensor([-0.6891, -0.6904, -0.6911, -0.6919, -0.6920, -0.6907, -0.6896, -0.6893, -0.6899, -0.6899, -0.6895, -0.6902,
0:         -0.6904, -0.6911, -0.6903, -0.6896, -0.6877, -0.6865, -0.6871, -0.6901, -0.6909, -0.6912, -0.6907, -0.6902,
0:         -0.6889], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([26854, 972])
0:      first 25 pred values: tensor([ 0.0762,  0.0728,  0.0752,  0.0630,  0.0610,  0.0669,  0.0771,  0.0776,  0.0687,  0.0628,  0.0495,  0.0316,
0:          0.0326,  0.0288, -0.0087, -0.0363, -0.0353, -0.0438, -0.0043,  0.0096,  0.0145,  0.0112,  0.0028, -0.0247,
0:         -0.0321], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([11575, 2187])
0:      first 25 pred values: tensor([-0.3572, -0.3514, -0.3475, -0.3442, -0.3395, -0.3338, -0.3282, -0.3234, -0.3200, -0.3168, -0.3131, -0.3087,
0:         -0.3036, -0.2980, -0.2924, -0.2871, -0.2816, -0.2762, -0.2710, -0.2663, -0.2624, -0.2590, -0.2558, -0.2519,
0:         -0.2469], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([10287, 243])
0:      first 25 pred values: tensor([-0.2530, -0.2504, -0.2499, -0.2513, -0.2502, -0.2491, -0.2482, -0.2469, -0.2490, -0.2501, -0.2497, -0.2499,
0:         -0.2524, -0.2539, -0.2531, -0.2534, -0.2509, -0.2524, -0.2526, -0.2523, -0.2537, -0.2554, -0.2587, -0.2569,
0:         -0.2564], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([2237, 2187])
0:      first 25 pred values: tensor([1.3391, 1.3471, 1.3429, 1.3898, 1.3433, 1.3626, 1.3438, 1.3530, 1.4130, 1.3528, 1.4029, 1.3306, 1.3569, 1.3431,
0:         1.3093, 1.3831, 1.3391, 1.3267, 1.3398, 1.3538, 1.3572, 1.3644, 1.3149, 1.3617, 1.3432], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
1: [DEBUG] TRAIN INPUT BATCH
1: Epoch 12, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.3319, -0.3315, -0.3310, -0.3305, -0.3299, -0.3292, -0.3288, -0.3280, -0.3273, -0.3265, -0.3259, -0.3251,
1:         -0.3241, -0.3233, -0.3224, -0.3216, -0.3206, -0.3197, -0.3187, -0.3187, -0.3187, -0.3187, -0.3185, -0.3184,
1:         -0.3184], device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([0.4613, 0.4607, 0.4597, 0.4587, 0.4573, 0.4559, 0.4542, 0.4526, 0.4506, 0.4486, 0.4464, 0.4439, 0.4415, 0.4387,
1:         0.4359, 0.4330, 0.4300, 0.4268, 0.4335, 0.4335, 0.4332, 0.4328, 0.4322, 0.4314, 0.4306], device='cuda:0')
1:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.6441, -0.6440, -0.6440, -0.6440, -0.6439, -0.6439, -0.6439, -0.6439, -0.6439, -0.6439, -0.6439, -0.6439,
1:         -0.6439, -0.6439, -0.6439, -0.6439, -0.6439, -0.6439, -0.6447, -0.6446, -0.6444, -0.6443, -0.6443, -0.6442,
1:         -0.6442], device='cuda:0')
1:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.0534, -0.0423, -0.0334, -0.0223, -0.0134, -0.0045,  0.0022,  0.0110,  0.0177,  0.0266,  0.0332,  0.0399,
1:          0.0444,  0.0510,  0.0577,  0.0621,  0.0688,  0.0732, -0.0423, -0.0334, -0.0223, -0.0134, -0.0067,  0.0022,
1:          0.0088], device='cuda:0')
1:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-0.4191, -0.4179, -0.4166, -0.4153, -0.4140, -0.4130, -0.4117, -0.4107, -0.4096, -0.4088, -0.4078, -0.4070,
1:         -0.4064, -0.4056, -0.4050, -0.4044, -0.4040, -0.4036, -0.4033, -0.4028, -0.4027, -0.4026, -0.4027, -0.4028,
1:         -0.4029], device='cuda:0')
1:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
1:      first 25 values: tensor([-0.1760, -0.1760, -0.1736, -0.1723, -0.1711, -0.1699, -0.1674, -0.1662, -0.1650, -0.1821, -0.1797, -0.1785,
1:         -0.1772, -0.1760, -0.1748, -0.1723, -0.1711, -0.1686, -0.1809, -0.1797, -0.1785, -0.1772, -0.1760, -0.1748,
1:         -0.1736], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-0.6416, -0.6408, -0.6382, -0.6327, -0.6270, -0.6219, -0.6161, -0.6113, -0.6058, -0.6008, -0.5958, -0.5906,
1:         -0.5854, -0.5801, -0.5748, -0.5693, -0.5638, -0.5582, -0.5526, -0.5468, -0.5408, -0.5346, -0.5279, -0.5218,
1:         -0.5151], device='cuda:0')
1: [DEBUG] TRAIN TARGET BATCH
1: Epoch 12, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2242, 2187])
1:     First 25 batch values:
1: tensor([-0.0830, -0.0798, -0.0765, -0.0732, -0.0703, -0.0669, -0.0634, -0.0597, -0.0675, -0.0857, -0.1033, -0.1215,
1:         -0.1395, -0.1565, -0.1729, -0.1887, -0.2051, -0.2214, -0.2370, -0.2530, -0.2689, -0.2847, -0.3004, -0.3160,
1:         -0.3315])
1: [DEBUG] TRAIN PREDICTIONS BATCH
1: Epoch 12, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([26127, 972])
1:      first 25 pred values: tensor([-0.0743, -0.0679, -0.0617, -0.0537, -0.0472, -0.0400, -0.0326, -0.0246, -0.0164, -0.0075,  0.0031,  0.0152,
1:          0.0269,  0.0385,  0.0445,  0.0509,  0.0579,  0.0652, -0.0900, -0.0834, -0.0744, -0.0662, -0.0554, -0.0452,
1:         -0.0344], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([26290, 972])
1:      first 25 pred values: tensor([1.5978, 1.5847, 1.5789, 1.5779, 1.5831, 1.5836, 1.5821, 1.5787, 1.5763, 1.5725, 1.5727, 1.5727, 1.5728, 1.5740,
1:         1.5747, 1.5756, 1.5731, 1.5693, 1.5962, 1.5851, 1.5778, 1.5792, 1.5842, 1.5877, 1.5872], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([26726, 972])
1:      first 25 pred values: tensor([-0.6960, -0.6940, -0.6936, -0.6925, -0.6906, -0.6896, -0.6875, -0.6873, -0.6863, -0.6869, -0.6870, -0.6875,
1:         -0.6870, -0.6862, -0.6851, -0.6810, -0.6800, -0.6780, -0.6944, -0.6923, -0.6916, -0.6900, -0.6891, -0.6884,
1:         -0.6866], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([25205, 972])
1:      first 25 pred values: tensor([ 0.0445,  0.0365,  0.0240,  0.0155,  0.0170,  0.0144,  0.0005,  0.0002,  0.0016, -0.0176, -0.0306, -0.0386,
1:         -0.0532, -0.0587, -0.0600, -0.0642, -0.0610, -0.0439,  0.1032,  0.0934,  0.0830,  0.0819,  0.0849,  0.0759,
1:          0.0622], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([11955, 2187])
1:      first 25 pred values: tensor([-0.8935, -0.8978, -0.8992, -0.9000, -0.9001, -0.9006, -0.9013, -0.9020, -0.9032, -0.9042, -0.9045, -0.9042,
1:         -0.9031, -0.9009, -0.8995, -0.8993, -0.9005, -0.9022, -0.9038, -0.9041, -0.9038, -0.9025, -0.9020, -0.9021,
1:         -0.9010], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([10447, 243])
1:      first 25 pred values: tensor([-0.2589, -0.2561, -0.2536, -0.2529, -0.2528, -0.2517, -0.2507, -0.2501, -0.2523, -0.2545, -0.2565, -0.2546,
1:         -0.2550, -0.2535, -0.2542, -0.2530, -0.2505, -0.2524, -0.2585, -0.2571, -0.2561, -0.2553, -0.2540, -0.2538,
1:         -0.2521], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([2242, 2187])
1:      first 25 pred values: tensor([-0.2234, -0.1803, -0.1549, -0.1914, -0.1824, -0.2035, -0.2093, -0.1974, -0.2282, -0.1824, -0.1607, -0.1551,
1:         -0.1899, -0.2046, -0.2635, -0.1772, -0.2010, -0.2064, -0.1913, -0.2454, -0.2166, -0.1184, -0.2263, -0.2098,
1:         -0.1589], device='cuda:0', grad_fn=<SliceBackward0>)
0: epoch: 12 [1/5 (20%)]	Loss: 0.47513 : 0.11558 :: 0.07011 (1.59 s/sec)
0: epoch: 12 [2/5 (40%)]	Loss: 0.46105 : 0.10098 :: 0.06717 (8.01 s/sec)
0: epoch: 12 [3/5 (60%)]	Loss: 0.47303 : 0.11304 :: 0.06637 (7.91 s/sec)
0: > /work/ab1412/atmorep/pyenv/lib/python3.10/site-packages/torch/autograd/graph.py(825)_engine_run_backward()
0: -> return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
0: (Pdb) 
0: [1;34mwandb[0m:
0: [1;34mwandb[0m: You can sync this run to the cloud by running:
0: [1;34mwandb[0m: [1mwandb sync /work/ab1412/atmorep/wandb/offline-run-20250723_153358-fz3n9mzn[0m
0: [1;34mwandb[0m: Find logs at: [1;35mwandb/offline-run-20250723_153358-fz3n9mzn/logs[0m
0: l50112:3626555:3626955 [0] NCCL INFO [Service thread] Connection closed by localRank 0
0: l50112:3626555:3631703 [0] NCCL INFO comm 0x55555f0e7390 rank 0 nranks 2 cudaDev 0 busId 3000 - Abort COMPLETE
