0: Wandb run: atmorep-8jhbv4ty-18944698
0: l50075:2949035:2949035 [0] NCCL INFO Bootstrap : Using ib0:10.128.11.156<0>
0: l50075:2949035:2949035 [0] NCCL INFO NET/Plugin: No plugin found (libnccl-net.so)
0: l50075:2949035:2949035 [0] NCCL INFO NET/Plugin: Plugin load returned 2 : libnccl-net.so: cannot open shared object file: No such file or directory : when loading libnccl-net.so
0: l50075:2949035:2949035 [0] NCCL INFO NET/Plugin: Using internal network plugin.
0: l50075:2949035:2949035 [0] NCCL INFO cudaDriverVersion 12060
0: NCCL version 2.21.5+cuda12.4
2: l50172:1194082:1194082 [0] NCCL INFO cudaDriverVersion 12060
1: l50154:2881584:2881584 [0] NCCL INFO cudaDriverVersion 12060
2: l50172:1194082:1194082 [0] NCCL INFO Bootstrap : Using ib0:10.128.11.210<0>
3: l50181:4171739:4171739 [0] NCCL INFO cudaDriverVersion 12060
1: l50154:2881584:2881584 [0] NCCL INFO Bootstrap : Using ib0:10.128.11.198<0>
3: l50181:4171739:4171739 [0] NCCL INFO Bootstrap : Using ib0:10.128.11.216<0>
2: l50172:1194082:1194082 [0] NCCL INFO NET/Plugin: No plugin found (libnccl-net.so)
2: l50172:1194082:1194082 [0] NCCL INFO NET/Plugin: Plugin load returned 2 : libnccl-net.so: cannot open shared object file: No such file or directory : when loading libnccl-net.so
2: l50172:1194082:1194082 [0] NCCL INFO NET/Plugin: Using internal network plugin.
1: l50154:2881584:2881584 [0] NCCL INFO NET/Plugin: No plugin found (libnccl-net.so)
1: l50154:2881584:2881584 [0] NCCL INFO NET/Plugin: Plugin load returned 2 : libnccl-net.so: cannot open shared object file: No such file or directory : when loading libnccl-net.so
1: l50154:2881584:2881584 [0] NCCL INFO NET/Plugin: Using internal network plugin.
3: l50181:4171739:4171739 [0] NCCL INFO NET/Plugin: No plugin found (libnccl-net.so)
3: l50181:4171739:4171739 [0] NCCL INFO NET/Plugin: Plugin load returned 2 : libnccl-net.so: cannot open shared object file: No such file or directory : when loading libnccl-net.so
3: l50181:4171739:4171739 [0] NCCL INFO NET/Plugin: Using internal network plugin.
0: l50075:2949035:2949559 [0] NCCL INFO NET/IB : Using [0]mlx5_0:1/IB [1]mlx5_1:1/IB [RO]; OOB ib0:10.128.11.156<0>
0: l50075:2949035:2949559 [0] NCCL INFO Using non-device net plugin version 0
0: l50075:2949035:2949559 [0] NCCL INFO Using network IB
0: l50075:2949035:2949559 [0] NCCL INFO DMA-BUF is available on GPU device 0
1: l50154:2881584:2881743 [0] NCCL INFO NET/IB : Using [0]mlx5_0:1/IB [1]mlx5_1:1/IB [RO]; OOB ib0:10.128.11.198<0>
1: l50154:2881584:2881743 [0] NCCL INFO Using non-device net plugin version 0
1: l50154:2881584:2881743 [0] NCCL INFO Using network IB
2: l50172:1194082:1194240 [0] NCCL INFO NET/IB : Using [0]mlx5_0:1/IB [1]mlx5_1:1/IB [RO]; OOB ib0:10.128.11.210<0>
2: l50172:1194082:1194240 [0] NCCL INFO Using non-device net plugin version 0
2: l50172:1194082:1194240 [0] NCCL INFO Using network IB
3: l50181:4171739:4171896 [0] NCCL INFO NET/IB : Using [0]mlx5_0:1/IB [1]mlx5_1:1/IB [RO]; OOB ib0:10.128.11.216<0>
3: l50181:4171739:4171896 [0] NCCL INFO Using non-device net plugin version 0
3: l50181:4171739:4171896 [0] NCCL INFO Using network IB
1: l50154:2881584:2881743 [0] NCCL INFO DMA-BUF is available on GPU device 0
2: l50172:1194082:1194240 [0] NCCL INFO DMA-BUF is available on GPU device 0
3: l50181:4171739:4171896 [0] NCCL INFO DMA-BUF is available on GPU device 0
3: l50181:4171739:4171896 [0] NCCL INFO ncclCommInitRank comm 0x55555ec9da10 rank 3 nranks 4 cudaDev 0 nvmlDev 0 busId 3000 commId 0xf0e5e03e7f643762 - Init START
2: l50172:1194082:1194240 [0] NCCL INFO ncclCommInitRank comm 0x55555ec9c580 rank 2 nranks 4 cudaDev 0 nvmlDev 0 busId 3000 commId 0xf0e5e03e7f643762 - Init START
1: l50154:2881584:2881743 [0] NCCL INFO ncclCommInitRank comm 0x55555ec9d850 rank 1 nranks 4 cudaDev 0 nvmlDev 0 busId 3000 commId 0xf0e5e03e7f643762 - Init START
0: l50075:2949035:2949559 [0] NCCL INFO ncclCommInitRank comm 0x55555f0e6c90 rank 0 nranks 4 cudaDev 0 nvmlDev 0 busId 3000 commId 0xf0e5e03e7f643762 - Init START
2: l50172:1194082:1194240 [0] NCCL INFO Setting affinity for GPU 0 to ffff0000,00000000,00000000,00000000,ffff0000,00000000
3: l50181:4171739:4171896 [0] NCCL INFO Setting affinity for GPU 0 to ffff0000,00000000,00000000,00000000,ffff0000,00000000
0: l50075:2949035:2949559 [0] NCCL INFO Setting affinity for GPU 0 to ffff0000,00000000,00000000,00000000,ffff0000,00000000
1: l50154:2881584:2881743 [0] NCCL INFO Setting affinity for GPU 0 to ffff0000,00000000,00000000,00000000,ffff0000,00000000
3: l50181:4171739:4171896 [0] NCCL INFO comm 0x55555ec9da10 rank 3 nRanks 4 nNodes 4 localRanks 1 localRank 0 MNNVL 0
3: l50181:4171739:4171896 [0] NCCL INFO Trees [0] -1/-1/-1->3->2 [1] -1/-1/-1->3->2 [2] 1/-1/-1->3->-1 [3] 1/-1/-1->3->-1
3: l50181:4171739:4171896 [0] NCCL INFO P2P Chunksize set to 131072
0: l50075:2949035:2949559 [0] NCCL INFO comm 0x55555f0e6c90 rank 0 nRanks 4 nNodes 4 localRanks 1 localRank 0 MNNVL 0
0: l50075:2949035:2949559 [0] NCCL INFO Channel 00/04 :    0   1   2   3
0: l50075:2949035:2949559 [0] NCCL INFO Channel 01/04 :    0   1   2   3
0: l50075:2949035:2949559 [0] NCCL INFO Channel 02/04 :    0   1   2   3
0: l50075:2949035:2949559 [0] NCCL INFO Channel 03/04 :    0   1   2   3
2: l50172:1194082:1194240 [0] NCCL INFO comm 0x55555ec9c580 rank 2 nRanks 4 nNodes 4 localRanks 1 localRank 0 MNNVL 0
2: l50172:1194082:1194240 [0] NCCL INFO Trees [0] 1/3/-1->2->0 [1] 1/3/-1->2->0 [2] -1/-1/-1->2->1 [3] -1/-1/-1->2->1
2: l50172:1194082:1194240 [0] NCCL INFO P2P Chunksize set to 131072
1: l50154:2881584:2881743 [0] NCCL INFO comm 0x55555ec9d850 rank 1 nRanks 4 nNodes 4 localRanks 1 localRank 0 MNNVL 0
1: l50154:2881584:2881743 [0] NCCL INFO Trees [0] -1/-1/-1->1->2 [1] -1/-1/-1->1->2 [2] 2/0/-1->1->3 [3] 2/0/-1->1->3
1: l50154:2881584:2881743 [0] NCCL INFO P2P Chunksize set to 131072
0: l50075:2949035:2949559 [0] NCCL INFO Trees [0] 2/-1/-1->0->-1 [1] 2/-1/-1->0->-1 [2] -1/-1/-1->0->1 [3] -1/-1/-1->0->1
0: l50075:2949035:2949559 [0] NCCL INFO P2P Chunksize set to 131072
0: l50075:2949035:2949559 [0] NCCL INFO Channel 00/0 : 3[0] -> 0[0] [receive] via NET/IB/0
0: l50075:2949035:2949559 [0] NCCL INFO Channel 01/0 : 3[0] -> 0[0] [receive] via NET/IB/1
0: l50075:2949035:2949559 [0] NCCL INFO Channel 02/0 : 3[0] -> 0[0] [receive] via NET/IB/0
0: l50075:2949035:2949559 [0] NCCL INFO Channel 03/0 : 3[0] -> 0[0] [receive] via NET/IB/1
0: l50075:2949035:2949559 [0] NCCL INFO Channel 00/0 : 0[0] -> 1[0] [send] via NET/IB/0
0: l50075:2949035:2949559 [0] NCCL INFO Channel 01/0 : 0[0] -> 1[0] [send] via NET/IB/1
0: l50075:2949035:2949559 [0] NCCL INFO Channel 02/0 : 0[0] -> 1[0] [send] via NET/IB/0
0: l50075:2949035:2949559 [0] NCCL INFO Channel 03/0 : 0[0] -> 1[0] [send] via NET/IB/1
3: l50181:4171739:4171896 [0] NCCL INFO Channel 00/0 : 2[0] -> 3[0] [receive] via NET/IB/0
3: l50181:4171739:4171896 [0] NCCL INFO Channel 01/0 : 2[0] -> 3[0] [receive] via NET/IB/1
3: l50181:4171739:4171896 [0] NCCL INFO Channel 02/0 : 2[0] -> 3[0] [receive] via NET/IB/0
2: l50172:1194082:1194240 [0] NCCL INFO Channel 00/0 : 1[0] -> 2[0] [receive] via NET/IB/0
3: l50181:4171739:4171896 [0] NCCL INFO Channel 03/0 : 2[0] -> 3[0] [receive] via NET/IB/1
1: l50154:2881584:2881743 [0] NCCL INFO Channel 00/0 : 0[0] -> 1[0] [receive] via NET/IB/0
3: l50181:4171739:4171896 [0] NCCL INFO Channel 00/0 : 3[0] -> 0[0] [send] via NET/IB/0
2: l50172:1194082:1194240 [0] NCCL INFO Channel 01/0 : 1[0] -> 2[0] [receive] via NET/IB/1
3: l50181:4171739:4171896 [0] NCCL INFO Channel 01/0 : 3[0] -> 0[0] [send] via NET/IB/1
1: l50154:2881584:2881743 [0] NCCL INFO Channel 01/0 : 0[0] -> 1[0] [receive] via NET/IB/1
2: l50172:1194082:1194240 [0] NCCL INFO Channel 02/0 : 1[0] -> 2[0] [receive] via NET/IB/0
3: l50181:4171739:4171896 [0] NCCL INFO Channel 02/0 : 3[0] -> 0[0] [send] via NET/IB/0
1: l50154:2881584:2881743 [0] NCCL INFO Channel 02/0 : 0[0] -> 1[0] [receive] via NET/IB/0
3: l50181:4171739:4171896 [0] NCCL INFO Channel 03/0 : 3[0] -> 0[0] [send] via NET/IB/1
2: l50172:1194082:1194240 [0] NCCL INFO Channel 03/0 : 1[0] -> 2[0] [receive] via NET/IB/1
1: l50154:2881584:2881743 [0] NCCL INFO Channel 03/0 : 0[0] -> 1[0] [receive] via NET/IB/1
2: l50172:1194082:1194240 [0] NCCL INFO Channel 00/0 : 2[0] -> 3[0] [send] via NET/IB/0
2: l50172:1194082:1194240 [0] NCCL INFO Channel 01/0 : 2[0] -> 3[0] [send] via NET/IB/1
1: l50154:2881584:2881743 [0] NCCL INFO Channel 00/0 : 1[0] -> 2[0] [send] via NET/IB/0
2: l50172:1194082:1194240 [0] NCCL INFO Channel 02/0 : 2[0] -> 3[0] [send] via NET/IB/0
1: l50154:2881584:2881743 [0] NCCL INFO Channel 01/0 : 1[0] -> 2[0] [send] via NET/IB/1
2: l50172:1194082:1194240 [0] NCCL INFO Channel 03/0 : 2[0] -> 3[0] [send] via NET/IB/1
1: l50154:2881584:2881743 [0] NCCL INFO Channel 02/0 : 1[0] -> 2[0] [send] via NET/IB/0
1: l50154:2881584:2881743 [0] NCCL INFO Channel 03/0 : 1[0] -> 2[0] [send] via NET/IB/1
2: l50172:1194082:1194243 [0] NCCL INFO NCCL_IB_TIMEOUT set by environment to 250.
2: l50172:1194082:1194243 [0] NCCL INFO NCCL_IB_RETRY_CNT set by environment to 50.
3: l50181:4171739:4171899 [0] NCCL INFO NCCL_IB_TIMEOUT set by environment to 250.
3: l50181:4171739:4171899 [0] NCCL INFO NCCL_IB_RETRY_CNT set by environment to 50.
0: l50075:2949035:2949562 [0] NCCL INFO NCCL_IB_TIMEOUT set by environment to 250.
0: l50075:2949035:2949562 [0] NCCL INFO NCCL_IB_RETRY_CNT set by environment to 50.
1: l50154:2881584:2881746 [0] NCCL INFO NCCL_IB_TIMEOUT set by environment to 250.
1: l50154:2881584:2881746 [0] NCCL INFO NCCL_IB_RETRY_CNT set by environment to 50.
3: l50181:4171739:4171896 [0] NCCL INFO Connected all rings
3: l50181:4171739:4171896 [0] NCCL INFO Channel 02/0 : 1[0] -> 3[0] [receive] via NET/IB/0
3: l50181:4171739:4171896 [0] NCCL INFO Channel 03/0 : 1[0] -> 3[0] [receive] via NET/IB/1
3: l50181:4171739:4171896 [0] NCCL INFO Channel 02/0 : 3[0] -> 1[0] [send] via NET/IB/0
3: l50181:4171739:4171896 [0] NCCL INFO Channel 03/0 : 3[0] -> 1[0] [send] via NET/IB/1
1: l50154:2881584:2881743 [0] NCCL INFO Connected all rings
0: l50075:2949035:2949559 [0] NCCL INFO Connected all rings
2: l50172:1194082:1194240 [0] NCCL INFO Connected all rings
0: l50075:2949035:2949559 [0] NCCL INFO Channel 00/0 : 2[0] -> 0[0] [receive] via NET/IB/0
1: l50154:2881584:2881743 [0] NCCL INFO Channel 02/0 : 3[0] -> 1[0] [receive] via NET/IB/0
2: l50172:1194082:1194240 [0] NCCL INFO Channel 00/0 : 0[0] -> 2[0] [receive] via NET/IB/0
0: l50075:2949035:2949559 [0] NCCL INFO Channel 01/0 : 2[0] -> 0[0] [receive] via NET/IB/1
1: l50154:2881584:2881743 [0] NCCL INFO Channel 03/0 : 3[0] -> 1[0] [receive] via NET/IB/1
0: l50075:2949035:2949559 [0] NCCL INFO Channel 00/0 : 0[0] -> 2[0] [send] via NET/IB/0
2: l50172:1194082:1194240 [0] NCCL INFO Channel 01/0 : 0[0] -> 2[0] [receive] via NET/IB/1
0: l50075:2949035:2949559 [0] NCCL INFO Channel 01/0 : 0[0] -> 2[0] [send] via NET/IB/1
1: l50154:2881584:2881743 [0] NCCL INFO Channel 02/0 : 1[0] -> 3[0] [send] via NET/IB/0
2: l50172:1194082:1194240 [0] NCCL INFO Channel 00/0 : 2[0] -> 0[0] [send] via NET/IB/0
1: l50154:2881584:2881743 [0] NCCL INFO Channel 03/0 : 1[0] -> 3[0] [send] via NET/IB/1
2: l50172:1194082:1194240 [0] NCCL INFO Channel 01/0 : 2[0] -> 0[0] [send] via NET/IB/1
0: l50075:2949035:2949559 [0] NCCL INFO Channel 02/0 : 1[0] -> 0[0] [receive] via NET/IB/0
1: l50154:2881584:2881743 [0] NCCL INFO Channel 00/0 : 2[0] -> 1[0] [receive] via NET/IB/0
2: l50172:1194082:1194240 [0] NCCL INFO Channel 00/0 : 3[0] -> 2[0] [receive] via NET/IB/0
0: l50075:2949035:2949559 [0] NCCL INFO Channel 03/0 : 1[0] -> 0[0] [receive] via NET/IB/1
1: l50154:2881584:2881743 [0] NCCL INFO Channel 01/0 : 2[0] -> 1[0] [receive] via NET/IB/1
3: l50181:4171739:4171896 [0] NCCL INFO Channel 00/0 : 3[0] -> 2[0] [send] via NET/IB/0
2: l50172:1194082:1194240 [0] NCCL INFO Channel 01/0 : 3[0] -> 2[0] [receive] via NET/IB/1
1: l50154:2881584:2881743 [0] NCCL INFO Channel 02/0 : 2[0] -> 1[0] [receive] via NET/IB/0
3: l50181:4171739:4171896 [0] NCCL INFO Channel 01/0 : 3[0] -> 2[0] [send] via NET/IB/1
2: l50172:1194082:1194240 [0] NCCL INFO Channel 00/0 : 2[0] -> 1[0] [send] via NET/IB/0
2: l50172:1194082:1194240 [0] NCCL INFO Channel 01/0 : 2[0] -> 1[0] [send] via NET/IB/1
1: l50154:2881584:2881743 [0] NCCL INFO Channel 03/0 : 2[0] -> 1[0] [receive] via NET/IB/1
2: l50172:1194082:1194240 [0] NCCL INFO Channel 02/0 : 2[0] -> 1[0] [send] via NET/IB/0
1: l50154:2881584:2881743 [0] NCCL INFO Channel 02/0 : 1[0] -> 0[0] [send] via NET/IB/0
1: l50154:2881584:2881743 [0] NCCL INFO Channel 03/0 : 1[0] -> 0[0] [send] via NET/IB/1
2: l50172:1194082:1194240 [0] NCCL INFO Channel 03/0 : 2[0] -> 1[0] [send] via NET/IB/1
3: l50181:4171739:4171896 [0] NCCL INFO Connected all trees
3: l50181:4171739:4171896 [0] NCCL INFO threadThresholds 8/8/64 | 32/8/64 | 512 | 512
3: l50181:4171739:4171896 [0] NCCL INFO 4 coll channels, 4 collnet channels, 0 nvls channels, 4 p2p channels, 2 p2p channels per peer
0: l50075:2949035:2949559 [0] NCCL INFO Connected all trees
1: l50154:2881584:2881743 [0] NCCL INFO Connected all trees
2: l50172:1194082:1194240 [0] NCCL INFO Connected all trees
1: l50154:2881584:2881743 [0] NCCL INFO threadThresholds 8/8/64 | 32/8/64 | 512 | 512
1: l50154:2881584:2881743 [0] NCCL INFO 4 coll channels, 4 collnet channels, 0 nvls channels, 4 p2p channels, 2 p2p channels per peer
2: l50172:1194082:1194240 [0] NCCL INFO threadThresholds 8/8/64 | 32/8/64 | 512 | 512
2: l50172:1194082:1194240 [0] NCCL INFO 4 coll channels, 4 collnet channels, 0 nvls channels, 4 p2p channels, 2 p2p channels per peer
0: l50075:2949035:2949559 [0] NCCL INFO threadThresholds 8/8/64 | 32/8/64 | 512 | 512
0: l50075:2949035:2949559 [0] NCCL INFO 4 coll channels, 4 collnet channels, 0 nvls channels, 4 p2p channels, 2 p2p channels per peer
0: l50075:2949035:2949559 [0] NCCL INFO TUNER/Plugin: Plugin load returned 11 : libnccl-net.so: cannot open shared object file: No such file or directory : when loading libnccl-tuner.so
0: l50075:2949035:2949559 [0] NCCL INFO TUNER/Plugin: Using internal tuner plugin.
0: l50075:2949035:2949559 [0] NCCL INFO ncclCommInitRank comm 0x55555f0e6c90 rank 0 nranks 4 cudaDev 0 nvmlDev 0 busId 3000 commId 0xf0e5e03e7f643762 - Init COMPLETE
1: l50154:2881584:2881743 [0] NCCL INFO TUNER/Plugin: Plugin load returned 11 : libnccl-net.so: cannot open shared object file: No such file or directory : when loading libnccl-tuner.so
1: l50154:2881584:2881743 [0] NCCL INFO TUNER/Plugin: Using internal tuner plugin.
1: l50154:2881584:2881743 [0] NCCL INFO ncclCommInitRank comm 0x55555ec9d850 rank 1 nranks 4 cudaDev 0 nvmlDev 0 busId 3000 commId 0xf0e5e03e7f643762 - Init COMPLETE
2: l50172:1194082:1194240 [0] NCCL INFO TUNER/Plugin: Plugin load returned 11 : libnccl-net.so: cannot open shared object file: No such file or directory : when loading libnccl-tuner.so
2: l50172:1194082:1194240 [0] NCCL INFO TUNER/Plugin: Using internal tuner plugin.
2: l50172:1194082:1194240 [0] NCCL INFO ncclCommInitRank comm 0x55555ec9c580 rank 2 nranks 4 cudaDev 0 nvmlDev 0 busId 3000 commId 0xf0e5e03e7f643762 - Init COMPLETE
3: l50181:4171739:4171896 [0] NCCL INFO TUNER/Plugin: Plugin load returned 11 : libnccl-net.so: cannot open shared object file: No such file or directory : when loading libnccl-tuner.so
3: l50181:4171739:4171896 [0] NCCL INFO TUNER/Plugin: Using internal tuner plugin.
3: l50181:4171739:4171896 [0] NCCL INFO ncclCommInitRank comm 0x55555ec9da10 rank 3 nranks 4 cudaDev 0 nvmlDev 0 busId 3000 commId 0xf0e5e03e7f643762 - Init COMPLETE
0: with_ddp : True
0: num_accs_per_task : 1
0: par_rank : 0
0: par_size : 4
0: fields : [['velocity_u', [1, 1024, ['velocity_v', 'temperature'], 0, ['j8dwr5qj', -2]], [96, 105, 114, 123, 137], [12, 3, 6], [3, 18, 18], [0.5, 0.9, 0.2, 0.05]], ['velocity_v', [1, 1024, ['velocity_u', 'temperature'], 0, ['0tlnm5up', -2]], [96, 105, 114, 123, 137], [12, 3, 6], [3, 18, 18], [0.5, 0.9, 0.2, 0.05]], ['specific_humidity', [1, 1024, ['velocity_u', 'velocity_v', 'temperature'], 0, ['v63l01zu', -2]], [96, 105, 114, 123, 137], [12, 3, 6], [3, 18, 18], [0.5, 0.9, 0.2, 0.05]], ['velocity_z', [1, 1024, ['velocity_u', 'velocity_v', 'temperature'], 0, ['9l1errbo', -2]], [96, 105, 114, 123, 137], [12, 3, 6], [3, 18, 18], [0.5, 0.9, 0.2, 0.05]], ['temperature', [1, 1024, ['velocity_u', 'velocity_v', 'specific_humidity'], 0, ['7ojls62c', -2]], [96, 105, 114, 123, 137], [12, 2, 4], [3, 27, 27], [0.5, 0.9, 0.2, 0.05], 'Local'], ['total_precip', [1, 1024, ['velocity_u', 'velocity_v', 'velocity_z', 'specific_humidity'], 0], [0], [12, 6, 12], [3, 9, 9], [0.25, 0.9, 0.1, 0.05]], ['t2m', [1, 1024, ['velocity_u', '
0: velocity_v', 'velocity_z', 'specific_humidity'], 0], [0], [12, 2, 4], [3, 27, 27], [0.5, 0.9, 0.2, 0.05], 'Local']]
0: fields_prediction : [['velocity_u', 0.125], ['velocity_v', 0.125], ['specific_humidity', 0.05], ['velocity_z', 0.01], ['temperature', 0.1], ['total_precip', 0.01], ['t2m', 0.58]]
0: fields_targets : []
0: years_train : [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]
0: years_val : [2021]
0: month : None
0: geo_range_sampling : [[0.0, 360.0], [0.0, 360.0]]
0: time_sampling : 1
0: torch_seed : 5521420987310380410
0: batch_size_validation : 1
0: batch_size : 96
0: num_epochs : 128
0: num_samples_per_epoch : 480
0: num_samples_validate : 128
0: num_loader_workers : 5
0: size_token_info : 8
0: size_token_info_net : 16
0: grad_checkpointing : True
0: with_cls : False
0: with_mixed_precision : True
0: with_layernorm : True
0: coupling_num_heads_per_field : 1
0: dropout_rate : 0.05
0: with_qk_lnorm : True
0: encoder_num_layers : 6
0: encoder_num_heads : 16
0: encoder_num_mlp_layers : 2
0: encoder_att_type : dense
0: decoder_num_layers : 6
0: decoder_num_heads : 16
0: decoder_num_mlp_layers : 2
0: decoder_self_att : False
0: decoder_cross_att_ratio : 0.5
0: decoder_cross_att_rate : 1.0
0: decoder_att_type : dense
0: net_tail_num_nets : 16
0: net_tail_num_layers : 0
0: losses : ['mse_ensemble', 'stats']
0: optimizer_zero : False
0: lr_start : 1e-05
0: lr_max : 2e-05
0: lr_min : 1e-05
0: weight_decay : 0.025
0: lr_decay_rate : 1.025
0: lr_start_epochs : 3
0: model_log_frequency : 256
0: BERT_strategy : BERT
0: forecast_num_tokens : 2
0: BERT_fields_synced : False
0: BERT_mr_max : 2
0: log_test_num_ranks : 0
0: save_grads : False
0: profile : False
0: test_initial : False
0: attention : False
0: rng_seed : None
0: with_wandb : True
0: slurm_job_id : 18944698
0: wandb_id : 8jhbv4ty
0: file_path : /work/ab1412/atmorep/data/era5_y2010_2020_res25_with_t2m.zarr
0: n_size : [36, 13.5, 27.0]
0: model_id : qw047nnt
0: years_test : [2021]
2: Available keys in the Zarr dataset: ['data', 'data_sfc', 'lats', 'lons', 'time']
1: Available keys in the Zarr dataset: ['data', 'data_sfc', 'lats', 'lons', 'time']
3: Available keys in the Zarr dataset: ['data', 'data_sfc', 'lats', 'lons', 'time']
0: Available keys in the Zarr dataset: ['data', 'data_sfc', 'lats', 'lons', 'time']
3: self.ds['data'] : (105192, 7, 5, 721, 1440) :: (105192,)
2: self.ds['data'] : (105192, 7, 5, 721, 1440) :: (105192,)
2: self.lats : (721,)
2: self.lons : (1440,)
3: self.lats : (721,)
3: self.lons : (1440,)
0: self.ds['data'] : (105192, 7, 5, 721, 1440) :: (105192,)
1: self.ds['data'] : (105192, 7, 5, 721, 1440) :: (105192,)
1: self.lats : (721,)
1: self.lons : (1440,)
0: self.lats : (721,)
0: self.lons : (1440,)
0: Available keys in the Zarr dataset: ['data', 'data_sfc', 'lats', 'lons', 'time']
3: Available keys in the Zarr dataset: ['data', 'data_sfc', 'lats', 'lons', 'time']
1: Available keys in the Zarr dataset: ['data', 'data_sfc', 'lats', 'lons', 'time']
2: Available keys in the Zarr dataset: ['data', 'data_sfc', 'lats', 'lons', 'time']
0: self.ds['data'] : (105192, 7, 5, 721, 1440) :: (105192,)
0: self.lats : (721,)
0: self.lons : (1440,)
1: self.ds['data'] : (105192, 7, 5, 721, 1440) :: (105192,)
3: self.ds['data'] : (105192, 7, 5, 721, 1440) :: (105192,)
3: self.lats : (721,)
1: self.lats : (721,)
1: self.lons : (1440,)
3: self.lons : (1440,)
2: self.ds['data'] : (105192, 7, 5, 721, 1440) :: (105192,)
2: self.lats : (721,)
2: self.lons : (1440,)
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
3: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
3: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
3: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
2: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
3: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
2: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
3: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
2: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
3: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
2: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
3: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
2: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
2: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
2: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
2: Loaded model id = qw047nnt.
2: Loaded run 'qw047nnt' at epoch -2.
0: Loaded model id = qw047nnt.
3: Loaded model id = qw047nnt.
3: Loaded run 'qw047nnt' at epoch -2.
0: Loaded run 'qw047nnt' at epoch -2.
1: Loaded model id = qw047nnt.
1: Loaded run 'qw047nnt' at epoch -2.
0: Number of trainable parameters: 886,234,640
0: -1 : 16:01:02 :: batch_size = 96, lr = 1e-05
3: -1 : 16:01:02 :: batch_size = 96, lr = 1e-05
1: -1 : 16:01:02 :: batch_size = 96, lr = 1e-05
2: -1 : 16:01:02 :: batch_size = 96, lr = 1e-05
0: [DEBUG] TRAIN INPUT BATCH
0: Epoch -1, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2: [DEBUG] TRAIN INPUT BATCH
2: Epoch -1, first input batch shapes / sample data:
2:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1: [DEBUG] TRAIN INPUT BATCH
1: Epoch -1, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([0.1609, 0.1687, 0.1771, 0.1856, 0.1934, 0.1998, 0.2044, 0.2065, 0.2060, 0.2024, 0.1953, 0.1848, 0.1710, 0.1545,
0:         0.1359, 0.1156, 0.0944, 0.0727, 0.1242, 0.1305, 0.1372, 0.1435, 0.1486, 0.1522, 0.1535], device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
0:        device='cuda:0')
0:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.7675, -0.7677, -0.7682, -0.7684, -0.7688, -0.7690, -0.7694, -0.7696, -0.7696, -0.7696, -0.7694, -0.7690,
0:         -0.7684, -0.7675, -0.7669, -0.7654, -0.7642, -0.7627, -0.7679, -0.7679, -0.7679, -0.7684, -0.7686, -0.7690,
0:         -0.7694], device='cuda:0')
0:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([0.2517, 0.2483, 0.2586, 0.2927, 0.3485, 0.4145, 0.4726, 0.5102, 0.5215, 0.5113, 0.4840, 0.4464, 0.4020, 0.3565,
0:         0.3143, 0.2825, 0.2677, 0.2688, 0.2893, 0.2995, 0.3234, 0.3622, 0.4077, 0.4498, 0.4783], device='cuda:0')
0:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
0:        device='cuda:0')
0:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([-0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598,
0:         -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598,
0:         -0.2598], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
2:      first 25 values: tensor([0.1609, 0.1687, 0.1771, 0.1856, 0.1934, 0.1998, 0.2044, 0.2065, 0.2060, 0.2024, 0.1953, 0.1848, 0.1710, 0.1545,
2:         0.1359, 0.1156, 0.0944, 0.0727, 0.1242, 0.1305, 0.1372, 0.1435, 0.1486, 0.1522, 0.1535], device='cuda:0')
2:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
2:        device='cuda:0')
2:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([ 0.0606,  0.0233, -0.0172,  0.2147,  0.1751,  0.1818, -0.1160, -0.0766,  0.0987, -0.0247, -0.0663,  0.0676,
0:         -0.1636,  0.0739,  0.0455, -0.1186, -0.0868,  0.0556,  0.0692, -0.0725, -0.0502,  0.0713,  0.0811,  0.0945,
0:          0.0379], device='cuda:0')
1:      first 25 values: tensor([0.1609, 0.1687, 0.1771, 0.1856, 0.1934, 0.1998, 0.2044, 0.2065, 0.2060, 0.2024, 0.1953, 0.1848, 0.1710, 0.1545,
1:         0.1359, 0.1156, 0.0944, 0.0727, 0.1242, 0.1305, 0.1372, 0.1435, 0.1486, 0.1522, 0.1535], device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([-0.7675, -0.7677, -0.7682, -0.7684, -0.7688, -0.7690, -0.7694, -0.7696, -0.7696, -0.7696, -0.7694, -0.7690,
2:         -0.7684, -0.7675, -0.7669, -0.7654, -0.7642, -0.7627, -0.7679, -0.7679, -0.7679, -0.7684, -0.7686, -0.7690,
2:         -0.7694], device='cuda:0')
2:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0: [DEBUG] TRAIN TARGET BATCH
2:      first 25 values: tensor([0.2517, 0.2483, 0.2586, 0.2927, 0.3485, 0.4145, 0.4726, 0.5102, 0.5215, 0.5113, 0.4840, 0.4464, 0.4020, 0.3565,
2:         0.3143, 0.2825, 0.2677, 0.2688, 0.2893, 0.2995, 0.3234, 0.3622, 0.4077, 0.4498, 0.4783], device='cuda:0')
2:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0: Epoch -1, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2379, 2187])
1:      first 25 values: tensor([0.3232, 0.3342, 0.3410, 0.3435, 0.3412, 0.3344, 0.3230, 0.3077, 0.2895, 0.2698, 0.2505, 0.2334, 0.2198, 0.2105,
1:         0.2058, 0.2052, 0.2073, 0.2099, 0.2495, 0.2641, 0.2738, 0.2783, 0.2777, 0.2717, 0.2611], device='cuda:0')
1:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
2:        device='cuda:0')
2:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
2:      first 25 values: tensor([-0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598,
2:         -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598,
2:         -0.2598], device='cuda:0')
2:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-0.7675, -0.7677, -0.7682, -0.7684, -0.7688, -0.7690, -0.7694, -0.7696, -0.7696, -0.7696, -0.7694, -0.7690,
1:         -0.7684, -0.7675, -0.7669, -0.7654, -0.7642, -0.7627, -0.7679, -0.7679, -0.7679, -0.7684, -0.7686, -0.7690,
1:         -0.7694], device='cuda:0')
1:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
2:        device='cuda:0')
0:     First 25 batch values:
0: tensor([-1.0828, -1.0799, -1.0774, -1.0740, -1.0682, -1.0621, -1.0557, -1.0502, -1.0412, -1.0353, -1.0298, -1.0232,
0:         -1.0176, -1.0123, -1.0062, -0.9980, -0.9878, -0.9737, -0.9594, -0.9450, -0.9218, -0.8983, -0.8746, -0.8571,
0:         -0.8326])
0: [DEBUG] TRAIN PREDICTIONS BATCH
0: Epoch -1, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([25985, 972])
1:      first 25 values: tensor([0.2517, 0.2483, 0.2586, 0.2927, 0.3485, 0.4145, 0.4726, 0.5102, 0.5215, 0.5113, 0.4840, 0.4464, 0.4020, 0.3565,
1:         0.3143, 0.2825, 0.2677, 0.2688, 0.2893, 0.2995, 0.3234, 0.3622, 0.4077, 0.4498, 0.4783], device='cuda:0')
1:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 pred values: tensor([-0.7744, -0.7926, -0.8127, -0.8307, -0.8470, -0.8629, -0.8752, -0.8880, -0.8996, -0.9075, -0.9115, -0.9165,
0:         -0.9229, -0.9296, -0.9390, -0.9483, -0.9503, -0.9387, -0.8041, -0.8238, -0.8362, -0.8502, -0.8610, -0.8722,
0:         -0.8783], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([27336, 972])
0:      first 25 pred values: tensor([0.9350, 0.9366, 0.9395, 0.9431, 0.9459, 0.9492, 0.9488, 0.9459, 0.9415, 0.9351, 0.9292, 0.9243, 0.9192, 0.9144,
0:         0.9131, 0.9103, 0.9112, 0.9084, 0.9004, 0.9010, 0.9006, 0.9033, 0.9036, 0.9059, 0.9063], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([26085, 972])
1:      first 25 values: tensor([-1.0218, -1.0032, -0.9844, -0.9653, -0.9464, -0.9279, -0.9101, -0.8931, -0.8774, -0.8638, -0.8525, -0.8442,
1:         -0.8385, -0.8349, -0.8333, -0.8337, -0.8356, -0.8394, -0.8447, -0.8512, -0.8587, -0.8671, -0.8760, -0.8851,
1:         -0.8938], device='cuda:0')
1:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 pred values: tensor([-0.7610, -0.7603, -0.7631, -0.7622, -0.7626, -0.7636, -0.7668, -0.7685, -0.7717, -0.7740, -0.7746, -0.7714,
0:         -0.7687, -0.7659, -0.7644, -0.7649, -0.7654, -0.7671, -0.7547, -0.7582, -0.7603, -0.7602, -0.7608, -0.7615,
0:         -0.7624], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([25863, 972])
2: [DEBUG] TRAIN TARGET BATCH
2: Epoch -1, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2428, 2187])
0:      first 25 pred values: tensor([0.5332, 0.4656, 0.3900, 0.3349, 0.2929, 0.2663, 0.2485, 0.2410, 0.2347, 0.2045, 0.1790, 0.1807, 0.1838, 0.1881,
0:         0.2036, 0.2099, 0.2046, 0.2094, 0.3892, 0.3528, 0.3014, 0.2641, 0.2440, 0.2365, 0.2391], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([11573, 2187])
0:      first 25 pred values: tensor([-0.0296, -0.0145, -0.0028,  0.0059,  0.0120,  0.0161,  0.0193,  0.0215,  0.0228,  0.0239,  0.0244,  0.0248,
0:          0.0249,  0.0263,  0.0269,  0.0284,  0.0296,  0.0304,  0.0307,  0.0290,  0.0277,  0.0261,  0.0254,  0.0239,
0:          0.0221], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([10173, 243])
1:      first 25 values: tensor([-0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598,
1:         -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598,
1:         -0.2598], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 pred values: tensor([-0.2585, -0.2600, -0.2584, -0.2605, -0.2600, -0.2590, -0.2597, -0.2578, -0.2582, -0.2590, -0.2575, -0.2597,
0:         -0.2591, -0.2590, -0.2602, -0.2611, -0.2583, -0.2578, -0.2574, -0.2574, -0.2589, -0.2589, -0.2588, -0.2606,
0:         -0.2603], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([2379, 2187])
0:      first 25 pred values: tensor([-0.8415, -0.8691, -0.8506, -0.8792, -0.8984, -0.8816, -0.8816, -0.9177, -0.9152, -0.8702, -0.9053, -0.9154,
0:         -0.9438, -0.9014, -0.8731, -0.8862, -0.8522, -0.8609, -0.8432, -0.8669, -0.7966, -0.8003, -0.8153, -0.8243,
0:         -0.8337], device='cuda:0', grad_fn=<SliceBackward0>)
1:      first 25 values: tensor([-0.4754, -0.4697, -0.4632, -0.4590, -0.4545, -0.4499, -0.4497, -0.4501, -0.4510, -0.4517, -0.4501, -0.4483,
1:         -0.4469, -0.4465, -0.4465, -0.4413, -0.4364, -0.4314, -0.4245, -0.4202, -0.4159, -0.4105, -0.4069, -0.4032,
1:         -0.4023], device='cuda:0')
2:     First 25 batch values:
2: tensor([-0.1619, -0.1703, -0.1783, -0.1883, -0.1979, -0.2096, -0.2222, -0.2344, -0.2449, -0.2380, -0.2317, -0.2248,
2:         -0.1977, -0.1713, -0.1467, -0.1101, -0.0744, -0.0436, -0.0154,  0.0125,  0.0343,  0.0505,  0.0662,  0.0746,
2:          0.0797])
2: [DEBUG] TRAIN PREDICTIONS BATCH
2: Epoch -1, first predictions sample:
2:   └─ Predictions for 'velocity_u' shape: torch.Size([25476, 972])
2:      first 25 pred values: tensor([-0.1112, -0.1265, -0.1389, -0.1509, -0.1603, -0.1688, -0.1775, -0.1860, -0.1929, -0.2014, -0.2088, -0.2166,
2:         -0.2240, -0.2296, -0.2339, -0.2366, -0.2389, -0.2406, -0.1902, -0.2040, -0.2143, -0.2234, -0.2309, -0.2395,
2:         -0.2479], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'velocity_v' shape: torch.Size([26509, 972])
1: [DEBUG] TRAIN TARGET BATCH
1: Epoch -1, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2435, 2187])
2:      first 25 pred values: tensor([0.5601, 0.5561, 0.5441, 0.5288, 0.5080, 0.4875, 0.4606, 0.4317, 0.3993, 0.3695, 0.3415, 0.3110, 0.2784, 0.2445,
2:         0.2137, 0.1855, 0.1671, 0.1566, 0.4925, 0.4790, 0.4556, 0.4324, 0.4045, 0.3775, 0.3493], device='cuda:0',
2:        grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'specific_humidity' shape: torch.Size([26198, 972])
2:      first 25 pred values: tensor([-0.7515, -0.7521, -0.7520, -0.7522, -0.7525, -0.7538, -0.7546, -0.7547, -0.7549, -0.7543, -0.7546, -0.7548,
2:         -0.7550, -0.7553, -0.7557, -0.7570, -0.7570, -0.7570, -0.7576, -0.7577, -0.7576, -0.7579, -0.7583, -0.7593,
2:         -0.7589], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'velocity_z' shape: torch.Size([25990, 972])
2:      first 25 pred values: tensor([0.5967, 0.6179, 0.6180, 0.6299, 0.6516, 0.6737, 0.6834, 0.6945, 0.7018, 0.6908, 0.6851, 0.6910, 0.6794, 0.6530,
2:         0.6383, 0.6376, 0.6209, 0.5875, 0.6886, 0.7132, 0.7096, 0.7026, 0.7009, 0.7009, 0.6978], device='cuda:0',
2:        grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'temperature' shape: torch.Size([12092, 2187])
2:      first 25 pred values: tensor([-0.7106, -0.6898, -0.6672, -0.6422, -0.6140, -0.5834, -0.5525, -0.5236, -0.4941, -0.4648, -0.4378, -0.4129,
2:         -0.3918, -0.3734, -0.3550, -0.3375, -0.3225, -0.3106, -0.3008, -0.2910, -0.2774, -0.2608, -0.2454, -0.2347,
2:         -0.2301], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'total_precip' shape: torch.Size([11306, 243])
1:     First 25 batch values:
1: tensor([-0.0520, -0.0566, -0.0612, -0.0640, -0.0669, -0.0699, -0.0709, -0.0689, -0.0684, -0.0679, -0.0675, -0.0705,
1:         -0.0731, -0.0763, -0.0776, -0.0870, -0.0972, -0.1082, -0.1193, -0.1282, -0.1374, -0.1464, -0.1555, -0.1635,
1:         -0.1717])
1: [DEBUG] TRAIN PREDICTIONS BATCH
1: Epoch -1, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([26323, 972])
2:      first 25 pred values: tensor([-0.2444, -0.2425, -0.2434, -0.2465, -0.2472, -0.2472, -0.2484, -0.2527, -0.2535, -0.2419, -0.2423, -0.2426,
2:         -0.2430, -0.2438, -0.2482, -0.2488, -0.2468, -0.2500, -0.2377, -0.2395, -0.2398, -0.2415, -0.2442, -0.2409,
2:         -0.2453], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 't2m' shape: torch.Size([2428, 2187])
1:      first 25 pred values: tensor([-0.6511, -0.6555, -0.6616, -0.6668, -0.6725, -0.6762, -0.6809, -0.6835, -0.6913, -0.6989, -0.7101, -0.7164,
1:         -0.7249, -0.7312, -0.7311, -0.7349, -0.7397, -0.7441, -0.7036, -0.7061, -0.7103, -0.7181, -0.7275, -0.7367,
1:         -0.7444], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([25316, 972])
2:      first 25 pred values: tensor([ 0.0380,  0.0145,  0.0457,  0.0937,  0.0333,  0.0760,  0.0797,  0.0338,  0.0405,  0.0112,  0.0231,  0.0001,
2:          0.0020,  0.0398,  0.0172,  0.0018,  0.0627, -0.0157,  0.0018,  0.0088,  0.0086, -0.0445, -0.0402, -0.0600,
2:         -0.0519], device='cuda:0', grad_fn=<SliceBackward0>)
1:      first 25 pred values: tensor([0.0802, 0.1067, 0.1340, 0.1589, 0.1815, 0.1999, 0.2164, 0.2314, 0.2462, 0.2592, 0.2709, 0.2799, 0.2879, 0.2936,
1:         0.3006, 0.3063, 0.3142, 0.3242, 0.1099, 0.1263, 0.1436, 0.1605, 0.1771, 0.1925, 0.2051], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([25439, 972])
1:      first 25 pred values: tensor([-0.7776, -0.7780, -0.7782, -0.7777, -0.7762, -0.7768, -0.7750, -0.7745, -0.7750, -0.7737, -0.7732, -0.7721,
1:         -0.7701, -0.7689, -0.7683, -0.7682, -0.7701, -0.7711, -0.7733, -0.7728, -0.7727, -0.7713, -0.7715, -0.7710,
1:         -0.7712], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([26125, 972])
1:      first 25 pred values: tensor([0.2234, 0.2080, 0.1946, 0.1706, 0.1389, 0.1224, 0.1143, 0.1078, 0.1055, 0.0993, 0.0979, 0.1031, 0.1078, 0.1099,
1:         0.1098, 0.1252, 0.1432, 0.1472, 0.1460, 0.1263, 0.1111, 0.0921, 0.0675, 0.0571, 0.0580], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([11727, 2187])
1:      first 25 pred values: tensor([-0.6980, -0.6942, -0.6840, -0.6705, -0.6570, -0.6450, -0.6329, -0.6209, -0.6076, -0.5932, -0.5791, -0.5649,
1:         -0.5503, -0.5355, -0.5195, -0.5031, -0.4858, -0.4673, -0.4481, -0.4288, -0.4097, -0.3894, -0.3686, -0.3491,
1:         -0.3310], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([11047, 243])
1:      first 25 pred values: tensor([-0.2502, -0.2516, -0.2542, -0.2562, -0.2564, -0.2579, -0.2553, -0.2583, -0.2567, -0.2510, -0.2514, -0.2516,
1:         -0.2538, -0.2543, -0.2569, -0.2557, -0.2542, -0.2560, -0.2472, -0.2474, -0.2492, -0.2518, -0.2552, -0.2535,
1:         -0.2551], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([2435, 2187])
1:      first 25 pred values: tensor([-0.4100, -0.4071, -0.4092, -0.3911, -0.4262, -0.3766, -0.3632, -0.3822, -0.3838, -0.3308, -0.3861, -0.3602,
1:         -0.3512, -0.3510, -0.4129, -0.3571, -0.3007, -0.3411, -0.3383, -0.2832, -0.2818, -0.3083, -0.3132, -0.3207,
1:         -0.3242], device='cuda:0', grad_fn=<SliceBackward0>)
3: [DEBUG] TRAIN INPUT BATCH
3: Epoch -1, first input batch shapes / sample data:
3:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([0.1609, 0.1687, 0.1771, 0.1856, 0.1934, 0.1998, 0.2044, 0.2065, 0.2060, 0.2024, 0.1953, 0.1848, 0.1710, 0.1545,
3:         0.1359, 0.1156, 0.0944, 0.0727, 0.1242, 0.1305, 0.1372, 0.1435, 0.1486, 0.1522, 0.1535], device='cuda:0')
3:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
3:        device='cuda:0')
3:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
3:        device='cuda:0')
3:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([0.2517, 0.2483, 0.2586, 0.2927, 0.3485, 0.4145, 0.4726, 0.5102, 0.5215, 0.5113, 0.4840, 0.4464, 0.4020, 0.3565,
3:         0.3143, 0.2825, 0.2677, 0.2688, 0.2893, 0.2995, 0.3234, 0.3622, 0.4077, 0.4498, 0.4783], device='cuda:0')
3:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
3:      first 25 values: tensor([-1.0218, -1.0032, -0.9844, -0.9653, -0.9464, -0.9279, -0.9101, -0.8931, -0.8774, -0.8638, -0.8525, -0.8442,
3:         -0.8385, -0.8349, -0.8333, -0.8337, -0.8356, -0.8394, -0.8447, -0.8512, -0.8587, -0.8671, -0.8760, -0.8851,
3:         -0.8938], device='cuda:0')
3:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
3:      first 25 values: tensor([-0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598,
3:         -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598, -0.2598,
3:         -0.2598], device='cuda:0')
3:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
3:      first 25 values: tensor([-0.4754, -0.4697, -0.4632, -0.4590, -0.4545, -0.4499, -0.4497, -0.4501, -0.4510, -0.4517, -0.4501, -0.4483,
3:         -0.4469, -0.4465, -0.4465, -0.4413, -0.4364, -0.4314, -0.4245, -0.4202, -0.4159, -0.4105, -0.4069, -0.4032,
3:         -0.4023], device='cuda:0')
3: [DEBUG] TRAIN TARGET BATCH
3: Epoch -1, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2429, 2187])
3:     First 25 batch values:
3: tensor([-0.5496, -0.5429, -0.5361, -0.5310, -0.5257, -0.5202, -0.5174, -0.5161, -0.5147, -0.5128, -0.5103, -0.5084,
3:         -0.5126, -0.5172, -0.5204, -0.5277, -0.5355, -0.5432, -0.5573, -0.5713, -0.5862, -0.6046, -0.6229, -0.6414,
3:         -0.6638])
3: [DEBUG] TRAIN PREDICTIONS BATCH
3: Epoch -1, first predictions sample:
3:   └─ Predictions for 'velocity_u' shape: torch.Size([27053, 972])
3:      first 25 pred values: tensor([-0.1825, -0.1744, -0.1656, -0.1569, -0.1484, -0.1402, -0.1319, -0.1229, -0.1139, -0.1038, -0.0950, -0.0850,
3:         -0.0770, -0.0695, -0.0606, -0.0511, -0.0421, -0.0343, -0.1378, -0.1272, -0.1195, -0.1099, -0.1018, -0.0927,
3:         -0.0841], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'velocity_v' shape: torch.Size([26245, 972])
3:      first 25 pred values: tensor([1.4218, 1.4041, 1.3894, 1.3771, 1.3704, 1.3590, 1.3439, 1.3223, 1.2992, 1.2759, 1.2590, 1.2420, 1.2255, 1.2062,
3:         1.1870, 1.1641, 1.1396, 1.1125, 1.3840, 1.3648, 1.3457, 1.3309, 1.3153, 1.3035, 1.2855], device='cuda:0',
3:        grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'specific_humidity' shape: torch.Size([26347, 972])
3:      first 25 pred values: tensor([-0.7871, -0.7875, -0.7876, -0.7880, -0.7882, -0.7891, -0.7890, -0.7881, -0.7870, -0.7858, -0.7845, -0.7837,
3:         -0.7833, -0.7821, -0.7827, -0.7827, -0.7833, -0.7824, -0.7889, -0.7892, -0.7892, -0.7895, -0.7893, -0.7894,
3:         -0.7894], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'velocity_z' shape: torch.Size([25351, 972])
3:      first 25 pred values: tensor([0.3153, 0.3164, 0.3162, 0.3280, 0.3494, 0.3592, 0.3610, 0.3704, 0.3786, 0.3876, 0.3976, 0.3945, 0.3967, 0.4161,
3:         0.4329, 0.4546, 0.4762, 0.4790, 0.2624, 0.2692, 0.2750, 0.2895, 0.3102, 0.3165, 0.3110], device='cuda:0',
3:        grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'temperature' shape: torch.Size([11711, 2187])
3:      first 25 pred values: tensor([-0.2511, -0.2317, -0.2141, -0.1970, -0.1794, -0.1599, -0.1395, -0.1188, -0.0982, -0.0767, -0.0549, -0.0328,
3:         -0.0104,  0.0125,  0.0370,  0.0654,  0.0980,  0.1344,  0.1726,  0.2093,  0.2458,  0.2823,  0.3191,  0.3557,
3:          0.3908], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'total_precip' shape: torch.Size([11237, 243])
3:      first 25 pred values: tensor([-0.2551, -0.2533, -0.2545, -0.2564, -0.2561, -0.2544, -0.2535, -0.2517, -0.2521, -0.2556, -0.2544, -0.2541,
3:         -0.2541, -0.2527, -0.2524, -0.2540, -0.2485, -0.2500, -0.2531, -0.2526, -0.2522, -0.2506, -0.2507, -0.2484,
3:         -0.2507], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 't2m' shape: torch.Size([2429, 2187])
3:      first 25 pred values: tensor([-0.8461, -0.7966, -0.7589, -0.8311, -0.8092, -0.8218, -0.7856, -0.7831, -0.8354, -0.7786, -0.7775, -0.8242,
3:         -0.8070, -0.7741, -0.7572, -0.7918, -0.7683, -0.7282, -0.8115, -0.7442, -0.7689, -0.8197, -0.7915, -0.7858,
3:         -0.7692], device='cuda:0', grad_fn=<SliceBackward0>)
0: epoch: -1 [1/5 (20%)]	Loss: 0.41197 : 0.09644 :: 0.07372 (1.33 s/sec)
0: epoch: -1 [2/5 (40%)]	Loss: 0.44351 : 0.08153 :: 0.07702 (8.23 s/sec)
0: epoch: -1 [3/5 (60%)]	Loss: 0.44111 : 0.08663 :: 0.07398 (8.18 s/sec)
0: epoch: -1 [4/5 (80%)]	Loss: 0.48436 : 0.10346 :: 0.07274 (8.14 s/sec)
0: validation loss for strategy=BERT at epoch -1 : 0.07195602357387543
0: validation loss for velocity_u : 0.004081393126398325
0: validation loss for velocity_v : 0.005341477692127228
0: validation loss for specific_humidity : 0.006195920519530773
0: validation loss for velocity_z : 0.10594572126865387
0: validation loss for temperature : 0.01949498802423477
0: validation loss for total_precip : 0.20347100496292114
0: validation loss for t2m : 0.15916171669960022
0: 0 : 16:08:12 :: batch_size = 96, lr = 1e-05
2: 0 : 16:08:21 :: batch_size = 96, lr = 1e-05
3: 0 : 16:08:31 :: batch_size = 96, lr = 1e-05
1: 0 : 16:08:39 :: batch_size = 96, lr = 1e-05
0: [DEBUG] TRAIN INPUT BATCH
0: Epoch 0, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.0920, -0.0446,  0.0095,  0.0680,  0.1330,  0.2029,  0.2612,  0.3001,  0.3403,  0.3919,  0.4333,  0.4578,
0:          0.4932,  0.5462,  0.5876,  0.6109,  0.6404,  0.6828, -0.0361,  0.0109,  0.0608,  0.1167,  0.1835,  0.2549,
0:          0.3136], device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
0:        device='cuda:0')
0:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.1928, -0.0923,  0.0157,  0.1349,  0.1513,  0.1508,  0.1286,  0.1146,  0.0912,  0.0574,  0.0101, -0.0557,
0:         -0.1421, -0.2107, -0.2690, -0.3075, -0.3418, -0.3624, -0.2017, -0.1325, -0.0372,  0.0550,  0.0827,  0.0906,
0:          0.0975], device='cuda:0')
0:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([ 0.2513,  0.3882,  0.5227,  0.7953,  1.1545,  1.2446,  1.1226,  1.0690,  0.9264,  0.5980,  0.3483,  0.0597,
0:         -0.5139, -0.8708, -0.4922,  0.2855,  0.9755,  1.4019,  0.2490,  0.2673,  0.3106,  0.5353,  0.9287,  1.1682,
0:          1.2263], device='cuda:0')
0:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
0:        device='cuda:0')
0:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([-0.2295, -0.2424, -0.2436, -0.2330, -0.2471, -0.2565, -0.2577, -0.2577, -0.2577, -0.1789, -0.1965, -0.1965,
0:         -0.1754, -0.2212, -0.2377, -0.2436, -0.2530, -0.2565, -0.1002, -0.1589, -0.1860, -0.1566, -0.2106, -0.2447,
0:         -0.2530], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([-0.0908,  0.0255,  0.3071,  0.1175,  0.0224,  0.1142, -0.0367,  0.0196,  0.1587, -0.0150,  0.0287,  0.0977,
0:         -0.0433, -0.2028,  0.0496, -0.0468,  0.0615,  0.1182,  0.0635,  0.1221, -0.0809,  0.0360,  0.0534,  0.0319,
0:         -0.1105], device='cuda:0')
0: [DEBUG] TRAIN TARGET BATCH
0: Epoch 0, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2379, 2187])
0:     First 25 batch values:
0: tensor([0.7956, 0.8000, 0.7708, 0.7036, 0.6446, 0.6365, 0.7256, 0.8454, 0.9996, 1.1983, 1.4272, 1.8614, 1.7022, 1.0551,
0:         0.7767, 0.5308, 0.5282, 1.1288, 1.0949, 0.8550, 0.7290, 1.0767, 1.0167, 0.8743, 0.6766])
0: [DEBUG] TRAIN PREDICTIONS BATCH
0: Epoch 0, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([25985, 972])
0:      first 25 pred values: tensor([-0.7167, -0.7347, -0.7351, -0.7087, -0.6508, -0.5704, -0.4786, -0.3910, -0.3196, -0.2704, -0.2473, -0.2450,
0:         -0.2601, -0.2878, -0.3197, -0.3607, -0.4004, -0.4342, -0.7109, -0.7123, -0.6944, -0.6546, -0.5916, -0.5122,
0:         -0.4322], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([27336, 972])
0:      first 25 pred values: tensor([-0.2183, -0.2290, -0.2369, -0.2450, -0.2479, -0.2460, -0.2349, -0.2173, -0.1926, -0.1652, -0.1350, -0.1041,
0:         -0.0742, -0.0452, -0.0210, -0.0059, -0.0036, -0.0088, -0.2066, -0.1948, -0.1817, -0.1765, -0.1747, -0.1712,
0:         -0.1618], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([26085, 972])
0:      first 25 pred values: tensor([0.4137, 0.3070, 0.2100, 0.1520, 0.1450, 0.1980, 0.2794, 0.3562, 0.4295, 0.4906, 0.5749, 0.6941, 0.8531, 1.0256,
0:         1.1872, 1.3112, 1.3775, 1.3887, 0.4424, 0.3240, 0.2063, 0.1350, 0.1267, 0.1808, 0.2589], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([25863, 972])
0:      first 25 pred values: tensor([-0.5971, -1.2293, -2.3744, -2.6685, -2.1310, -1.5500, -0.7166,  0.0749,  0.1535, -0.1205, -0.1309, -0.0576,
0:         -0.0938, -0.0059,  0.0801, -0.0625, -0.1565, -0.0691,  0.1660, -0.0396, -0.9661, -1.3030, -1.0779, -0.8737,
0:         -0.2298], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([11573, 2187])
0:      first 25 pred values: tensor([0.5456, 0.5753, 0.6064, 0.6304, 0.6484, 0.6656, 0.6849, 0.7114, 0.7348, 0.7488, 0.7487, 0.7294, 0.6946, 0.6476,
0:         0.5945, 0.5413, 0.4923, 0.4440, 0.3907, 0.3298, 0.2596, 0.1861, 0.1150, 0.0556, 0.0098], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([10173, 243])
0:      first 25 pred values: tensor([-0.1531, -0.1507, -0.1621, -0.1771, -0.1956, -0.2031, -0.2135, -0.2309, -0.2283, -0.1411, -0.1539, -0.1580,
0:         -0.1763, -0.1903, -0.2061, -0.2131, -0.2284, -0.2389, -0.1354, -0.1468, -0.1591, -0.1712, -0.1748, -0.2035,
0:         -0.2166], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([2379, 2187])
0:      first 25 pred values: tensor([1.2285, 1.2636, 1.2327, 1.2542, 1.2275, 1.2720, 1.2602, 1.2131, 1.1555, 1.1091, 1.0848, 1.0952, 1.0642, 1.0502,
0:         0.9957, 0.9827, 0.9696, 0.9057, 0.8699, 0.8528, 0.8630, 0.7685, 0.7496, 0.7241, 0.7031], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
2: [DEBUG] TRAIN INPUT BATCH
2: Epoch 0, first input batch shapes / sample data:
2:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([-0.7899, -0.8114, -0.8255, -0.8359, -0.8463, -0.8585, -0.8727, -0.8892, -0.9088, -0.9327, -0.9615, -0.9933,
2:         -1.0252, -1.0548, -1.0814, -1.1060, -1.1297, -1.1529, -0.6759, -0.7049, -0.7226, -0.7329, -0.7410, -0.7512,
2:         -0.7654], device='cuda:0')
2:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
2:        device='cuda:0')
2:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([-0.6652, -0.6692, -0.6725, -0.6740, -0.6773, -0.6866, -0.6982, -0.7109, -0.7224, -0.7277, -0.7307, -0.7306,
2:         -0.7300, -0.7287, -0.7270, -0.7255, -0.7238, -0.7225, -0.6360, -0.6668, -0.6744, -0.6763, -0.6784, -0.6891,
2:         -0.7001], device='cuda:0')
2:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([-0.2159, -0.0140,  0.1533,  0.2510,  0.2858,  0.2684,  0.2206,  0.1620,  0.1185,  0.0946,  0.0794,  0.0599,
2:          0.0447,  0.0512,  0.0773,  0.1164,  0.1576,  0.1989, -0.3875, -0.1855,  0.0186,  0.1902,  0.3053,  0.3444,
2:          0.3140], device='cuda:0')
2:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
2:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
2:        device='cuda:0')
2:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
2:      first 25 values: tensor([ 0.0461,  0.0132, -0.0103, -0.0126, -0.0126, -0.0303, -0.0538, -0.0914, -0.1313,  0.1261,  0.0908,  0.0614,
2:          0.0626,  0.0520,  0.0168, -0.0067, -0.0514, -0.0972,  0.1989,  0.1637,  0.1319,  0.0990,  0.0873,  0.0520,
2:          0.0320], device='cuda:0')
2:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
2:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
2:        device='cuda:0')
2: [DEBUG] TRAIN TARGET BATCH
2: Epoch 0, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2428, 2187])
2:     First 25 batch values:
2: tensor([ 1.2208,  1.1994,  1.1758,  1.1209,  1.0514,  0.9632,  0.8695,  0.7866,  0.7079,  0.6346,  0.5637,  0.4925,
2:          0.4182,  0.3343,  0.2493,  0.1797,  0.1145,  0.0720,  0.0332,  0.0077, -0.0099, -0.0292, -0.0480, -0.0684,
2:         -0.0846])
2: [DEBUG] TRAIN PREDICTIONS BATCH
2: Epoch 0, first predictions sample:
2:   └─ Predictions for 'velocity_u' shape: torch.Size([25476, 972])
2:      first 25 pred values: tensor([ 0.0359,  0.0123, -0.0053, -0.0191, -0.0302, -0.0386, -0.0417, -0.0390, -0.0365, -0.0315, -0.0347, -0.0384,
2:         -0.0459, -0.0530, -0.0546, -0.0507, -0.0437, -0.0384,  0.1286,  0.1090,  0.0962,  0.0880,  0.0826,  0.0820,
2:          0.0855], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'velocity_v' shape: torch.Size([26509, 972])
2:      first 25 pred values: tensor([0.0217, 0.0300, 0.0415, 0.0494, 0.0576, 0.0654, 0.0773, 0.0926, 0.1088, 0.1182, 0.1264, 0.1335, 0.1424, 0.1549,
2:         0.1694, 0.1881, 0.2075, 0.2254, 0.0424, 0.0555, 0.0683, 0.0797, 0.0894, 0.0945, 0.1044], device='cuda:0',
2:        grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'specific_humidity' shape: torch.Size([26198, 972])
2:      first 25 pred values: tensor([-0.6765, -0.6633, -0.6501, -0.6345, -0.6182, -0.6016, -0.5893, -0.5795, -0.5703, -0.5679, -0.5670, -0.5694,
2:         -0.5734, -0.5774, -0.5801, -0.5815, -0.5832, -0.5823, -0.6950, -0.6833, -0.6707, -0.6572, -0.6439, -0.6283,
2:         -0.6128], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'velocity_z' shape: torch.Size([25990, 972])
2:      first 25 pred values: tensor([-0.0432,  0.0101,  0.0727,  0.0827,  0.0767,  0.0878,  0.1281,  0.1900,  0.2538,  0.3001,  0.3341,  0.3158,
2:          0.2322,  0.1424,  0.0528,  0.0007,  0.0207,  0.0092,  0.1372,  0.1927,  0.2546,  0.3051,  0.3339,  0.3461,
2:          0.3491], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'temperature' shape: torch.Size([12092, 2187])
2:      first 25 pred values: tensor([-1.1490, -1.1685, -1.1796, -1.1889, -1.1992, -1.2122, -1.2255, -1.2323, -1.2309, -1.2235, -1.2115, -1.1968,
2:         -1.1778, -1.1538, -1.1252, -1.0953, -1.0679, -1.0430, -1.0196, -0.9926, -0.9619, -0.9287, -0.8949, -0.8595,
2:         -0.8222], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'total_precip' shape: torch.Size([11306, 243])
2:      first 25 pred values: tensor([-0.2336, -0.2263, -0.2321, -0.2322, -0.2407, -0.2298, -0.2411, -0.2435, -0.2341, -0.2246, -0.2253, -0.2282,
2:         -0.2370, -0.2381, -0.2420, -0.2364, -0.2447, -0.2477, -0.2290, -0.2321, -0.2357, -0.2404, -0.2329, -0.2460,
2:         -0.2414], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 't2m' shape: torch.Size([2428, 2187])
2:      first 25 pred values: tensor([1.0438, 0.9401, 0.9412, 0.9099, 0.8959, 0.8700, 0.7646, 0.7871, 0.7073, 0.6696, 0.5932, 0.6080, 0.5702, 0.4924,
2:         0.4499, 0.4154, 0.3797, 0.3111, 0.2968, 0.2720, 0.2163, 0.2185, 0.2049, 0.1110, 0.1324], device='cuda:0',
2:        grad_fn=<SliceBackward0>)
3: [DEBUG] TRAIN INPUT BATCH
3: Epoch 0, first input batch shapes / sample data:
3:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([ 0.2247,  0.1743,  0.1242,  0.0760,  0.0309, -0.0097, -0.0449, -0.0740, -0.0969, -0.1141, -0.1265, -0.1353,
3:         -0.1419, -0.1470, -0.1517, -0.1564, -0.1613, -0.1662,  0.1481,  0.1004,  0.0558,  0.0152, -0.0203, -0.0503,
3:         -0.0748], device='cuda:0')
3:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
3:        device='cuda:0')
3:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
3:        device='cuda:0')
3:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([ 0.2628,  0.2166,  0.1902,  0.1869,  0.2100,  0.2540,  0.3101,  0.3574,  0.3805,  0.3695,  0.3277,  0.2650,
3:          0.1913,  0.1133,  0.0385, -0.0308, -0.0880, -0.1276,  0.1539,  0.1517,  0.1715,  0.2089,  0.2584,  0.3145,
3:          0.3673], device='cuda:0')
3:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
3:      first 25 values: tensor([-1.0296, -1.0559, -1.0774, -1.0931, -1.1028, -1.1072, -1.1073, -1.1049, -1.1006, -1.0951, -1.0885, -1.0811,
3:         -1.0734, -1.0661, -1.0596, -1.0541, -1.0493, -1.0450, -1.0405, -1.0361, -1.0317, -1.0275, -1.0229, -1.0180,
3:         -1.0122], device='cuda:0')
3:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
3:      first 25 values: tensor([-0.1902, -0.1902, -0.1914, -0.1926, -0.1890, -0.1866, -0.1830, -0.1662, -0.1471, -0.1710, -0.1698, -0.1698,
3:         -0.1710, -0.1674, -0.1638, -0.1638, -0.1459, -0.1279, -0.1363, -0.1231, -0.1255, -0.1291, -0.1303, -0.1363,
3:         -0.1423], device='cuda:0')
3:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
3:      first 25 values: tensor([0.3294, 0.3630, 0.4297, 0.4974, 0.5621, 0.6239, 0.6889, 0.6841, 0.6494, 0.6156, 0.6058, 0.5753, 0.5491, 0.5679,
3:         0.5999, 0.6125, 0.5674, 0.5282, 0.4651, 0.3456, 0.2327, 0.1708, 0.1304, 0.0891, 0.0665], device='cuda:0')
3: [DEBUG] TRAIN TARGET BATCH
3: Epoch 0, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2429, 2187])
3:     First 25 batch values:
3: tensor([-0.5285, -0.4913, -0.4556, -0.4290, -0.4018, -0.3844, -0.3669, -0.3476, -0.3282, -0.2814, -0.2295, -0.1857,
3:         -0.1103, -0.0303,  0.0487,  0.1177,  0.1913,  0.2208,  0.2145,  0.2068,  0.2392,  0.3066,  0.3738,  0.4334,
3:          0.4763])
3: [DEBUG] TRAIN PREDICTIONS BATCH
3: Epoch 0, first predictions sample:
3:   └─ Predictions for 'velocity_u' shape: torch.Size([27053, 972])
3:      first 25 pred values: tensor([-0.2947, -0.2851, -0.2769, -0.2698, -0.2657, -0.2612, -0.2552, -0.2471, -0.2404, -0.2360, -0.2357, -0.2367,
3:         -0.2360, -0.2334, -0.2298, -0.2261, -0.2260, -0.2308, -0.2608, -0.2526, -0.2461, -0.2420, -0.2390, -0.2353,
3:         -0.2290], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'velocity_v' shape: torch.Size([26245, 972])
3:      first 25 pred values: tensor([-0.6121, -0.5913, -0.5674, -0.5499, -0.5315, -0.5076, -0.4852, -0.4609, -0.4390, -0.4193, -0.3997, -0.3740,
3:         -0.3469, -0.3177, -0.2881, -0.2655, -0.2474, -0.2380, -0.6710, -0.6469, -0.6222, -0.6059, -0.5899, -0.5726,
3:         -0.5510], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'specific_humidity' shape: torch.Size([26347, 972])
3:      first 25 pred values: tensor([-0.6075, -0.6060, -0.6063, -0.6080, -0.6096, -0.6115, -0.6145, -0.6186, -0.6210, -0.6236, -0.6250, -0.6249,
3:         -0.6249, -0.6237, -0.6228, -0.6219, -0.6244, -0.6255, -0.6088, -0.6059, -0.6057, -0.6064, -0.6089, -0.6110,
3:         -0.6131], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'velocity_z' shape: torch.Size([25351, 972])
3:      first 25 pred values: tensor([-0.2916, -0.3270, -0.3714, -0.3932, -0.4233, -0.4516, -0.4539, -0.4545, -0.4690, -0.4824, -0.4758, -0.4718,
3:         -0.4659, -0.4542, -0.4362, -0.4008, -0.3491, -0.2937, -0.3359, -0.3557, -0.3846, -0.3847, -0.3982, -0.4176,
3:         -0.4136], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'temperature' shape: torch.Size([11711, 2187])
3:      first 25 pred values: tensor([-1.7534, -1.7603, -1.7677, -1.7728, -1.7731, -1.7720, -1.7686, -1.7574, -1.7386, -1.7142, -1.6873, -1.6641,
3:         -1.6406, -1.6137, -1.5771, -1.5332, -1.4863, -1.4421, -1.4019, -1.3628, -1.3270, -1.2963, -1.2728, -1.2539,
3:         -1.2355], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'total_precip' shape: torch.Size([11237, 243])
3:      first 25 pred values: tensor([-0.2347, -0.2270, -0.2282, -0.2279, -0.2363, -0.2233, -0.2323, -0.2357, -0.2285, -0.2288, -0.2275, -0.2280,
3:         -0.2363, -0.2310, -0.2368, -0.2315, -0.2416, -0.2417, -0.2349, -0.2340, -0.2419, -0.2401, -0.2319, -0.2437,
3:         -0.2412], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 't2m' shape: torch.Size([2429, 2187])
3:      first 25 pred values: tensor([-0.1020, -0.1670, -0.1073, -0.1685, -0.1413, -0.1789, -0.1497, -0.1941, -0.1853, -0.1696, -0.1426, -0.1797,
3:         -0.1334, -0.1854, -0.0894, -0.1435, -0.1611, -0.1001, -0.0644, -0.0881, -0.0423, -0.0547, -0.0711, -0.0880,
3:         -0.0745], device='cuda:0', grad_fn=<SliceBackward0>)
1: [DEBUG] TRAIN INPUT BATCH
1: Epoch 0, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.3648, -0.3891, -0.4028, -0.4075, -0.4058, -0.3997, -0.3913, -0.3821, -0.3733, -0.3654, -0.3591, -0.3547,
1:         -0.3518, -0.3505, -0.3499, -0.3503, -0.3511, -0.3522, -0.6471, -0.6442, -0.6338, -0.6188, -0.6024, -0.5866,
1:         -0.5733], device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.8518, -0.9143, -0.9773, -1.0398, -1.1022, -1.1641, -1.2266, -1.2915, -1.3604, -1.4346, -1.5153, -1.6028,
1:         -1.6970, -1.7972, -1.9018, -2.0093, -2.1169, -2.2221, -0.9298, -0.9754, -1.0229, -1.0730, -1.1265, -1.1840,
1:         -1.2463], device='cuda:0')
1:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.4562, -0.4558, -0.4546, -0.4536, -0.4527, -0.4488, -0.4450, -0.4413, -0.4374, -0.4332, -0.4290, -0.4262,
1:         -0.4234, -0.4212, -0.4223, -0.4232, -0.4243, -0.4262, -0.4651, -0.4655, -0.4641, -0.4627, -0.4615, -0.4577,
1:         -0.4537], device='cuda:0')
1:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.9247, -0.8994, -0.8421, -0.7815, -0.7440, -0.7396, -0.7672, -0.8157, -0.8708, -0.9236, -0.9721, -1.0239,
1:         -1.0878, -1.1782, -1.3016, -1.4603, -1.6477, -1.8537, -0.9038, -0.7440, -0.6184, -0.5512, -0.5556, -0.6305,
1:         -0.7583], device='cuda:0')
1:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([2.1095, 2.1180, 2.1270, 2.1365, 2.1465, 2.1574, 2.1686, 2.1792, 2.1883, 2.1938, 2.1949, 2.1909, 2.1823, 2.1700,
1:         2.1547, 2.1368, 2.1162, 2.0921, 2.0651, 2.0357, 2.0043, 1.9712, 1.9363, 1.8986, 1.8573], device='cuda:0')
1:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
1:      first 25 values: tensor([1.3440, 1.3234, 1.3269, 1.3314, 1.3371, 1.3520, 1.3657, 1.3771, 1.3531, 1.5645, 1.6022, 1.6890, 1.7770, 1.8158,
1:         1.8615, 1.9529, 2.0455, 2.0706, 1.9472, 1.9872, 2.0763, 2.1928, 2.3117, 2.4293, 2.5481], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-1.3907, -1.3631, -1.3347, -1.2845, -1.2258, -1.1351, -1.0394, -0.9519, -0.9015, -0.8528, -0.7933, -0.7544,
1:         -0.7135, -0.6651, -0.6452, -0.6195, -0.5925, -0.5321, -0.4735, -0.4260, -0.2519, -0.0818,  0.0543,  0.0726,
1:          0.0893], device='cuda:0')
1: [DEBUG] TRAIN TARGET BATCH
1: Epoch 0, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2435, 2187])
1:     First 25 batch values:
1: tensor([-0.7437, -0.7547, -0.7625, -0.7693, -0.7765, -0.7834, -0.7859, -0.7914, -0.7968, -0.8018, -0.8059, -0.8050,
1:         -0.8041, -0.8028, -0.8019, -0.7909, -0.7744, -0.7581, -0.7410, -0.7236, -0.6980, -0.6691, -0.6399, -0.6111,
1:         -0.5814])
1: [DEBUG] TRAIN PREDICTIONS BATCH
1: Epoch 0, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([26323, 972])
1:      first 25 pred values: tensor([0.4629, 0.4717, 0.4735, 0.4728, 0.4724, 0.4760, 0.4820, 0.4901, 0.4990, 0.5071, 0.5111, 0.5135, 0.5128, 0.5154,
1:         0.5221, 0.5310, 0.5464, 0.5628, 0.6792, 0.6882, 0.6910, 0.6919, 0.6890, 0.6890, 0.6950], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([25316, 972])
1:      first 25 pred values: tensor([-1.3763, -1.4299, -1.4704, -1.5049, -1.5318, -1.5560, -1.5848, -1.6122, -1.6290, -1.6360, -1.6367, -1.6344,
1:         -1.6262, -1.6248, -1.6336, -1.6579, -1.6876, -1.7128, -1.4711, -1.5315, -1.5814, -1.6205, -1.6510, -1.6807,
1:         -1.7063], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([25439, 972])
1:      first 25 pred values: tensor([-0.7700, -0.7705, -0.7703, -0.7699, -0.7689, -0.7684, -0.7683, -0.7688, -0.7681, -0.7677, -0.7668, -0.7649,
1:         -0.7607, -0.7571, -0.7536, -0.7518, -0.7527, -0.7535, -0.7759, -0.7738, -0.7709, -0.7698, -0.7710, -0.7711,
1:         -0.7715], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([26125, 972])
1:      first 25 pred values: tensor([1.7610, 1.6889, 1.6082, 1.5397, 1.5124, 1.4781, 1.4524, 1.4644, 1.4606, 1.4340, 1.3997, 1.3559, 1.3304, 1.3021,
1:         1.2521, 1.2145, 1.1727, 1.1173, 1.4976, 1.4281, 1.3379, 1.2746, 1.2524, 1.2017, 1.1420], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([11727, 2187])
1:      first 25 pred values: tensor([0.4154, 0.4501, 0.4883, 0.5216, 0.5427, 0.5552, 0.5658, 0.5812, 0.5968, 0.6132, 0.6317, 0.6517, 0.6721, 0.6921,
1:         0.7095, 0.7233, 0.7366, 0.7499, 0.7601, 0.7653, 0.7594, 0.7446, 0.7255, 0.7050, 0.6848], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([11047, 243])
1:      first 25 pred values: tensor([-0.2400, -0.2348, -0.2403, -0.2381, -0.2467, -0.2374, -0.2463, -0.2494, -0.2434, -0.2326, -0.2318, -0.2321,
1:         -0.2453, -0.2425, -0.2497, -0.2426, -0.2543, -0.2527, -0.2341, -0.2395, -0.2446, -0.2455, -0.2405, -0.2524,
1:         -0.2501], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([2435, 2187])
1:      first 25 pred values: tensor([-0.6434, -0.6252, -0.6435, -0.6114, -0.6628, -0.6494, -0.5952, -0.6381, -0.6128, -0.6141, -0.5956, -0.6533,
1:         -0.6241, -0.6197, -0.6317, -0.6298, -0.6652, -0.6527, -0.5828, -0.6405, -0.6321, -0.6331, -0.6356, -0.6599,
1:         -0.7056], device='cuda:0', grad_fn=<SliceBackward0>)
0: epoch: 0 [1/5 (20%)]	Loss: 0.38971 : 0.09339 :: 0.09253 (1.13 s/sec)
0: epoch: 0 [2/5 (40%)]	Loss: 0.40468 : 0.09963 :: 0.08375 (8.17 s/sec)
0: epoch: 0 [3/5 (60%)]	Loss: 0.39985 : 0.10004 :: 0.08635 (8.14 s/sec)
0: epoch: 0 [4/5 (80%)]	Loss: 0.37138 : 0.09090 :: 0.09223 (8.01 s/sec)
0: validation loss for strategy=BERT at epoch 0 : 0.07454152405261993
0: validation loss for velocity_u : 0.003777087200433016
0: validation loss for velocity_v : 0.0053485361859202385
0: validation loss for specific_humidity : 0.006223126780241728
0: validation loss for velocity_z : 0.10195435583591461
0: validation loss for temperature : 0.0166395902633667
0: validation loss for total_precip : 0.23761489987373352
0: validation loss for t2m : 0.15023307502269745
0: 1 : 16:15:11 :: batch_size = 96, lr = 1.5000000000000002e-05
2: 1 : 16:15:11 :: batch_size = 96, lr = 1.5000000000000002e-05
3: 1 : 16:15:11 :: batch_size = 96, lr = 1.5000000000000002e-05
1: 1 : 16:15:11 :: batch_size = 96, lr = 1.5000000000000002e-05
0: [DEBUG] TRAIN INPUT BATCH
0: Epoch 1, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.6959, -0.7252, -0.7701, -0.7378, -0.7041, -0.7152, -0.7621, -0.7881, -0.7651, -0.7459, -0.7436, -0.7345,
0:         -0.7089, -0.6699, -0.6349, -0.6003, -0.5523, -0.5064, -0.8448, -0.7843, -0.8287, -0.8300, -0.8012, -0.8165,
0:         -0.9024], device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
0:        device='cuda:0')
0:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([3.6258, 3.6433, 3.6824, 3.5891, 3.3380, 3.1353, 2.9647, 2.6544, 2.3576, 2.1424, 1.9663, 1.8182, 1.6909, 1.5348,
0:         1.4244, 1.3394, 1.2636, 1.2029, 3.8418, 3.7444, 3.7828, 3.8051, 3.5728, 3.3663, 3.0963], device='cuda:0')
0:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([ -6.4227,  -1.8674,  -0.3770,  -1.3212,  -0.7042,  -1.5445,  -1.2880,  -1.1421,  -0.9453,  -0.0607,   0.1427,
0:           0.4943,   0.4788,   0.6336,   0.6734,   0.6889,   0.6358,   0.3948, -16.4157,  -6.3210,   0.9410,  -0.8546,
0:          -0.6755,  -0.7617,  -0.5959], device='cuda:0')
0:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
0:        device='cuda:0')
0:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([14.7442, 10.6057,  6.0563,  4.6537,  2.5988,  0.2930, -0.0797, -0.2111, -0.2183, 25.8692, 19.7141, 14.8254,
0:          9.9152,  6.3382,  3.0671,  1.1556,  0.1329, -0.1777, 44.1984, 38.2464, 25.0186, 19.6400, 11.6809,  8.5556,
0:          3.8724], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([ 0.0938, -0.0255, -0.1454, -0.1686, -0.0152, -0.0761,  0.0976, -0.1833,  0.0610, -0.0022, -0.1053,  0.1434,
0:          0.1179, -0.0252,  0.0496,  0.0245,  0.0777, -0.0892, -0.0576,  0.1682,  0.0402,  0.0241, -0.0219,  0.1294,
0:          0.1308], device='cuda:0')
0: [DEBUG] TRAIN TARGET BATCH
0: Epoch 1, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2379, 2187])
0:     First 25 batch values:
0: tensor([-0.6436, -0.5291, -0.5056, -0.7015, -0.6580, -0.5104, -0.5292, -0.7601, -0.6047, -0.5467, -0.5130, -0.4568,
0:         -0.4692, -0.4799, -0.4146, -0.3905, -0.5794, -0.6089, -0.5480, -0.5113, -0.5120, -0.4173, -0.3554, -0.4241,
0:         -0.4821])
0: [DEBUG] TRAIN PREDICTIONS BATCH
0: Epoch 1, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([25985, 972])
0:      first 25 pred values: tensor([-1.1548, -1.2156, -1.2910, -1.3656, -1.4188, -1.4373, -1.4306, -1.3984, -1.3600, -1.3194, -1.2895, -1.2737,
0:         -1.2710, -1.2770, -1.2833, -1.2859, -1.2802, -1.2602, -1.1967, -1.2304, -1.2795, -1.3298, -1.3686, -1.3861,
0:         -1.3815], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([27336, 972])
0:      first 25 pred values: tensor([ 3.3598e-01,  3.1557e-01,  3.0399e-01,  2.9533e-01,  2.8129e-01,  2.5222e-01,  2.1183e-01,  1.6169e-01,
0:          1.1719e-01,  8.6212e-02,  6.8312e-02,  6.2696e-02,  5.5295e-02,  4.4080e-02,  2.4707e-02, -1.8750e-04,
0:         -1.7941e-02, -2.3575e-02,  3.0135e-01,  2.6869e-01,  2.5507e-01,  2.4991e-01,  2.4244e-01,  2.1517e-01,
0:          1.6882e-01], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([26085, 972])
0:      first 25 pred values: tensor([2.7334, 2.5830, 2.3930, 2.1837, 2.0373, 1.9524, 1.9558, 2.0181, 2.1240, 2.2394, 2.3480, 2.4308, 2.4925, 2.5596,
0:         2.6346, 2.7225, 2.8068, 2.9039, 2.6480, 2.5399, 2.3770, 2.2129, 2.0852, 2.0160, 1.9929], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([25863, 972])
0:      first 25 pred values: tensor([ 0.2185,  0.6501,  0.8533,  0.7346,  0.5442,  0.4506,  0.4240,  0.4063,  0.4376,  0.3249,  0.0344, -0.1662,
0:         -0.2415, -0.3037, -0.3000, -0.1563, -0.0709, -0.1229,  0.0781,  0.6146,  0.9643,  0.9395,  0.6081,  0.3588,
0:          0.3188], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([11573, 2187])
0:      first 25 pred values: tensor([-2.0092, -1.9290, -1.8724, -1.8406, -1.8188, -1.7890, -1.7554, -1.7191, -1.6846, -1.6498, -1.6142, -1.5718,
0:         -1.5291, -1.4976, -1.4727, -1.4512, -1.4279, -1.3915, -1.3446, -1.2865, -1.2254, -1.1706, -1.1324, -1.1108,
0:         -1.0939], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([10173, 243])
0:      first 25 pred values: tensor([0.1168, 0.1337, 0.2112, 0.3586, 0.4697, 0.5281, 0.5275, 0.4847, 0.4125, 0.1689, 0.2763, 0.4150, 0.5733, 0.6928,
0:         0.7481, 0.6646, 0.5026, 0.4360, 0.4409, 0.5601, 0.7352, 0.8890, 0.9702, 0.9197, 0.7724], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([2379, 2187])
0:      first 25 pred values: tensor([-0.4630, -0.4693, -0.4626, -0.4352, -0.4442, -0.4408, -0.4354, -0.4363, -0.4056, -0.4285, -0.4217, -0.3631,
0:         -0.3728, -0.3743, -0.3411, -0.3180, -0.2887, -0.3146, -0.2578, -0.2733, -0.2111, -0.2042, -0.2313, -0.1836,
0:         -0.1537], device='cuda:0', grad_fn=<SliceBackward0>)
2: [DEBUG] TRAIN INPUT BATCH
2: Epoch 1, first input batch shapes / sample data:
2:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([-0.6959, -0.7252, -0.7701, -0.7378, -0.7041, -0.7152, -0.7621, -0.7881, -0.7651, -0.7459, -0.7436, -0.7345,
2:         -0.7089, -0.6699, -0.6349, -0.6003, -0.5523, -0.5064, -0.8448, -0.7843, -0.8287, -0.8300, -0.8012, -0.8165,
2:         -0.9024], device='cuda:0')
2:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
2:        device='cuda:0')
2:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([3.6258, 3.6433, 3.6824, 3.5891, 3.3380, 3.1353, 2.9647, 2.6544, 2.3576, 2.1424, 1.9663, 1.8182, 1.6909, 1.5348,
2:         1.4244, 1.3394, 1.2636, 1.2029, 3.8418, 3.7444, 3.7828, 3.8051, 3.5728, 3.3663, 3.0963], device='cuda:0')
2:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([ -6.4227,  -1.8674,  -0.3770,  -1.3212,  -0.7042,  -1.5445,  -1.2880,  -1.1421,  -0.9453,  -0.0607,   0.1427,
2:           0.4943,   0.4788,   0.6336,   0.6734,   0.6889,   0.6358,   0.3948, -16.4157,  -6.3210,   0.9410,  -0.8546,
2:          -0.6755,  -0.7617,  -0.5959], device='cuda:0')
2:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
2:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
2:        device='cuda:0')
2:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
2:      first 25 values: tensor([14.7442, 10.6057,  6.0563,  4.6537,  2.5988,  0.2930, -0.0797, -0.2111, -0.2183, 25.8692, 19.7141, 14.8254,
2:          9.9152,  6.3382,  3.0671,  1.1556,  0.1329, -0.1777, 44.1984, 38.2464, 25.0186, 19.6400, 11.6809,  8.5556,
2:          3.8724], device='cuda:0')
2:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
2:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
2:        device='cuda:0')
2: [DEBUG] TRAIN TARGET BATCH
2: Epoch 1, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2428, 2187])
2:     First 25 batch values:
2: tensor([-2.2631, -2.5572, -2.6358, -2.5008, -2.1680, -1.5156, -0.7199, -0.3068, -0.1298, -0.0551, -0.1934, -0.3800,
2:         -0.9190, -1.4156, -1.3765, -1.0556, -0.9976, -1.1471, -1.2925, -1.4381, -1.3981, -1.2418, -1.2360, -1.3462,
2:         -1.4539])
2: [DEBUG] TRAIN PREDICTIONS BATCH
2: Epoch 1, first predictions sample:
2:   └─ Predictions for 'velocity_u' shape: torch.Size([25476, 972])
2:      first 25 pred values: tensor([-0.3452, -0.3460, -0.3333, -0.3164, -0.2927, -0.2669, -0.2519, -0.2529, -0.2799, -0.3229, -0.3773, -0.4343,
2:         -0.4737, -0.4920, -0.4820, -0.4456, -0.3893, -0.3321, -0.3911, -0.3953, -0.3872, -0.3664, -0.3361, -0.2989,
2:         -0.2736], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'velocity_v' shape: torch.Size([26509, 972])
2:      first 25 pred values: tensor([-0.0030, -0.0159, -0.0317, -0.0520, -0.0748, -0.1040, -0.1310, -0.1594, -0.1855, -0.2154, -0.2528, -0.2967,
2:         -0.3398, -0.3728, -0.3775, -0.3523, -0.2994, -0.2344,  0.0618,  0.0587,  0.0509,  0.0364,  0.0110, -0.0231,
2:         -0.0642], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'specific_humidity' shape: torch.Size([26198, 972])
2:      first 25 pred values: tensor([2.3055, 2.3088, 2.3816, 2.4818, 2.5827, 2.6509, 2.6999, 2.7029, 2.6928, 2.6848, 2.6730, 2.6544, 2.6417, 2.6299,
2:         2.6363, 2.6504, 2.6825, 2.7065, 2.4780, 2.4596, 2.5066, 2.5973, 2.6891, 2.7575, 2.7917], device='cuda:0',
2:        grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'velocity_z' shape: torch.Size([25990, 972])
2:      first 25 pred values: tensor([-0.2063, -0.1934, -0.1720, -0.1543, -0.1372, -0.0742, -0.0072,  0.0692,  0.1602,  0.2298,  0.3074,  0.3567,
2:          0.3542,  0.3228,  0.3019,  0.3085,  0.3220,  0.3232, -0.2056, -0.2108, -0.1963, -0.1719, -0.1644, -0.1115,
2:         -0.0558], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'temperature' shape: torch.Size([12092, 2187])
2:      first 25 pred values: tensor([ 1.0020,  0.7373,  0.4524,  0.1829, -0.0676, -0.3120, -0.5658, -0.8363, -1.1135, -1.3479, -1.4935, -1.5060,
2:         -1.3711, -1.1235, -0.8292, -0.5749, -0.4419, -0.4554, -0.5831, -0.7398, -0.8647, -0.9318, -0.9742, -1.0552,
2:         -1.2083], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'total_precip' shape: torch.Size([11306, 243])
2:      first 25 pred values: tensor([0.7518, 0.8469, 1.0705, 1.4275, 1.8480, 2.4335, 2.9128, 3.2685, 3.3853, 0.7924, 0.8045, 0.8667, 1.0324, 1.2511,
2:         1.5983, 1.8992, 2.2475, 2.3994, 1.0261, 0.9898, 0.8977, 0.8529, 0.7064, 0.7781, 0.9175], device='cuda:0',
2:        grad_fn=<SliceBackward0>)
2:   └─ Predictions for 't2m' shape: torch.Size([2428, 2187])
2:      first 25 pred values: tensor([-0.8646, -0.8575, -0.8857, -0.8463, -0.8512, -0.8427, -0.8733, -0.8247, -0.8410, -0.8682, -0.9011, -0.8558,
2:         -0.8616, -0.8794, -0.8614, -0.8163, -0.8334, -0.8693, -0.9012, -0.8556, -0.8145, -0.8418, -0.8183, -0.8022,
2:         -0.7744], device='cuda:0', grad_fn=<SliceBackward0>)
1: [DEBUG] TRAIN INPUT BATCH
1: Epoch 1, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.6959, -0.7252, -0.7701, -0.7378, -0.7041, -0.7152, -0.7621, -0.7881, -0.7651, -0.7459, -0.7436, -0.7345,
1:         -0.7089, -0.6699, -0.6349, -0.6003, -0.5523, -0.5064, -0.8448, -0.7843, -0.8287, -0.8300, -0.8012, -0.8165,
1:         -0.9024], device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([ 0.1152,  0.0361, -0.0361, -0.1565, -0.3136, -0.3817, -0.3260, -0.2546, -0.2023, -0.1434, -0.0948, -0.0655,
1:         -0.0675, -0.0839, -0.1159, -0.1672, -0.2053, -0.2263,  0.2000,  0.4122,  0.4793,  0.3425,  0.0728, -0.1813,
1:         -0.2412], device='cuda:0')
1:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([3.6258, 3.6433, 3.6824, 3.5891, 3.3380, 3.1353, 2.9647, 2.6544, 2.3576, 2.1424, 1.9663, 1.8182, 1.6909, 1.5348,
1:         1.4244, 1.3394, 1.2636, 1.2029, 3.8418, 3.7444, 3.7828, 3.8051, 3.5728, 3.3663, 3.0963], device='cuda:0')
1:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([ -6.4227,  -1.8674,  -0.3770,  -1.3212,  -0.7042,  -1.5445,  -1.2880,  -1.1421,  -0.9453,  -0.0607,   0.1427,
1:           0.4943,   0.4788,   0.6336,   0.6734,   0.6889,   0.6358,   0.3948, -16.4157,  -6.3210,   0.9410,  -0.8546,
1:          -0.6755,  -0.7617,  -0.5959], device='cuda:0')
1:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-0.4838,  0.0910, -0.0165, -0.6097, -0.8053, -1.1376, -1.3286, -1.0898, -0.6433, -0.2471, -0.0255,  0.1391,
1:          0.2247,  0.3261,  0.3971,  0.3904,  0.3773,  0.3821,  0.4603,  0.5883,  0.7179,  0.7654,  0.7468,  0.7182,
1:          0.6845], device='cuda:0')
1:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
1:      first 25 values: tensor([14.7442, 10.6057,  6.0563,  4.6537,  2.5988,  0.2930, -0.0797, -0.2111, -0.2183, 25.8692, 19.7141, 14.8254,
1:          9.9152,  6.3382,  3.0671,  1.1556,  0.1329, -0.1777, 44.1984, 38.2464, 25.0186, 19.6400, 11.6809,  8.5556,
1:          3.8724], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([0.9076, 0.9375, 0.9237, 0.8581, 0.8846, 0.8181, 0.8056, 0.8396, 0.8775, 0.9118, 0.9516, 1.0439, 1.1515, 1.2183,
1:         1.2750, 1.3128, 1.3854, 1.3925, 1.4692, 1.5961, 1.6975, 1.7790, 1.8742, 1.8549, 1.7450], device='cuda:0')
1: [DEBUG] TRAIN TARGET BATCH
1: Epoch 1, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2435, 2187])
1:     First 25 batch values:
1: tensor([1.2178, 1.2019, 1.0725, 0.9509, 0.9184, 0.8064, 0.7491, 0.7780, 0.7857, 0.7126, 0.6946, 0.6559, 0.6062, 0.5958,
1:         0.5844, 0.5947, 0.6863, 0.6531, 0.7170, 0.7707, 0.8867, 1.0209, 1.0667, 0.9809, 0.8919])
1: [DEBUG] TRAIN PREDICTIONS BATCH
1: Epoch 1, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([26323, 972])
1:      first 25 pred values: tensor([-0.7771, -0.8059, -0.8407, -0.8840, -0.9258, -0.9645, -1.0021, -1.0429, -1.0936, -1.1516, -1.2189, -1.2856,
1:         -1.3443, -1.3904, -1.4178, -1.4280, -1.4188, -1.4024, -0.8520, -0.8632, -0.8752, -0.8928, -0.9177, -0.9445,
1:         -0.9795], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([25316, 972])
1:      first 25 pred values: tensor([-0.2928, -0.4242, -0.5540, -0.6603, -0.7209, -0.7232, -0.6771, -0.5972, -0.5025, -0.4048, -0.3109, -0.2105,
1:         -0.0991,  0.0290,  0.1546,  0.2479,  0.2916,  0.2813, -0.3168, -0.4313, -0.5423, -0.6316, -0.6839, -0.6919,
1:         -0.6652], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([25439, 972])
1:      first 25 pred values: tensor([3.0755, 2.8088, 2.4817, 2.1991, 2.0554, 2.0620, 2.2579, 2.5423, 2.8962, 3.2455, 3.5659, 3.8167, 4.0082, 4.1124,
1:         4.1188, 4.0328, 3.8727, 3.7046, 3.0657, 2.8232, 2.5343, 2.3087, 2.2132, 2.2711, 2.4596], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([26125, 972])
1:      first 25 pred values: tensor([ 0.7317,  1.5015,  1.2826,  0.3034,  0.6189,  2.3421,  2.3037,  0.2526, -1.3563, -2.4505, -3.1252, -2.0578,
1:          0.2098,  1.8793,  2.9815,  2.7589,  0.4310, -1.7011,  0.8233,  1.5255,  1.0886, -0.7867, -0.8553,  2.1372,
1:          3.6620], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([11727, 2187])
1:      first 25 pred values: tensor([0.9477, 0.9536, 0.9901, 1.0444, 1.1147, 1.1840, 1.2482, 1.2966, 1.3301, 1.3517, 1.3734, 1.4125, 1.4783, 1.5619,
1:         1.6365, 1.6833, 1.6872, 1.6500, 1.5829, 1.5033, 1.4216, 1.3454, 1.2759, 1.2084, 1.1358], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([11047, 243])
1:      first 25 pred values: tensor([2.8708, 3.0103, 3.0540, 2.9381, 2.6381, 2.1649, 1.6715, 1.1844, 0.8141, 2.0480, 2.2317, 2.3588, 2.3837, 2.2347,
1:         1.8726, 1.4391, 1.0572, 0.7132, 1.0899, 1.2306, 1.4282, 1.5994, 1.5863, 1.4219, 1.2213], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([2435, 2187])
1:      first 25 pred values: tensor([0.6598, 0.6033, 0.6081, 0.6676, 0.6351, 0.5784, 0.5627, 0.5570, 0.5387, 0.5247, 0.4977, 0.4386, 0.3874, 0.3830,
1:         0.3375, 0.3340, 0.2636, 0.2428, 0.2384, 0.2080, 0.1456, 0.1447, 0.1623, 0.1170, 0.0458], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
3: [DEBUG] TRAIN INPUT BATCH
3: Epoch 1, first input batch shapes / sample data:
3:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([-0.6959, -0.7252, -0.7701, -0.7378, -0.7041, -0.7152, -0.7621, -0.7881, -0.7651, -0.7459, -0.7436, -0.7345,
3:         -0.7089, -0.6699, -0.6349, -0.6003, -0.5523, -0.5064, -0.8448, -0.7843, -0.8287, -0.8300, -0.8012, -0.8165,
3:         -0.9024], device='cuda:0')
3:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
3:        device='cuda:0')
3:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
3:        device='cuda:0')
3:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([ -6.4227,  -1.8674,  -0.3770,  -1.3212,  -0.7042,  -1.5445,  -1.2880,  -1.1421,  -0.9453,  -0.0607,   0.1427,
3:           0.4943,   0.4788,   0.6336,   0.6734,   0.6889,   0.6358,   0.3948, -16.4157,  -6.3210,   0.9410,  -0.8546,
3:          -0.6755,  -0.7617,  -0.5959], device='cuda:0')
3:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
3:      first 25 values: tensor([-0.4838,  0.0910, -0.0165, -0.6097, -0.8053, -1.1376, -1.3286, -1.0898, -0.6433, -0.2471, -0.0255,  0.1391,
3:          0.2247,  0.3261,  0.3971,  0.3904,  0.3773,  0.3821,  0.4603,  0.5883,  0.7179,  0.7654,  0.7468,  0.7182,
3:          0.6845], device='cuda:0')
3:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
3:      first 25 values: tensor([14.7442, 10.6057,  6.0563,  4.6537,  2.5988,  0.2930, -0.0797, -0.2111, -0.2183, 25.8692, 19.7141, 14.8254,
3:          9.9152,  6.3382,  3.0671,  1.1556,  0.1329, -0.1777, 44.1984, 38.2464, 25.0186, 19.6400, 11.6809,  8.5556,
3:          3.8724], device='cuda:0')
3:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
3:      first 25 values: tensor([0.9076, 0.9375, 0.9237, 0.8581, 0.8846, 0.8181, 0.8056, 0.8396, 0.8775, 0.9118, 0.9516, 1.0439, 1.1515, 1.2183,
3:         1.2750, 1.3128, 1.3854, 1.3925, 1.4692, 1.5961, 1.6975, 1.7790, 1.8742, 1.8549, 1.7450], device='cuda:0')
3: [DEBUG] TRAIN TARGET BATCH
3: Epoch 1, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2429, 2187])
3:     First 25 batch values:
3: tensor([ 0.5954,  0.5400,  0.4532,  0.4837,  0.3702,  0.2840,  0.9708,  0.8868,  0.8446,  0.8250,  0.8709,  0.9300,
3:          0.9515,  0.8536,  0.7199,  0.3910,  0.0842, -0.1187, -0.3052, -0.4367, -0.3997, -0.4392, -0.6985, -1.1388,
3:         -1.4863])
3: [DEBUG] TRAIN PREDICTIONS BATCH
3: Epoch 1, first predictions sample:
3:   └─ Predictions for 'velocity_u' shape: torch.Size([27053, 972])
3:      first 25 pred values: tensor([-1.0887, -1.1066, -1.1224, -1.1245, -1.1153, -1.0945, -1.0734, -1.0621, -1.0567, -1.0613, -1.0688, -1.0767,
3:         -1.0859, -1.0919, -1.0988, -1.1044, -1.1117, -1.1173, -1.0511, -1.0696, -1.0918, -1.1040, -1.1008, -1.0897,
3:         -1.0786], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'velocity_v' shape: torch.Size([26245, 972])
3:      first 25 pred values: tensor([ 0.2626,  0.2828,  0.2490,  0.1622,  0.0318, -0.1253, -0.2652, -0.3768, -0.4367, -0.4524, -0.4193, -0.3526,
3:         -0.2765, -0.2046, -0.1375, -0.0844, -0.0354,  0.0032,  0.1695,  0.1854,  0.1686,  0.1183,  0.0342, -0.0707,
3:         -0.1744], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'specific_humidity' shape: torch.Size([26347, 972])
3:      first 25 pred values: tensor([3.7699, 3.7940, 3.8186, 3.8450, 3.8613, 3.8788, 3.8910, 3.9069, 3.9324, 3.9475, 3.9459, 3.9373, 3.8980, 3.8501,
3:         3.7890, 3.7179, 3.6351, 3.5523, 3.8161, 3.8350, 3.8511, 3.8812, 3.9014, 3.9047, 3.9052], device='cuda:0',
3:        grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'velocity_z' shape: torch.Size([25351, 972])
3:      first 25 pred values: tensor([ -2.7545,  -9.0723, -13.1333, -12.7889,  -9.2610,  -5.1823,  -2.5843,  -1.1375,  -0.1309,   0.3715,   0.4938,
3:           0.2865,  -0.2065,  -0.6062,  -0.7903,  -0.8693,  -0.8719,  -0.9409,  -2.8314,  -9.3622, -13.3500, -12.6144,
3:          -8.7702,  -4.5327,  -1.9480], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'temperature' shape: torch.Size([11711, 2187])
3:      first 25 pred values: tensor([-1.2879, -1.2239, -1.2083, -1.2662, -1.3725, -1.4757, -1.5479, -1.5791, -1.5925, -1.6138, -1.6561, -1.7223,
3:         -1.7993, -1.8783, -1.9331, -1.9509, -1.9230, -1.8464, -1.7374, -1.6257, -1.5280, -1.4742, -1.4677, -1.4964,
3:         -1.5535], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'total_precip' shape: torch.Size([11237, 243])
3:      first 25 pred values: tensor([-0.1604, -0.1183, -0.0530,  0.0729,  0.2905,  0.5159,  0.7881,  1.0785,  1.3096, -0.2263, -0.1985, -0.1579,
3:         -0.1000,  0.0275,  0.2297,  0.4993,  0.8163,  1.0865, -0.2628, -0.2401, -0.2481, -0.2291, -0.1666,  0.0055,
3:          0.2305], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 't2m' shape: torch.Size([2429, 2187])
3:      first 25 pred values: tensor([ 0.3555,  0.3147,  0.2781,  0.3073,  0.2368,  0.2854,  0.2395,  0.1683,  0.1432,  0.0661,  0.0132,  0.0318,
3:         -0.0265, -0.0702, -0.0456, -0.1319, -0.1548, -0.2167, -0.2327, -0.2434, -0.1939, -0.3276, -0.3133, -0.3161,
3:         -0.3048], device='cuda:0', grad_fn=<SliceBackward0>)
0: epoch: 1 [1/5 (20%)]	Loss: 0.37878 : 0.10398 :: 0.09202 (1.67 s/sec)
0: epoch: 1 [2/5 (40%)]	Loss: 0.38836 : 0.10658 :: 0.08485 (8.17 s/sec)
0: epoch: 1 [3/5 (60%)]	Loss: 0.40275 : 0.07820 :: 0.08118 (8.15 s/sec)
0: epoch: 1 [4/5 (80%)]	Loss: 0.39090 : 0.11263 :: 0.08161 (8.15 s/sec)
0: validation loss for strategy=BERT at epoch 1 : 0.0807938426733017
0: validation loss for velocity_u : 0.003980273846536875
0: validation loss for velocity_v : 0.005519790109246969
0: validation loss for specific_humidity : 0.006439076736569405
0: validation loss for velocity_z : 0.10993275046348572
0: validation loss for temperature : 0.018917422741651535
0: validation loss for total_precip : 0.2613528370857239
0: validation loss for t2m : 0.15941479802131653
0: 2 : 16:21:46 :: batch_size = 96, lr = 2e-05
1: 2 : 16:21:46 :: batch_size = 96, lr = 2e-05
2: 2 : 16:21:46 :: batch_size = 96, lr = 2e-05
3: 2 : 16:21:46 :: batch_size = 96, lr = 2e-05
0: [DEBUG] TRAIN INPUT BATCH
0: Epoch 2, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([1.3725, 1.3714, 1.3589, 1.3393, 1.3137, 1.2808, 1.2456, 1.2206, 1.2124, 1.2138, 1.2191, 1.2339, 1.2616, 1.2889,
0:         1.3015, 1.3062, 1.3137, 1.3033, 1.2752, 1.2825, 1.2780, 1.2630, 1.2409, 1.2133, 1.1838], device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
0:        device='cuda:0')
0:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.4698, -0.4118, -0.3345, -0.2519, -0.1646, -0.0730, -0.0114,  0.0653,  0.1182,  0.1543,  0.1499,  0.1499,
0:          0.1271,  0.0920,  0.0586,  0.0182, -0.0460, -0.0816, -0.5438, -0.5071, -0.4702, -0.4113, -0.3234, -0.2365,
0:         -0.1469], device='cuda:0')
0:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([ 0.5940,  0.4384,  0.0487, -0.5159, -0.9248, -1.0441, -0.9896, -0.7147, -0.0569,  0.7133,  0.9984,  0.7815,
0:          0.7803,  1.3040,  1.6017,  0.9848,  0.0374, -0.1376,  0.6531,  0.4145,  0.1101, -0.3307, -0.7340, -0.8612,
0:         -0.6885], device='cuda:0')
0:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
0:        device='cuda:0')
0:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([-0.2383, -0.2407, -0.2407, -0.2227, -0.2203, -0.2323, -0.2359, -0.2443, -0.2239, -0.2419, -0.2407, -0.2335,
0:         -0.2215, -0.2191, -0.2347, -0.2407, -0.2443, -0.2239, -0.2443, -0.2443, -0.2371, -0.2299, -0.2287, -0.2371,
0:         -0.2431], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([ 0.1223,  0.0641, -0.0610,  0.0015,  0.0431, -0.1958, -0.2145,  0.0136,  0.0054,  0.0285,  0.0106,  0.0233,
0:          0.0517, -0.2251, -0.0626,  0.0160,  0.0568,  0.1321, -0.0052,  0.1005,  0.1118, -0.0436, -0.0120, -0.1580,
0:         -0.0422], device='cuda:0')
0: [DEBUG] TRAIN TARGET BATCH
0: Epoch 2, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2379, 2187])
0:     First 25 batch values:
0: tensor([ 0.0848,  0.1429,  0.1663,  0.1261,  0.0364, -0.0824, -0.2577, -0.2987, -0.2206, -0.1174,  0.0227,  0.1724,
0:          0.2215,  0.2465,  0.2895,  0.2998,  0.2819,  0.2685,  0.2468,  0.2287,  0.2189,  0.1912,  0.1296, -0.0463,
0:         -0.3004])
0: [DEBUG] TRAIN PREDICTIONS BATCH
0: Epoch 2, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([25985, 972])
0:      first 25 pred values: tensor([0.0783, 0.0645, 0.0609, 0.0771, 0.1095, 0.1574, 0.2106, 0.2568, 0.2911, 0.3108, 0.3211, 0.3287, 0.3375, 0.3501,
0:         0.3709, 0.3873, 0.4065, 0.4207, 0.1019, 0.0977, 0.0967, 0.1115, 0.1319, 0.1629, 0.1957], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([27336, 972])
0:      first 25 pred values: tensor([-1.0055, -1.0201, -1.0984, -1.2132, -1.3547, -1.5103, -1.6708, -1.8221, -1.9457, -2.0309, -2.0742, -2.0729,
0:         -2.0452, -2.0020, -1.9607, -1.9309, -1.9221, -1.9298, -1.0707, -1.0929, -1.1706, -1.2699, -1.3808, -1.4999,
0:         -1.6165], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([26085, 972])
0:      first 25 pred values: tensor([-0.4673, -0.4762, -0.4897, -0.5001, -0.5022, -0.4962, -0.4757, -0.4470, -0.4126, -0.3794, -0.3551, -0.3416,
0:         -0.3390, -0.3502, -0.3713, -0.3980, -0.4331, -0.4700, -0.4671, -0.4756, -0.4866, -0.4958, -0.4996, -0.4921,
0:         -0.4742], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([25863, 972])
0:      first 25 pred values: tensor([1.5942, 1.2101, 0.9925, 1.1238, 1.1282, 1.1593, 1.5881, 2.3496, 2.8777, 2.6800, 1.8635, 0.9732, 0.4550, 0.1549,
0:         0.1301, 0.6443, 1.3776, 1.9146, 1.3825, 1.3339, 1.3414, 1.3524, 1.2739, 1.6759, 2.4778], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([11573, 2187])
0:      first 25 pred values: tensor([-1.7690, -1.7616, -1.7530, -1.7513, -1.7502, -1.7465, -1.7384, -1.7292, -1.7251, -1.7255, -1.7288, -1.7292,
0:         -1.7204, -1.7047, -1.6834, -1.6636, -1.6510, -1.6452, -1.6419, -1.6344, -1.6212, -1.6001, -1.5762, -1.5576,
0:         -1.5426], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([10173, 243])
0:      first 25 pred values: tensor([-0.2559, -0.2658, -0.2635, -0.2611, -0.2454, -0.2550, -0.2458, -0.2464, -0.2467, -0.2649, -0.2640, -0.2633,
0:         -0.2429, -0.2465, -0.2408, -0.2468, -0.2465, -0.2453, -0.2555, -0.2547, -0.2425, -0.2457, -0.2522, -0.2416,
0:         -0.2489], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([2379, 2187])
0:      first 25 pred values: tensor([ 0.0209,  0.0243,  0.0527,  0.0783,  0.0525,  0.1190,  0.0767,  0.0507,  0.0173,  0.0074, -0.0224, -0.0011,
0:          0.0208, -0.0215, -0.0356, -0.0582, -0.1408, -0.1140, -0.1348, -0.1621, -0.0960, -0.2012, -0.2325, -0.2732,
0:         -0.2781], device='cuda:0', grad_fn=<SliceBackward0>)
2: [DEBUG] TRAIN INPUT BATCH
2: Epoch 2, first input batch shapes / sample data:
2:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([1.3725, 1.3714, 1.3589, 1.3393, 1.3137, 1.2808, 1.2456, 1.2206, 1.2124, 1.2138, 1.2191, 1.2339, 1.2616, 1.2889,
2:         1.3015, 1.3062, 1.3137, 1.3033, 1.2752, 1.2825, 1.2780, 1.2630, 1.2409, 1.2133, 1.1838], device='cuda:0')
2:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
2:        device='cuda:0')
2:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([-0.4698, -0.4118, -0.3345, -0.2519, -0.1646, -0.0730, -0.0114,  0.0653,  0.1182,  0.1543,  0.1499,  0.1499,
2:          0.1271,  0.0920,  0.0586,  0.0182, -0.0460, -0.0816, -0.5438, -0.5071, -0.4702, -0.4113, -0.3234, -0.2365,
2:         -0.1469], device='cuda:0')
2:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([ 0.5940,  0.4384,  0.0487, -0.5159, -0.9248, -1.0441, -0.9896, -0.7147, -0.0569,  0.7133,  0.9984,  0.7815,
2:          0.7803,  1.3040,  1.6017,  0.9848,  0.0374, -0.1376,  0.6531,  0.4145,  0.1101, -0.3307, -0.7340, -0.8612,
2:         -0.6885], device='cuda:0')
2:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
2:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
2:        device='cuda:0')
2:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
2:      first 25 values: tensor([-0.2383, -0.2407, -0.2407, -0.2227, -0.2203, -0.2323, -0.2359, -0.2443, -0.2239, -0.2419, -0.2407, -0.2335,
2:         -0.2215, -0.2191, -0.2347, -0.2407, -0.2443, -0.2239, -0.2443, -0.2443, -0.2371, -0.2299, -0.2287, -0.2371,
2:         -0.2431], device='cuda:0')
2:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
2:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
2:        device='cuda:0')
2: [DEBUG] TRAIN TARGET BATCH
2: Epoch 2, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2428, 2187])
2:     First 25 batch values:
2: tensor([0.5476, 0.5557, 0.5654, 0.5336, 0.5029, 0.4505, 0.3779, 0.2743, 0.2149, 0.1845, 0.1781, 0.1957, 0.1974, 0.1660,
2:         0.1671, 0.1740, 0.2075, 0.2633, 0.3235, 0.3806, 0.4734, 0.5645, 0.6297, 0.6591, 0.5205])
2: [DEBUG] TRAIN PREDICTIONS BATCH
2: Epoch 2, first predictions sample:
2:   └─ Predictions for 'velocity_u' shape: torch.Size([25476, 972])
2:      first 25 pred values: tensor([1.1551, 1.1997, 1.2355, 1.2688, 1.3021, 1.3459, 1.3937, 1.4442, 1.4898, 1.5266, 1.5561, 1.5788, 1.5949, 1.6044,
2:         1.6079, 1.5949, 1.5688, 1.5261, 1.0729, 1.1087, 1.1365, 1.1669, 1.2016, 1.2454, 1.3007], device='cuda:0',
2:        grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'velocity_v' shape: torch.Size([26509, 972])
2:      first 25 pred values: tensor([-0.2294, -0.3618, -0.4986, -0.6298, -0.7600, -0.8855, -0.9941, -1.0916, -1.1697, -1.2424, -1.3181, -1.4036,
2:         -1.4895, -1.5691, -1.6384, -1.6983, -1.7555, -1.8159, -0.2392, -0.3752, -0.5170, -0.6574, -0.7905, -0.9185,
2:         -1.0318], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'specific_humidity' shape: torch.Size([26198, 972])
2:      first 25 pred values: tensor([-0.1078, -0.0963, -0.0930, -0.0995, -0.1223, -0.1584, -0.2016, -0.2491, -0.2917, -0.3278, -0.3539, -0.3781,
2:         -0.3970, -0.4179, -0.4354, -0.4535, -0.4684, -0.4818, -0.1257, -0.1195, -0.1215, -0.1345, -0.1598, -0.1943,
2:         -0.2364], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'velocity_z' shape: torch.Size([25990, 972])
2:      first 25 pred values: tensor([0.6851, 1.1191, 1.4955, 1.6794, 1.6808, 1.6871, 1.8073, 1.9294, 1.8886, 1.7318, 1.5212, 1.1938, 0.8645, 0.6517,
2:         0.5340, 0.4246, 0.3036, 0.2508, 0.4723, 0.6283, 0.7729, 0.8848, 0.9909, 1.2363, 1.5743], device='cuda:0',
2:        grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'temperature' shape: torch.Size([12092, 2187])
2:      first 25 pred values: tensor([ 0.5076,  0.4838,  0.4349,  0.3493,  0.2263,  0.0761, -0.0900, -0.2580, -0.4209, -0.5722, -0.7075, -0.8261,
2:         -0.9278, -1.0116, -1.0761, -1.1235, -1.1549, -1.1757, -1.1891, -1.1954, -1.1948, -1.1823, -1.1607, -1.1365,
2:         -1.1102], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'total_precip' shape: torch.Size([11306, 243])
2:      first 25 pred values: tensor([-0.2499, -0.2619, -0.2602, -0.2580, -0.2431, -0.2511, -0.2422, -0.2405, -0.2392, -0.2589, -0.2571, -0.2593,
2:         -0.2374, -0.2465, -0.2388, -0.2459, -0.2443, -0.2383, -0.2479, -0.2498, -0.2351, -0.2391, -0.2486, -0.2395,
2:         -0.2474], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 't2m' shape: torch.Size([2428, 2187])
2:      first 25 pred values: tensor([0.2677, 0.2309, 0.2945, 0.3437, 0.2478, 0.4246, 0.3596, 0.3834, 0.4200, 0.4347, 0.4267, 0.4831, 0.5335, 0.5264,
2:         0.5328, 0.5743, 0.5594, 0.5572, 0.5757, 0.5470, 0.6352, 0.6281, 0.5530, 0.5416, 0.6039], device='cuda:0',
2:        grad_fn=<SliceBackward0>)
1: [DEBUG] TRAIN INPUT BATCH
1: Epoch 2, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.7065, -0.7129, -0.7329, -0.7689, -0.8161, -0.8747, -0.9357, -0.9882, -1.0286, -1.0598, -1.0843, -1.1033,
1:         -1.1151, -1.1193, -1.1165, -1.1065, -1.0958, -1.0843, -0.6931, -0.7076, -0.7390, -0.7881, -0.8479, -0.9132,
1:         -0.9725], device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([ 0.0458,  0.0603,  0.0584,  0.0253, -0.0416, -0.1260, -0.2013, -0.2452, -0.2530, -0.2337, -0.1889, -0.1245,
1:         -0.0496,  0.0257,  0.0919,  0.1458,  0.1813,  0.1990,  0.0724,  0.0735,  0.0434, -0.0262, -0.1234, -0.2205,
1:         -0.2902], device='cuda:0')
1:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([ 0.4702,  0.3010,  0.1196, -0.0716, -0.2455, -0.3727, -0.4118, -0.4123, -0.4094, -0.4004, -0.3866, -0.3708,
1:         -0.3585, -0.3547, -0.3606, -0.3818, -0.4152, -0.4466,  0.3596,  0.1835, -0.0017, -0.1822, -0.3352, -0.4077,
1:         -0.4237], device='cuda:0')
1:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([0.4226, 0.3726, 0.3215, 0.3147, 0.2965, 0.2874, 0.2352, 0.3090, 0.2727, 0.3079, 0.3340, 0.3158, 0.3624, 0.3556,
1:         0.4249, 0.4010, 0.3749, 0.3454, 0.3840, 0.3192, 0.3124, 0.2931, 0.2874, 0.3488, 0.3101], device='cuda:0')
1:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([0.3275, 0.4680, 0.5903, 0.6939, 0.7214, 0.6925, 0.6357, 0.5974, 0.5796, 0.5603, 0.5439, 0.5073, 0.4564, 0.3799,
1:         0.2853, 0.1937, 0.1227, 0.0781, 0.0646, 0.0824, 0.1265, 0.1767, 0.2137, 0.2471, 0.2821], device='cuda:0')
1:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
1:      first 25 values: tensor([-0.1699, -0.1807, -0.1843, -0.1999, -0.2107, -0.1999, -0.2035, -0.1591, -0.1651, -0.2395, -0.2395, -0.2407,
1:         -0.2407, -0.2407, -0.2407, -0.2395, -0.2011, -0.1207, -0.2491, -0.2491, -0.2491, -0.2491, -0.2491, -0.2491,
1:         -0.2467], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-0.5607, -0.2195,  0.1540,  0.3459,  0.2742,  0.1951, -0.1378, -0.4119, -0.6551, -0.4485, -0.0947, -0.0207,
1:         -0.2988, -0.6107, -0.8514, -0.5789, -0.1955,  0.0051,  0.1700,  0.2379,  0.1755,  0.0726, -0.0204, -0.1000,
1:         -0.1626], device='cuda:0')
1: [DEBUG] TRAIN TARGET BATCH
1: Epoch 2, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2435, 2187])
1:     First 25 batch values:
1: tensor([1.4819, 1.4993, 1.4936, 1.4285, 1.3345, 1.2141, 1.1148, 1.0588, 0.9906, 0.9194, 0.8515, 0.7337, 0.6078, 0.5412,
1:         0.5668, 0.5896, 0.5975, 0.4875, 0.3773, 0.3282, 0.2856, 0.2344, 0.1941, 0.1507, 0.1674])
1: [DEBUG] TRAIN PREDICTIONS BATCH
1: Epoch 2, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([26323, 972])
1:      first 25 pred values: tensor([-1.0914, -1.0998, -1.1043, -1.1016, -1.0953, -1.0921, -1.0913, -1.0993, -1.1081, -1.1198, -1.1301, -1.1371,
1:         -1.1456, -1.1511, -1.1569, -1.1643, -1.1698, -1.1783, -1.0905, -1.1010, -1.1052, -1.1009, -1.0969, -1.0912,
1:         -1.0923], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([25316, 972])
1:      first 25 pred values: tensor([ 0.1839,  0.1311,  0.0722,  0.0218, -0.0150, -0.0356, -0.0445, -0.0482, -0.0505, -0.0565, -0.0690, -0.0822,
1:         -0.0892, -0.0887, -0.0746, -0.0506, -0.0248, -0.0006,  0.2241,  0.1661,  0.0973,  0.0347, -0.0135, -0.0435,
1:         -0.0586], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([25439, 972])
1:      first 25 pred values: tensor([-0.3614, -0.3416, -0.3204, -0.3041, -0.2942, -0.2870, -0.2817, -0.2715, -0.2602, -0.2441, -0.2213, -0.2045,
1:         -0.1871, -0.1741, -0.1651, -0.1506, -0.1336, -0.1165, -0.3800, -0.3556, -0.3296, -0.3115, -0.2971, -0.2851,
1:         -0.2804], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([26125, 972])
1:      first 25 pred values: tensor([0.1061, 0.1270, 0.1454, 0.1567, 0.1492, 0.1172, 0.0918, 0.0665, 0.0599, 0.1082, 0.1627, 0.1945, 0.2038, 0.1888,
1:         0.2007, 0.2264, 0.2425, 0.2622, 0.1423, 0.1646, 0.1615, 0.1506, 0.1347, 0.0991, 0.0747], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([11727, 2187])
1:      first 25 pred values: tensor([0.4769, 0.4776, 0.4718, 0.4578, 0.4335, 0.4015, 0.3657, 0.3325, 0.3118, 0.3104, 0.3259, 0.3504, 0.3719, 0.3765,
1:         0.3619, 0.3284, 0.2886, 0.2492, 0.2185, 0.2014, 0.1969, 0.2071, 0.2289, 0.2577, 0.2944], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([11047, 243])
1:      first 25 pred values: tensor([-0.2128, -0.2330, -0.2359, -0.2411, -0.2309, -0.2420, -0.2329, -0.2338, -0.2342, -0.2182, -0.2208, -0.2306,
1:         -0.2220, -0.2291, -0.2306, -0.2388, -0.2380, -0.2360, -0.1992, -0.2056, -0.2033, -0.2142, -0.2314, -0.2323,
1:         -0.2428], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([2435, 2187])
1:      first 25 pred values: tensor([1.1923, 1.1106, 1.1233, 1.0868, 1.1048, 1.0931, 1.0401, 1.0390, 0.9810, 1.0115, 0.9279, 0.9032, 0.8905, 0.8483,
1:         0.7986, 0.7327, 0.7141, 0.7016, 0.6761, 0.5944, 0.6157, 0.5629, 0.4755, 0.4934, 0.4205], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
3: [DEBUG] TRAIN INPUT BATCH
3: Epoch 2, first input batch shapes / sample data:
3:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([-0.7065, -0.7129, -0.7329, -0.7689, -0.8161, -0.8747, -0.9357, -0.9882, -1.0286, -1.0598, -1.0843, -1.1033,
3:         -1.1151, -1.1193, -1.1165, -1.1065, -1.0958, -1.0843, -0.6931, -0.7076, -0.7390, -0.7881, -0.8479, -0.9132,
3:         -0.9725], device='cuda:0')
3:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
3:        device='cuda:0')
3:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
3:        device='cuda:0')
3:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([0.4226, 0.3726, 0.3215, 0.3147, 0.2965, 0.2874, 0.2352, 0.3090, 0.2727, 0.3079, 0.3340, 0.3158, 0.3624, 0.3556,
3:         0.4249, 0.4010, 0.3749, 0.3454, 0.3840, 0.3192, 0.3124, 0.2931, 0.2874, 0.3488, 0.3101], device='cuda:0')
3:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
3:      first 25 values: tensor([0.3275, 0.4680, 0.5903, 0.6939, 0.7214, 0.6925, 0.6357, 0.5974, 0.5796, 0.5603, 0.5439, 0.5073, 0.4564, 0.3799,
3:         0.2853, 0.1937, 0.1227, 0.0781, 0.0646, 0.0824, 0.1265, 0.1767, 0.2137, 0.2471, 0.2821], device='cuda:0')
3:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
3:      first 25 values: tensor([-0.1699, -0.1807, -0.1843, -0.1999, -0.2107, -0.1999, -0.2035, -0.1591, -0.1651, -0.2395, -0.2395, -0.2407,
3:         -0.2407, -0.2407, -0.2407, -0.2395, -0.2011, -0.1207, -0.2491, -0.2491, -0.2491, -0.2491, -0.2491, -0.2491,
3:         -0.2467], device='cuda:0')
3:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
3:      first 25 values: tensor([-0.5607, -0.2195,  0.1540,  0.3459,  0.2742,  0.1951, -0.1378, -0.4119, -0.6551, -0.4485, -0.0947, -0.0207,
3:         -0.2988, -0.6107, -0.8514, -0.5789, -0.1955,  0.0051,  0.1700,  0.2379,  0.1755,  0.0726, -0.0204, -0.1000,
3:         -0.1626], device='cuda:0')
3: [DEBUG] TRAIN TARGET BATCH
3: Epoch 2, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2429, 2187])
3:     First 25 batch values:
3: tensor([-1.0901, -1.0950, -0.8465, -0.4697, -0.2161, -0.1086, -0.3871, -0.6343, -0.7504, -0.7468, -0.7219, -0.7634,
3:         -0.8706, -1.0827, -1.4401, -1.4899, -1.6052, -1.7048, -1.8226, -1.8403, -1.7962, -1.8098, -1.9405, -2.1100,
3:         -2.2243])
3: [DEBUG] TRAIN PREDICTIONS BATCH
3: Epoch 2, first predictions sample:
3:   └─ Predictions for 'velocity_u' shape: torch.Size([27053, 972])
3:      first 25 pred values: tensor([-0.6849, -0.6895, -0.6926, -0.6943, -0.6988, -0.7094, -0.7231, -0.7468, -0.7704, -0.7980, -0.8262, -0.8541,
3:         -0.8814, -0.9020, -0.9196, -0.9281, -0.9257, -0.9197, -0.6867, -0.6914, -0.6964, -0.7000, -0.7038, -0.7117,
3:         -0.7290], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'velocity_v' shape: torch.Size([26245, 972])
3:      first 25 pred values: tensor([-0.1670, -0.1402, -0.1076, -0.0746, -0.0420, -0.0074,  0.0235,  0.0472,  0.0638,  0.0720,  0.0755,  0.0791,
3:          0.0825,  0.0840,  0.0849,  0.0846,  0.0834,  0.0849, -0.1991, -0.1708, -0.1397, -0.1095, -0.0771, -0.0434,
3:         -0.0085], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'specific_humidity' shape: torch.Size([26347, 972])
3:      first 25 pred values: tensor([-0.1556, -0.1655, -0.1833, -0.2050, -0.2307, -0.2552, -0.2784, -0.2958, -0.3121, -0.3130, -0.3020, -0.2785,
3:         -0.2427, -0.1990, -0.1539, -0.1086, -0.0687, -0.0363, -0.1706, -0.1843, -0.2044, -0.2286, -0.2535, -0.2730,
3:         -0.2924], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'velocity_z' shape: torch.Size([25351, 972])
3:      first 25 pred values: tensor([0.2463, 0.2257, 0.2295, 0.2643, 0.2786, 0.2723, 0.2761, 0.2737, 0.2664, 0.3041, 0.3512, 0.3678, 0.3621, 0.3518,
3:         0.3506, 0.3200, 0.2709, 0.2494, 0.2335, 0.2288, 0.2535, 0.2984, 0.3085, 0.3004, 0.3123], device='cuda:0',
3:        grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'temperature' shape: torch.Size([11711, 2187])
3:      first 25 pred values: tensor([0.6464, 0.6294, 0.6118, 0.5965, 0.5815, 0.5700, 0.5565, 0.5383, 0.5185, 0.5029, 0.4984, 0.5096, 0.5334, 0.5590,
3:         0.5771, 0.5812, 0.5703, 0.5449, 0.5057, 0.4526, 0.3916, 0.3283, 0.2712, 0.2227, 0.1838], device='cuda:0',
3:        grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'total_precip' shape: torch.Size([11237, 243])
3:      first 25 pred values: tensor([-0.2172, -0.2323, -0.2349, -0.2385, -0.2269, -0.2388, -0.2330, -0.2344, -0.2352, -0.2275, -0.2288, -0.2355,
3:         -0.2230, -0.2336, -0.2317, -0.2405, -0.2393, -0.2392, -0.2208, -0.2211, -0.2171, -0.2268, -0.2380, -0.2351,
3:         -0.2456], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 't2m' shape: torch.Size([2429, 2187])
3:      first 25 pred values: tensor([-1.2821, -1.3122, -1.3847, -1.4170, -1.4340, -1.4733, -1.5521, -1.5601, -1.6420, -1.6084, -1.7183, -1.7198,
3:         -1.7194, -1.7574, -1.7645, -1.8095, -1.8740, -1.9201, -1.9194, -1.9154, -1.9026, -1.9592, -1.8812, -1.9077,
3:         -1.8013], device='cuda:0', grad_fn=<SliceBackward0>)
0: epoch: 2 [1/5 (20%)]	Loss: 0.37720 : 0.08603 :: 0.07502 (1.39 s/sec)
0: epoch: 2 [2/5 (40%)]	Loss: 0.39920 : 0.12053 :: 0.07667 (8.18 s/sec)
0: epoch: 2 [3/5 (60%)]	Loss: 0.39128 : 0.09402 :: 0.07378 (8.12 s/sec)
0: epoch: 2 [4/5 (80%)]	Loss: 0.36919 : 0.09113 :: 0.07588 (8.12 s/sec)
0: validation loss for strategy=BERT at epoch 2 : 0.07773599028587341
0: validation loss for velocity_u : 0.00377892074175179
0: validation loss for velocity_v : 0.005153761710971594
0: validation loss for specific_humidity : 0.005718177650123835
0: validation loss for velocity_z : 0.10312537848949432
0: validation loss for temperature : 0.015889272093772888
0: validation loss for total_precip : 0.25773128867149353
0: validation loss for t2m : 0.15275520086288452
0: 3 : 16:28:24 :: batch_size = 96, lr = 1.9512195121951222e-05
1: 3 : 16:28:24 :: batch_size = 96, lr = 1.9512195121951222e-05
2: 3 : 16:28:24 :: batch_size = 96, lr = 1.9512195121951222e-05
3: 3 : 16:28:24 :: batch_size = 96, lr = 1.9512195121951222e-05
0: [DEBUG] TRAIN INPUT BATCH
0: Epoch 3, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([1.3158, 1.3123, 1.3113, 1.3189, 1.3356, 1.3523, 1.3604, 1.3597, 1.3490, 1.3310, 1.3108, 1.2887, 1.2671, 1.2479,
0:         1.2294, 1.2156, 1.2106, 1.2156, 1.3686, 1.3379, 1.3171, 1.3037, 1.2998, 1.2971, 1.2894], device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
0:        device='cuda:0')
0:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([2.5393, 2.4037, 2.3314, 2.3066, 2.2617, 2.0710, 1.7386, 1.4488, 1.0241, 0.7600, 0.4784, 0.2792, 0.1889, 0.1200,
0:         0.0948, 0.1178, 0.2351, 0.4344, 1.6203, 1.3823, 1.2646, 1.2300, 1.1891, 1.1292, 0.9842], device='cuda:0')
0:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([ 0.4106,  0.2376,  0.0921,  0.0007,  0.0018,  0.0789,  0.1054,  0.1098,  0.1109,  0.0491,  0.0194,  0.0425,
0:          0.1109,  0.2707,  0.3445,  0.3004,  0.3070,  0.2508,  0.1450, -0.0313, -0.1239, -0.1382, -0.1250, -0.0258,
0:          0.0580], device='cuda:0')
0:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
0:        device='cuda:0')
0:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([-0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470,
0:         -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470,
0:         -0.2470], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([ 0.1735,  0.1552, -0.0315, -0.0815, -0.0335,  0.0983, -0.0377,  0.0289, -0.0136,  0.0125,  0.0306,  0.1544,
0:         -0.1059, -0.0992, -0.0186, -0.0340,  0.1070, -0.1720, -0.0861,  0.0571,  0.0260,  0.0261, -0.1303,  0.0277,
0:          0.0510], device='cuda:0')
0: [DEBUG] TRAIN TARGET BATCH
0: Epoch 3, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2379, 2187])
0:     First 25 batch values:
0: tensor([-0.5639, -0.5741, -0.5896, -0.6276, -0.6523, -0.7168, -0.7476, -0.7401, -0.7419, -0.7944, -0.8943, -1.0933,
0:         -1.3699, -1.4131, -1.4354, -1.4340, -1.4484, -1.4253, -1.3881, -1.3484, -1.3490, -1.3439, -1.3423, -1.2691,
0:         -1.1955])
0: [DEBUG] TRAIN PREDICTIONS BATCH
0: Epoch 3, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([25985, 972])
0:      first 25 pred values: tensor([-0.6487, -0.6334, -0.6164, -0.6013, -0.5926, -0.5967, -0.6128, -0.6381, -0.6676, -0.6928, -0.7112, -0.7233,
0:         -0.7348, -0.7497, -0.7688, -0.7955, -0.8213, -0.8443, -0.6533, -0.6394, -0.6232, -0.6097, -0.6011, -0.6008,
0:         -0.6111], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([27336, 972])
0:      first 25 pred values: tensor([-0.4052, -0.3825, -0.3458, -0.2928, -0.2328, -0.1727, -0.1186, -0.0715, -0.0316,  0.0075,  0.0471,  0.0845,
0:          0.1165,  0.1366,  0.1420,  0.1326,  0.1142,  0.0910, -0.3894, -0.3746, -0.3484, -0.3080, -0.2616, -0.2130,
0:         -0.1678], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([26085, 972])
0:      first 25 pred values: tensor([-0.4933, -0.5158, -0.5072, -0.4497, -0.3277, -0.1602,  0.0377,  0.2324,  0.3882,  0.4893,  0.5468,  0.5685,
0:          0.5747,  0.5969,  0.6308,  0.6795,  0.7337,  0.7979, -0.4976, -0.4958, -0.4702, -0.3869, -0.2415, -0.0566,
0:          0.1467], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([25863, 972])
0:      first 25 pred values: tensor([ 1.1430e-01,  1.1411e-01,  6.6881e-02,  1.2520e-02, -2.9764e-02, -1.0656e-02,  1.0491e-01,  2.7114e-01,
0:          4.3918e-01,  6.0517e-01,  7.8772e-01,  8.9368e-01,  9.1178e-01,  8.4751e-01,  6.8542e-01,  4.8257e-01,
0:          2.8946e-01,  1.2074e-01,  6.2973e-04, -1.3186e-03, -2.0700e-02, -1.0243e-02,  2.4097e-02,  1.1092e-01,
0:          2.7024e-01], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([11573, 2187])
0:      first 25 pred values: tensor([0.7450, 0.7664, 0.7896, 0.8107, 0.8320, 0.8574, 0.8900, 0.9271, 0.9630, 0.9881, 0.9923, 0.9796, 0.9554, 0.9220,
0:         0.8896, 0.8561, 0.8252, 0.7963, 0.7715, 0.7479, 0.7264, 0.7052, 0.6801, 0.6497, 0.6171], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([10173, 243])
0:      first 25 pred values: tensor([-0.2432, -0.2538, -0.2511, -0.2461, -0.2309, -0.2474, -0.2356, -0.2250, -0.2350, -0.2477, -0.2528, -0.2450,
0:         -0.2433, -0.2382, -0.2356, -0.2424, -0.2328, -0.2327, -0.2392, -0.2368, -0.2395, -0.2466, -0.2533, -0.2446,
0:         -0.2454], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([2379, 2187])
0:      first 25 pred values: tensor([-0.6861, -0.6696, -0.7113, -0.6695, -0.7436, -0.6952, -0.7459, -0.7506, -0.7899, -0.7721, -0.8176, -0.8071,
0:         -0.8361, -0.8231, -0.8410, -0.8473, -0.8588, -0.8647, -0.8949, -0.8753, -0.8561, -0.9195, -0.9374, -0.8799,
0:         -0.8744], device='cuda:0', grad_fn=<SliceBackward0>)
2: [DEBUG] TRAIN INPUT BATCH
2: Epoch 3, first input batch shapes / sample data:
2:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3: [DEBUG] TRAIN INPUT BATCH
3: Epoch 3, first input batch shapes / sample data:
3:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([1.3158, 1.3123, 1.3113, 1.3189, 1.3356, 1.3523, 1.3604, 1.3597, 1.3490, 1.3310, 1.3108, 1.2887, 1.2671, 1.2479,
2:         1.2294, 1.2156, 1.2106, 1.2156, 1.3686, 1.3379, 1.3171, 1.3037, 1.2998, 1.2971, 1.2894], device='cuda:0')
2:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
2:        device='cuda:0')
2:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([2.5393, 2.4037, 2.3314, 2.3066, 2.2617, 2.0710, 1.7386, 1.4488, 1.0241, 0.7600, 0.4784, 0.2792, 0.1889, 0.1200,
2:         0.0948, 0.1178, 0.2351, 0.4344, 1.6203, 1.3823, 1.2646, 1.2300, 1.1891, 1.1292, 0.9842], device='cuda:0')
2:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([ 0.4106,  0.2376,  0.0921,  0.0007,  0.0018,  0.0789,  0.1054,  0.1098,  0.1109,  0.0491,  0.0194,  0.0425,
2:          0.1109,  0.2707,  0.3445,  0.3004,  0.3070,  0.2508,  0.1450, -0.0313, -0.1239, -0.1382, -0.1250, -0.0258,
2:          0.0580], device='cuda:0')
2:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
2:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
2:        device='cuda:0')
2:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
2:      first 25 values: tensor([-0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470,
2:         -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470,
2:         -0.2470], device='cuda:0')
2:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
2:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
2:        device='cuda:0')
2: [DEBUG] TRAIN TARGET BATCH
2: Epoch 3, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2428, 2187])
2:     First 25 batch values:
2: tensor([-1.2735, -1.2646, -1.2544, -1.2701, -1.2943, -1.3263, -1.3704, -1.4191, -1.4005, -1.4251, -1.4994, -1.5758,
2:         -1.5416, -1.5814, -1.6223, -1.6548, -1.6783, -1.6918, -1.6941, -1.7038, -1.7006, -1.7076, -1.7214, -1.7361,
2:         -1.7541])
2: [DEBUG] TRAIN PREDICTIONS BATCH
2: Epoch 3, first predictions sample:
2:   └─ Predictions for 'velocity_u' shape: torch.Size([25476, 972])
2:      first 25 pred values: tensor([0.6646, 0.6487, 0.6362, 0.6258, 0.6086, 0.5802, 0.5441, 0.5062, 0.4751, 0.4549, 0.4456, 0.4393, 0.4324, 0.4208,
2:         0.4033, 0.3882, 0.3795, 0.3777, 0.5906, 0.5774, 0.5718, 0.5628, 0.5406, 0.5053, 0.4593], device='cuda:0',
2:        grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'velocity_v' shape: torch.Size([26509, 972])
2:      first 25 pred values: tensor([-0.7625, -0.8195, -0.8816, -0.9329, -0.9685, -0.9911, -0.9980, -0.9909, -0.9751, -0.9507, -0.9169, -0.8833,
2:         -0.8573, -0.8411, -0.8395, -0.8330, -0.8211, -0.8045, -0.7400, -0.8040, -0.8739, -0.9344, -0.9832, -1.0164,
2:         -1.0392], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'specific_humidity' shape: torch.Size([26198, 972])
2:      first 25 pred values: tensor([ 0.9758,  0.8293,  0.6401,  0.4249,  0.2184,  0.0415, -0.0783, -0.1293, -0.1143, -0.0572,  0.0048,  0.0410,
2:          0.0240, -0.0491, -0.1617, -0.2787, -0.3829, -0.4527,  0.8116,  0.6370,  0.4304,  0.2334,  0.0591, -0.0596,
2:         -0.1213], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'velocity_z' shape: torch.Size([25990, 972])
2:      first 25 pred values: tensor([ 0.1493,  0.1005,  0.0500, -0.0006, -0.0535, -0.1051, -0.1521, -0.1973, -0.2599, -0.3145, -0.3109, -0.2629,
2:         -0.1903, -0.0893,  0.0237,  0.1178,  0.1798,  0.2087,  0.1874,  0.1031,  0.0131, -0.0795, -0.1581, -0.2290,
2:         -0.3046], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'temperature' shape: torch.Size([12092, 2187])
2:      first 25 pred values: tensor([0.4444, 0.4964, 0.5355, 0.5507, 0.5439, 0.5326, 0.5324, 0.5511, 0.5799, 0.6023, 0.6034, 0.5870, 0.5678, 0.5582,
2:         0.5651, 0.5857, 0.6096, 0.6276, 0.6313, 0.6214, 0.6016, 0.5815, 0.5727, 0.5872, 0.6320], device='cuda:0',
2:        grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'total_precip' shape: torch.Size([11306, 243])
2:      first 25 pred values: tensor([-0.1727, -0.1979, -0.2043, -0.2136, -0.2103, -0.2381, -0.2317, -0.2302, -0.2444, -0.1812, -0.1993, -0.2075,
2:         -0.2116, -0.2211, -0.2216, -0.2377, -0.2381, -0.2426, -0.1743, -0.1816, -0.1959, -0.2145, -0.2314, -0.2323,
2:         -0.2407], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 't2m' shape: torch.Size([2428, 2187])
2:      first 25 pred values: tensor([-1.8067, -1.8717, -1.8800, -1.8428, -1.8555, -1.8363, -1.8493, -1.8127, -1.8166, -1.8121, -1.8414, -1.7368,
2:         -1.8210, -1.7593, -1.7868, -1.7550, -1.7232, -1.6656, -1.7164, -1.6876, -1.5756, -1.6249, -1.5801, -1.5344,
2:         -1.5022], device='cuda:0', grad_fn=<SliceBackward0>)
3:      first 25 values: tensor([1.3158, 1.3123, 1.3113, 1.3189, 1.3356, 1.3523, 1.3604, 1.3597, 1.3490, 1.3310, 1.3108, 1.2887, 1.2671, 1.2479,
3:         1.2294, 1.2156, 1.2106, 1.2156, 1.3686, 1.3379, 1.3171, 1.3037, 1.2998, 1.2971, 1.2894], device='cuda:0')
3:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
3:        device='cuda:0')
3:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
3:        device='cuda:0')
3:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([ 0.4106,  0.2376,  0.0921,  0.0007,  0.0018,  0.0789,  0.1054,  0.1098,  0.1109,  0.0491,  0.0194,  0.0425,
3:          0.1109,  0.2707,  0.3445,  0.3004,  0.3070,  0.2508,  0.1450, -0.0313, -0.1239, -0.1382, -0.1250, -0.0258,
3:          0.0580], device='cuda:0')
3:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
3:      first 25 values: tensor([1.1356, 1.0339, 0.9629, 0.8982, 0.8381, 0.7796, 0.7119, 0.6541, 0.6202, 0.6055, 0.6092, 0.6343, 0.6900, 0.7735,
3:         0.8584, 0.9280, 0.9711, 0.9766, 0.9227, 0.8060, 0.6565, 0.5029, 0.3775, 0.3212, 0.3040], device='cuda:0')
3:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
3:      first 25 values: tensor([-0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470,
3:         -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470,
3:         -0.2470], device='cuda:0')
3:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
3:      first 25 values: tensor([-0.8696, -0.8752, -0.8645, -0.8363, -0.8046, -0.7673, -0.7510, -0.7549, -0.7616, -0.7692, -0.8080, -0.8558,
3:         -0.9196, -0.9570, -0.9351, -0.8755, -0.8323, -0.8294, -0.8566, -0.8268, -0.8024, -0.7773, -0.8276, -1.1220,
3:         -1.4238], device='cuda:0')
3: [DEBUG] TRAIN TARGET BATCH
3: Epoch 3, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2429, 2187])
3:     First 25 batch values:
3: tensor([-1.2313, -1.2677, -1.2363, -1.1755, -1.1668, -1.1809, -1.1630, -1.1084, -1.0960, -1.1186, -1.1668, -1.1639,
3:         -1.1228, -1.0911, -1.0231, -1.0213, -1.1011, -1.1530, -1.1955, -1.2066, -1.1821, -1.1580, -1.1335, -1.1272,
3:         -1.1623])
3: [DEBUG] TRAIN PREDICTIONS BATCH
3: Epoch 3, first predictions sample:
3:   └─ Predictions for 'velocity_u' shape: torch.Size([27053, 972])
3:      first 25 pred values: tensor([-1.1748, -1.1992, -1.2200, -1.2394, -1.2563, -1.2677, -1.2651, -1.2524, -1.2248, -1.1937, -1.1654, -1.1468,
3:         -1.1364, -1.1318, -1.1328, -1.1315, -1.1344, -1.1367, -1.1956, -1.2158, -1.2326, -1.2508, -1.2696, -1.2785,
3:         -1.2753], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'velocity_v' shape: torch.Size([26245, 972])
3:      first 25 pred values: tensor([ 0.0500,  0.0131, -0.0264, -0.0636, -0.0974, -0.1262, -0.1462, -0.1543, -0.1537, -0.1421, -0.1179, -0.0822,
3:         -0.0397,  0.0036,  0.0419,  0.0772,  0.1080,  0.1339,  0.0690,  0.0367, -0.0033, -0.0432, -0.0839, -0.1205,
3:         -0.1464], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'specific_humidity' shape: torch.Size([26347, 972])
3:      first 25 pred values: tensor([1.0940, 1.1917, 1.2580, 1.2774, 1.2439, 1.1865, 1.1094, 1.0448, 0.9975, 0.9713, 0.9666, 0.9767, 0.9969, 1.0238,
3:         1.0493, 1.0665, 1.0766, 1.0740, 1.1222, 1.2274, 1.2876, 1.2946, 1.2420, 1.1571, 1.0662], device='cuda:0',
3:        grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'velocity_z' shape: torch.Size([25351, 972])
3:      first 25 pred values: tensor([ 0.1725,  0.1123,  0.1499,  0.2137,  0.2761,  0.2046,  0.0219, -0.2557, -0.6656, -1.0859, -1.4149, -1.6273,
3:         -1.5365, -0.9974, -0.2166,  0.4356,  0.7392,  0.7078,  0.2726,  0.2667,  0.2971,  0.3132,  0.3392,  0.2257,
3:         -0.0638], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'temperature' shape: torch.Size([11711, 2187])
3:      first 25 pred values: tensor([0.6302, 0.6574, 0.6954, 0.7272, 0.7420, 0.7389, 0.7262, 0.7088, 0.6932, 0.6768, 0.6535, 0.6220, 0.5782, 0.5247,
3:         0.4590, 0.3888, 0.3190, 0.2547, 0.1995, 0.1595, 0.1451, 0.1626, 0.2095, 0.2677, 0.3216], device='cuda:0',
3:        grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'total_precip' shape: torch.Size([11237, 243])
3:      first 25 pred values: tensor([-0.2389, -0.2441, -0.2206, -0.2008, -0.1701, -0.1831, -0.1711, -0.1633, -0.1770, -0.2595, -0.2522, -0.2284,
3:         -0.2049, -0.1894, -0.1812, -0.1910, -0.1853, -0.1879, -0.2522, -0.2392, -0.2286, -0.2130, -0.2119, -0.1963,
3:         -0.2030], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 't2m' shape: torch.Size([2429, 2187])
3:      first 25 pred values: tensor([-1.1733, -1.1271, -1.1634, -1.2046, -1.2236, -1.2057, -1.2461, -1.2958, -1.3619, -1.3033, -1.3139, -1.3563,
3:         -1.4312, -1.4409, -1.4364, -1.5230, -1.4893, -1.5257, -1.5736, -1.5787, -1.5468, -1.6313, -1.6047, -1.5574,
3:         -1.5642], device='cuda:0', grad_fn=<SliceBackward0>)
1: [DEBUG] TRAIN INPUT BATCH
1: Epoch 3, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([1.3158, 1.3123, 1.3113, 1.3189, 1.3356, 1.3523, 1.3604, 1.3597, 1.3490, 1.3310, 1.3108, 1.2887, 1.2671, 1.2479,
1:         1.2294, 1.2156, 1.2106, 1.2156, 1.3686, 1.3379, 1.3171, 1.3037, 1.2998, 1.2971, 1.2894], device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([ 0.1865,  0.1232,  0.0608,  0.0136, -0.0138, -0.0241, -0.0225, -0.0165, -0.0127, -0.0174, -0.0323, -0.0564,
1:         -0.0898, -0.1297, -0.1725, -0.2182, -0.2679, -0.3179,  0.1638,  0.0842,  0.0149, -0.0368, -0.0673, -0.0791,
1:         -0.0823], device='cuda:0')
1:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([2.5393, 2.4037, 2.3314, 2.3066, 2.2617, 2.0710, 1.7386, 1.4488, 1.0241, 0.7600, 0.4784, 0.2792, 0.1889, 0.1200,
1:         0.0948, 0.1178, 0.2351, 0.4344, 1.6203, 1.3823, 1.2646, 1.2300, 1.1891, 1.1292, 0.9842], device='cuda:0')
1:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([ 0.4106,  0.2376,  0.0921,  0.0007,  0.0018,  0.0789,  0.1054,  0.1098,  0.1109,  0.0491,  0.0194,  0.0425,
1:          0.1109,  0.2707,  0.3445,  0.3004,  0.3070,  0.2508,  0.1450, -0.0313, -0.1239, -0.1382, -0.1250, -0.0258,
1:          0.0580], device='cuda:0')
1:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([1.1356, 1.0339, 0.9629, 0.8982, 0.8381, 0.7796, 0.7119, 0.6541, 0.6202, 0.6055, 0.6092, 0.6343, 0.6900, 0.7735,
1:         0.8584, 0.9280, 0.9711, 0.9766, 0.9227, 0.8060, 0.6565, 0.5029, 0.3775, 0.3212, 0.3040], device='cuda:0')
1:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
1:      first 25 values: tensor([-0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470,
1:         -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470, -0.2470,
1:         -0.2470], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-0.8696, -0.8752, -0.8645, -0.8363, -0.8046, -0.7673, -0.7510, -0.7549, -0.7616, -0.7692, -0.8080, -0.8558,
1:         -0.9196, -0.9570, -0.9351, -0.8755, -0.8323, -0.8294, -0.8566, -0.8268, -0.8024, -0.7773, -0.8276, -1.1220,
1:         -1.4238], device='cuda:0')
1: [DEBUG] TRAIN TARGET BATCH
1: Epoch 3, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2435, 2187])
1:     First 25 batch values:
1: tensor([-0.1891,  0.0112,  0.2162,  0.3859,  0.4003,  0.4503,  0.5041,  0.5609,  0.5295,  0.6405,  0.9073,  1.2460,
1:          1.4539,  1.6326,  1.5923,  1.4739,  1.4073,  1.4080,  1.4626,  1.5043,  1.5235,  1.3709,  1.1693,  1.0516,
1:          1.0840])
1: [DEBUG] TRAIN PREDICTIONS BATCH
1: Epoch 3, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([26323, 972])
1:      first 25 pred values: tensor([-0.9981, -1.0046, -1.0063, -1.0030, -0.9990, -0.9973, -0.9920, -0.9827, -0.9679, -0.9475, -0.9253, -0.9029,
1:         -0.8839, -0.8733, -0.8691, -0.8723, -0.8761, -0.8779, -1.0510, -1.0604, -1.0555, -1.0491, -1.0421, -1.0323,
1:         -1.0209], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([25316, 972])
1:      first 25 pred values: tensor([-0.3583, -0.2942, -0.2336, -0.1729, -0.1198, -0.0734, -0.0393, -0.0109,  0.0108,  0.0330,  0.0626,  0.0998,
1:          0.1407,  0.1812,  0.2108,  0.2267,  0.2278,  0.2136, -0.3225, -0.2596, -0.2043, -0.1492, -0.1036, -0.0609,
1:         -0.0273], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([25439, 972])
1:      first 25 pred values: tensor([ 0.0361, -0.0238, -0.0878, -0.1662, -0.2451, -0.3163, -0.3727, -0.4055, -0.4276, -0.4475, -0.4572, -0.4551,
1:         -0.4221, -0.3440, -0.2157, -0.0603,  0.1110,  0.2679, -0.0495, -0.0985, -0.1574, -0.2324, -0.3066, -0.3774,
1:         -0.4238], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([26125, 972])
1:      first 25 pred values: tensor([-1.0099, -1.0296, -0.8303, -0.5322, -0.2788, -0.1156, -0.0464, -0.0697, -0.1471, -0.2331, -0.2589, -0.2323,
1:         -0.1986, -0.1445, -0.0823, -0.0399, -0.0258, -0.0238, -0.9291, -0.8762, -0.5823, -0.2200,  0.0190,  0.1177,
1:          0.0921], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([11727, 2187])
1:      first 25 pred values: tensor([2.2836, 2.2503, 2.2006, 2.1479, 2.1088, 2.0928, 2.1048, 2.1384, 2.1784, 2.2106, 2.2246, 2.2167, 2.1939, 2.1620,
1:         2.1228, 2.0776, 2.0220, 1.9578, 1.8801, 1.7839, 1.6643, 1.5179, 1.3440, 1.1421, 0.9257], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([11047, 243])
1:      first 25 pred values: tensor([-0.0940, -0.1205, -0.1325, -0.1282, -0.1048, -0.1296, -0.1099, -0.1050, -0.1047, -0.1088, -0.1278, -0.1194,
1:         -0.1168, -0.1116, -0.1099, -0.1145, -0.1009, -0.1051, -0.1135, -0.1115, -0.1160, -0.1140, -0.1180, -0.1127,
1:         -0.1126], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([2435, 2187])
1:      first 25 pred values: tensor([0.6825, 0.6969, 0.6610, 0.7124, 0.6662, 0.7056, 0.7791, 0.8118, 0.8290, 0.8706, 0.8851, 0.8932, 0.9267, 0.9274,
1:         0.9332, 1.0181, 1.0000, 1.0022, 1.0737, 1.0628, 0.9826, 1.0778, 1.0202, 1.0597, 1.0502], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
0: epoch: 3 [1/5 (20%)]	Loss: 0.37234 : 0.08703 :: 0.07421 (1.51 s/sec)
0: epoch: 3 [2/5 (40%)]	Loss: 0.36673 : 0.07724 :: 0.07594 (8.13 s/sec)
0: epoch: 3 [3/5 (60%)]	Loss: 0.36018 : 0.08345 :: 0.07504 (8.11 s/sec)
0: epoch: 3 [4/5 (80%)]	Loss: 0.35791 : 0.08284 :: 0.07077 (8.12 s/sec)
0: validation loss for strategy=BERT at epoch 3 : 0.07740846276283264
0: validation loss for velocity_u : 0.003763748798519373
0: validation loss for velocity_v : 0.005177494138479233
0: validation loss for specific_humidity : 0.0066879806108772755
0: validation loss for velocity_z : 0.11340829730033875
0: validation loss for temperature : 0.019665148109197617
0: validation loss for total_precip : 0.23310235142707825
0: validation loss for t2m : 0.16005408763885498
0: 4 : 16:35:11 :: batch_size = 96, lr = 1.903628792385485e-05
1: 4 : 16:35:11 :: batch_size = 96, lr = 1.903628792385485e-05
3: 4 : 16:35:11 :: batch_size = 96, lr = 1.903628792385485e-05
2: 4 : 16:35:11 :: batch_size = 96, lr = 1.903628792385485e-05
0: [DEBUG] TRAIN INPUT BATCH
0: Epoch 4, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.4766, -0.4767, -0.4769, -0.4770, -0.4770, -0.4772, -0.4772, -0.4770, -0.4770, -0.4769, -0.4766, -0.4763,
0:         -0.4758, -0.4753, -0.4747, -0.4741, -0.4733, -0.4724, -0.4790, -0.4799, -0.4809, -0.4816, -0.4824, -0.4832,
0:         -0.4838], device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
0:        device='cuda:0')
0:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.6303, -0.6302, -0.6299, -0.6298, -0.6296, -0.6295, -0.6294, -0.6292, -0.6290, -0.6288, -0.6286, -0.6281,
0:         -0.6277, -0.6273, -0.6268, -0.6263, -0.6259, -0.6255, -0.6277, -0.6276, -0.6274, -0.6272, -0.6268, -0.6266,
0:         -0.6263], device='cuda:0')
0:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.0458, -0.0436, -0.0414, -0.0393, -0.0371, -0.0350, -0.0350, -0.0350, -0.0350, -0.0371, -0.0393, -0.0414,
0:         -0.0458, -0.0523, -0.0588, -0.0652, -0.0717, -0.0782, -0.0739, -0.0782, -0.0826, -0.0847, -0.0869, -0.0890,
0:         -0.0912], device='cuda:0')
0:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
0:        device='cuda:0')
0:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([-0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290,
0:         -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290,
0:         -0.2290], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([ 0.0646,  0.0889,  0.1479,  0.1165, -0.0481, -0.2806, -0.1722,  0.1814, -0.1998,  0.0828, -0.0968, -0.0028,
0:         -0.2043, -0.1194, -0.0769,  0.1727,  0.1058, -0.0142, -0.0916, -0.0627,  0.0662,  0.2947,  0.1477, -0.0284,
0:         -0.0267], device='cuda:0')
0: [DEBUG] TRAIN TARGET BATCH
0: Epoch 4, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2379, 2187])
0:     First 25 batch values:
0: tensor([ 0.2998,  0.2673,  0.2305,  0.2001,  0.1701,  0.1405,  0.1164,  0.1075,  0.1141,  0.1193,  0.1230,  0.1135,
0:          0.0974,  0.0774,  0.0577,  0.0389,  0.0298, -0.0187, -0.0839, -0.1538, -0.2055, -0.1894, -0.1343, -0.0693,
0:          0.0020])
0: [DEBUG] TRAIN PREDICTIONS BATCH
0: Epoch 4, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([25985, 972])
0:      first 25 pred values: tensor([-0.9928, -0.9920, -0.9986, -1.0091, -1.0165, -1.0187, -1.0203, -1.0197, -1.0185, -1.0254, -1.0389, -1.0568,
0:         -1.0778, -1.0969, -1.1120, -1.1264, -1.1335, -1.1383, -1.0009, -1.0012, -1.0067, -1.0178, -1.0263, -1.0338,
0:         -1.0361], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([27336, 972])
0:      first 25 pred values: tensor([-0.0818, -0.0920, -0.0990, -0.0974, -0.0887, -0.0730, -0.0524, -0.0348, -0.0165,  0.0065,  0.0353,  0.0681,
0:          0.1042,  0.1341,  0.1575,  0.1766,  0.1972,  0.2185, -0.1319, -0.1484, -0.1603, -0.1640, -0.1568, -0.1408,
0:         -0.1201], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([26085, 972])
0:      first 25 pred values: tensor([-0.6278, -0.6321, -0.6354, -0.6357, -0.6366, -0.6381, -0.6382, -0.6374, -0.6375, -0.6399, -0.6412, -0.6430,
0:         -0.6458, -0.6448, -0.6430, -0.6399, -0.6380, -0.6316, -0.6287, -0.6317, -0.6341, -0.6333, -0.6329, -0.6337,
0:         -0.6317], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([25863, 972])
0:      first 25 pred values: tensor([-0.1992, -0.2033, -0.1919, -0.1867, -0.1804, -0.1523, -0.1252, -0.1080, -0.0548,  0.0034,  0.0193,  0.0376,
0:          0.0679,  0.0591,  0.0527,  0.0725,  0.0577,  0.0406, -0.2799, -0.2823, -0.2515, -0.2173, -0.1986, -0.1828,
0:         -0.1600], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([11573, 2187])
0:      first 25 pred values: tensor([-0.1000, -0.1123, -0.1211, -0.1284, -0.1331, -0.1359, -0.1366, -0.1357, -0.1343, -0.1330, -0.1316, -0.1324,
0:         -0.1312, -0.1265, -0.1196, -0.1110, -0.1040, -0.1010, -0.1007, -0.0997, -0.0962, -0.0895, -0.0819, -0.0743,
0:         -0.0700], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([10173, 243])
0:      first 25 pred values: tensor([0.0715, 0.0675, 0.0965, 0.1052, 0.1208, 0.1137, 0.1361, 0.1409, 0.1292, 0.0833, 0.0963, 0.1136, 0.1135, 0.1330,
0:         0.1448, 0.1378, 0.1435, 0.1420, 0.1046, 0.1208, 0.1226, 0.1246, 0.1262, 0.1384, 0.1428], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([2379, 2187])
0:      first 25 pred values: tensor([0.5042, 0.5321, 0.5163, 0.4921, 0.4822, 0.4565, 0.4331, 0.4814, 0.4633, 0.5031, 0.4182, 0.4076, 0.4087, 0.4001,
0:         0.3957, 0.3908, 0.4039, 0.4064, 0.3653, 0.3224, 0.3657, 0.3068, 0.3073, 0.3153, 0.2938], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
1: [DEBUG] TRAIN INPUT BATCH
1: Epoch 4, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.4766, -0.4767, -0.4769, -0.4770, -0.4770, -0.4772, -0.4772, -0.4770, -0.4770, -0.4769, -0.4766, -0.4763,
1:         -0.4758, -0.4753, -0.4747, -0.4741, -0.4733, -0.4724, -0.4790, -0.4799, -0.4809, -0.4816, -0.4824, -0.4832,
1:         -0.4838], device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([0.9576, 0.9597, 0.9615, 0.9631, 0.9648, 0.9660, 0.9672, 0.9682, 0.9692, 0.9701, 0.9709, 0.9715, 0.9721, 0.9727,
1:         0.9733, 0.9739, 0.9743, 0.9749, 0.9169, 0.9198, 0.9224, 0.9249, 0.9271, 0.9294, 0.9312], device='cuda:0')
1:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.6303, -0.6302, -0.6299, -0.6298, -0.6296, -0.6295, -0.6294, -0.6292, -0.6290, -0.6288, -0.6286, -0.6281,
1:         -0.6277, -0.6273, -0.6268, -0.6263, -0.6259, -0.6255, -0.6277, -0.6276, -0.6274, -0.6272, -0.6268, -0.6266,
1:         -0.6263], device='cuda:0')
1:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.0458, -0.0436, -0.0414, -0.0393, -0.0371, -0.0350, -0.0350, -0.0350, -0.0350, -0.0371, -0.0393, -0.0414,
1:         -0.0458, -0.0523, -0.0588, -0.0652, -0.0717, -0.0782, -0.0739, -0.0782, -0.0826, -0.0847, -0.0869, -0.0890,
1:         -0.0912], device='cuda:0')
1:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-0.6963, -0.6846, -0.6730, -0.6609, -0.6490, -0.6371, -0.6250, -0.6128, -0.6012, -0.5894, -0.5776, -0.5664,
1:         -0.5551, -0.5444, -0.5338, -0.5237, -0.5135, -0.5043, -0.4950, -0.4862, -0.4784, -0.4705, -0.4635, -0.4570,
1:         -0.4512], device='cuda:0')
1:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
1:      first 25 values: tensor([-0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290,
1:         -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290,
1:         -0.2290], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-0.8884, -0.8877, -0.8864, -0.8848, -0.8832, -0.8813, -0.8798, -0.8774, -0.8749, -0.8721, -0.8700, -0.8687,
1:         -0.8673, -0.8657, -0.8640, -0.8622, -0.8601, -0.8581, -0.8588, -0.8595, -0.8603, -0.8655, -0.8700, -0.8751,
1:         -0.8794], device='cuda:0')
1: [DEBUG] TRAIN TARGET BATCH
1: Epoch 4, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2435, 2187])
1:     First 25 batch values:
1: tensor([-0.2576, -0.2458, -0.2345, -0.2398, -0.2445, -0.2497, -0.2569, -0.2645, -0.2703, -0.2756, -0.2815, -0.2910,
1:         -0.3064, -0.3276, -0.3490, -0.3709, -0.3898, -0.4135, -0.4406, -0.4682, -0.4957, -0.5250, -0.5450, -0.5619,
1:         -0.5789])
1: [DEBUG] TRAIN PREDICTIONS BATCH
1: Epoch 4, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([26323, 972])
1:      first 25 pred values: tensor([-0.8521, -0.8655, -0.8800, -0.8967, -0.9109, -0.9254, -0.9387, -0.9496, -0.9622, -0.9743, -0.9897, -1.0073,
1:         -1.0259, -1.0444, -1.0611, -1.0773, -1.0892, -1.1007, -0.8064, -0.8191, -0.8343, -0.8513, -0.8673, -0.8810,
1:         -0.8964], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([25316, 972])
1:      first 25 pred values: tensor([1.0867, 1.0318, 0.9830, 0.9419, 0.9088, 0.8813, 0.8535, 0.8263, 0.7968, 0.7699, 0.7464, 0.7285, 0.7162, 0.7048,
1:         0.6934, 0.6848, 0.6813, 0.6784, 1.0911, 1.0409, 0.9934, 0.9534, 0.9184, 0.8902, 0.8631], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([25439, 972])
1:      first 25 pred values: tensor([-0.5064, -0.5039, -0.5023, -0.5008, -0.5036, -0.5057, -0.5083, -0.5093, -0.5096, -0.5093, -0.5089, -0.5109,
1:         -0.5135, -0.5165, -0.5198, -0.5214, -0.5242, -0.5247, -0.5031, -0.5012, -0.5001, -0.5003, -0.5037, -0.5070,
1:         -0.5085], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([26125, 972])
1:      first 25 pred values: tensor([ 0.1399,  0.1534,  0.1613,  0.1319,  0.1283,  0.1765,  0.1760,  0.1649,  0.1849,  0.1478,  0.0641,  0.0088,
1:         -0.0586, -0.1546, -0.2270, -0.2722, -0.3096, -0.3374,  0.0961,  0.1975,  0.2894,  0.3230,  0.3394,  0.3745,
1:          0.3765], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([11727, 2187])
1:      first 25 pred values: tensor([2.6324, 2.6204, 2.6093, 2.6031, 2.6010, 2.5972, 2.5910, 2.5798, 2.5679, 2.5614, 2.5629, 2.5680, 2.5723, 2.5723,
1:         2.5675, 2.5592, 2.5503, 2.5400, 2.5268, 2.5109, 2.4923, 2.4755, 2.4619, 2.4514, 2.4405], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([11047, 243])
1:      first 25 pred values: tensor([-0.2260, -0.2340, -0.2351, -0.2379, -0.2343, -0.2405, -0.2294, -0.2212, -0.2265, -0.2364, -0.2370, -0.2347,
1:         -0.2414, -0.2331, -0.2331, -0.2303, -0.2281, -0.2257, -0.2338, -0.2303, -0.2379, -0.2408, -0.2391, -0.2341,
1:         -0.2270], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([2435, 2187])
1:      first 25 pred values: tensor([-0.3432, -0.3201, -0.3318, -0.3434, -0.3842, -0.4309, -0.4013, -0.3850, -0.3981, -0.3527, -0.3935, -0.4008,
1:         -0.4351, -0.4067, -0.4004, -0.3899, -0.4323, -0.3364, -0.3967, -0.4427, -0.4377, -0.4227, -0.4343, -0.4008,
1:         -0.4373], device='cuda:0', grad_fn=<SliceBackward0>)
3: [DEBUG] TRAIN INPUT BATCH
3: Epoch 4, first input batch shapes / sample data:
3:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([-0.4766, -0.4767, -0.4769, -0.4770, -0.4770, -0.4772, -0.4772, -0.4770, -0.4770, -0.4769, -0.4766, -0.4763,
3:         -0.4758, -0.4753, -0.4747, -0.4741, -0.4733, -0.4724, -0.4790, -0.4799, -0.4809, -0.4816, -0.4824, -0.4832,
3:         -0.4838], device='cuda:0')
3:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
3:        device='cuda:0')
3:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
3:        device='cuda:0')
3:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([-0.0458, -0.0436, -0.0414, -0.0393, -0.0371, -0.0350, -0.0350, -0.0350, -0.0350, -0.0371, -0.0393, -0.0414,
3:         -0.0458, -0.0523, -0.0588, -0.0652, -0.0717, -0.0782, -0.0739, -0.0782, -0.0826, -0.0847, -0.0869, -0.0890,
3:         -0.0912], device='cuda:0')
3:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
3:      first 25 values: tensor([-0.6963, -0.6846, -0.6730, -0.6609, -0.6490, -0.6371, -0.6250, -0.6128, -0.6012, -0.5894, -0.5776, -0.5664,
3:         -0.5551, -0.5444, -0.5338, -0.5237, -0.5135, -0.5043, -0.4950, -0.4862, -0.4784, -0.4705, -0.4635, -0.4570,
3:         -0.4512], device='cuda:0')
3:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
3:      first 25 values: tensor([-0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290,
3:         -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290,
3:         -0.2290], device='cuda:0')
3:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
3:      first 25 values: tensor([-0.8884, -0.8877, -0.8864, -0.8848, -0.8832, -0.8813, -0.8798, -0.8774, -0.8749, -0.8721, -0.8700, -0.8687,
3:         -0.8673, -0.8657, -0.8640, -0.8622, -0.8601, -0.8581, -0.8588, -0.8595, -0.8603, -0.8655, -0.8700, -0.8751,
3:         -0.8794], device='cuda:0')
3: [DEBUG] TRAIN TARGET BATCH
3: Epoch 4, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2429, 2187])
3:     First 25 batch values:
3: tensor([-0.7704, -0.7776, -0.7853, -0.7937, -0.7984, -0.8025, -0.8073, -0.8113, -0.8158, -0.8203, -0.8249, -0.8356,
3:         -0.8484, -0.8617, -0.8715, -0.8819, -0.8914, -0.9009, -0.9109, -0.9208, -0.9299, -0.9396, -0.9482, -0.9572,
3:         -0.9649])
3: [DEBUG] TRAIN PREDICTIONS BATCH
3: Epoch 4, first predictions sample:
3:   └─ Predictions for 'velocity_u' shape: torch.Size([27053, 972])
3:      first 25 pred values: tensor([ 0.1796,  0.1851,  0.1876,  0.1842,  0.1761,  0.1614,  0.1427,  0.1221,  0.0990,  0.0763,  0.0516,  0.0235,
3:         -0.0037, -0.0316, -0.0583, -0.0808, -0.0984, -0.1134,  0.1260,  0.1284,  0.1297,  0.1267,  0.1213,  0.1142,
3:          0.1020], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'velocity_v' shape: torch.Size([26245, 972])
3:      first 25 pred values: tensor([-0.1465, -0.1605, -0.1693, -0.1781, -0.1788, -0.1746, -0.1709, -0.1613, -0.1492, -0.1310, -0.1033, -0.0677,
3:         -0.0272,  0.0156,  0.0588,  0.1010,  0.1381,  0.1631, -0.2223, -0.2320, -0.2368, -0.2377, -0.2362, -0.2284,
3:         -0.2179], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'specific_humidity' shape: torch.Size([26347, 972])
3:      first 25 pred values: tensor([-0.6094, -0.6147, -0.6199, -0.6238, -0.6287, -0.6335, -0.6381, -0.6411, -0.6429, -0.6470, -0.6477, -0.6485,
3:         -0.6509, -0.6514, -0.6520, -0.6507, -0.6504, -0.6481, -0.6170, -0.6225, -0.6297, -0.6333, -0.6375, -0.6410,
3:         -0.6438], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'velocity_z' shape: torch.Size([25351, 972])
3:      first 25 pred values: tensor([0.6883, 0.7126, 0.7166, 0.6813, 0.6525, 0.6561, 0.6702, 0.6811, 0.7057, 0.7448, 0.7713, 0.7960, 0.7894, 0.7403,
3:         0.7491, 0.7810, 0.7503, 0.7283, 0.6565, 0.6715, 0.6799, 0.6658, 0.6525, 0.6417, 0.6383], device='cuda:0',
3:        grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'temperature' shape: torch.Size([11711, 2187])
3:      first 25 pred values: tensor([2.2839, 2.2560, 2.2320, 2.2132, 2.1952, 2.1751, 2.1503, 2.1230, 2.0957, 2.0716, 2.0515, 2.0340, 2.0160, 1.9949,
3:         1.9712, 1.9479, 1.9259, 1.9067, 1.8877, 1.8652, 1.8408, 1.8159, 1.7918, 1.7692, 1.7464], device='cuda:0',
3:        grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'total_precip' shape: torch.Size([11237, 243])
3:      first 25 pred values: tensor([-0.2205, -0.2253, -0.2241, -0.2243, -0.2218, -0.2281, -0.2161, -0.2102, -0.2117, -0.2179, -0.2224, -0.2199,
3:         -0.2254, -0.2156, -0.2160, -0.2150, -0.2145, -0.2120, -0.2119, -0.2096, -0.2171, -0.2163, -0.2180, -0.2161,
3:         -0.2076], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 't2m' shape: torch.Size([2429, 2187])
3:      first 25 pred values: tensor([-0.5554, -0.5238, -0.4803, -0.5523, -0.5138, -0.5153, -0.5373, -0.5013, -0.5191, -0.4934, -0.5174, -0.5279,
3:         -0.5584, -0.5140, -0.4789, -0.4934, -0.5240, -0.4721, -0.5078, -0.5214, -0.4757, -0.5867, -0.4967, -0.4882,
3:         -0.4910], device='cuda:0', grad_fn=<SliceBackward0>)
2: [DEBUG] TRAIN INPUT BATCH
2: Epoch 4, first input batch shapes / sample data:
2:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([-0.4766, -0.4767, -0.4769, -0.4770, -0.4770, -0.4772, -0.4772, -0.4770, -0.4770, -0.4769, -0.4766, -0.4763,
2:         -0.4758, -0.4753, -0.4747, -0.4741, -0.4733, -0.4724, -0.4790, -0.4799, -0.4809, -0.4816, -0.4824, -0.4832,
2:         -0.4838], device='cuda:0')
2:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
2:        device='cuda:0')
2:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([-0.6303, -0.6302, -0.6299, -0.6298, -0.6296, -0.6295, -0.6294, -0.6292, -0.6290, -0.6288, -0.6286, -0.6281,
2:         -0.6277, -0.6273, -0.6268, -0.6263, -0.6259, -0.6255, -0.6277, -0.6276, -0.6274, -0.6272, -0.6268, -0.6266,
2:         -0.6263], device='cuda:0')
2:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([-0.0458, -0.0436, -0.0414, -0.0393, -0.0371, -0.0350, -0.0350, -0.0350, -0.0350, -0.0371, -0.0393, -0.0414,
2:         -0.0458, -0.0523, -0.0588, -0.0652, -0.0717, -0.0782, -0.0739, -0.0782, -0.0826, -0.0847, -0.0869, -0.0890,
2:         -0.0912], device='cuda:0')
2:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
2:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
2:        device='cuda:0')
2:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
2:      first 25 values: tensor([-0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290,
2:         -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290, -0.2290,
2:         -0.2290], device='cuda:0')
2:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
2:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
2:        device='cuda:0')
2: [DEBUG] TRAIN TARGET BATCH
2: Epoch 4, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2428, 2187])
2:     First 25 batch values:
2: tensor([-0.1532, -0.1572, -0.1611, -0.1650, -0.1687, -0.1715, -0.1752, -0.1780, -0.1812, -0.1843, -0.1881, -0.1912,
2:         -0.1943, -0.1972, -0.1982, -0.1894, -0.1812, -0.1733, -0.1687, -0.1633, -0.1587, -0.1539, -0.1485, -0.1436,
2:         -0.1388])
2: [DEBUG] TRAIN PREDICTIONS BATCH
2: Epoch 4, first predictions sample:
2:   └─ Predictions for 'velocity_u' shape: torch.Size([25476, 972])
2:      first 25 pred values: tensor([-0.6190, -0.6173, -0.6158, -0.6152, -0.6148, -0.6133, -0.6100, -0.6054, -0.6004, -0.5965, -0.5918, -0.5889,
2:         -0.5842, -0.5787, -0.5715, -0.5618, -0.5519, -0.5431, -0.5914, -0.5893, -0.5887, -0.5913, -0.5923, -0.5922,
2:         -0.5901], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'velocity_v' shape: torch.Size([26509, 972])
2:      first 25 pred values: tensor([1.2773, 1.2583, 1.2497, 1.2465, 1.2464, 1.2465, 1.2387, 1.2248, 1.2117, 1.1990, 1.1883, 1.1797, 1.1732, 1.1654,
2:         1.1578, 1.1476, 1.1416, 1.1359, 1.2787, 1.2666, 1.2624, 1.2639, 1.2643, 1.2647, 1.2593], device='cuda:0',
2:        grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'specific_humidity' shape: torch.Size([26198, 972])
2:      first 25 pred values: tensor([-0.5989, -0.5966, -0.5932, -0.5914, -0.5911, -0.5906, -0.5921, -0.5918, -0.5894, -0.5911, -0.5893, -0.5884,
2:         -0.5882, -0.5874, -0.5880, -0.5884, -0.5907, -0.5921, -0.5992, -0.5951, -0.5942, -0.5933, -0.5915, -0.5911,
2:         -0.5907], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'velocity_z' shape: torch.Size([25990, 972])
2:      first 25 pred values: tensor([0.1502, 0.1639, 0.1838, 0.1801, 0.1556, 0.1443, 0.1364, 0.1245, 0.1507, 0.1798, 0.1717, 0.1670, 0.1521, 0.1095,
2:         0.1115, 0.1318, 0.1111, 0.0979, 0.1331, 0.1318, 0.1387, 0.1356, 0.1239, 0.1186, 0.1228], device='cuda:0',
2:        grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'temperature' shape: torch.Size([12092, 2187])
2:      first 25 pred values: tensor([-0.0089,  0.0064,  0.0184,  0.0273,  0.0347,  0.0426,  0.0544,  0.0699,  0.0848,  0.0991,  0.1117,  0.1235,
2:          0.1357,  0.1480,  0.1613,  0.1736,  0.1857,  0.1960,  0.2044,  0.2140,  0.2235,  0.2348,  0.2445,  0.2523,
2:          0.2613], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'total_precip' shape: torch.Size([11306, 243])
2:      first 25 pred values: tensor([-0.2274, -0.2320, -0.2349, -0.2317, -0.2309, -0.2385, -0.2276, -0.2235, -0.2262, -0.2370, -0.2367, -0.2339,
2:         -0.2396, -0.2300, -0.2294, -0.2314, -0.2296, -0.2272, -0.2313, -0.2297, -0.2330, -0.2364, -0.2365, -0.2352,
2:         -0.2257], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 't2m' shape: torch.Size([2428, 2187])
2:      first 25 pred values: tensor([-0.3156, -0.2684, -0.2812, -0.2733, -0.2975, -0.2540, -0.2809, -0.2649, -0.2807, -0.2623, -0.2269, -0.1827,
2:         -0.2179, -0.2097, -0.1924, -0.1335, -0.1710, -0.1319, -0.1769, -0.1681, -0.1129, -0.1481, -0.1660, -0.1315,
2:         -0.1158], device='cuda:0', grad_fn=<SliceBackward0>)
0: epoch: 4 [1/5 (20%)]	Loss: 0.38498 : 0.10685 :: 0.07281 (1.36 s/sec)
0: epoch: 4 [2/5 (40%)]	Loss: 0.35718 : 0.09211 :: 0.06767 (8.09 s/sec)
0: epoch: 4 [3/5 (60%)]	Loss: 0.35386 : 0.08467 :: 0.07066 (8.11 s/sec)
0: epoch: 4 [4/5 (80%)]	Loss: 0.35657 : 0.06841 :: 0.06963 (8.11 s/sec)
0: validation loss for strategy=BERT at epoch 4 : 0.08929917216300964
0: validation loss for velocity_u : 0.003658497706055641
0: validation loss for velocity_v : 0.005037107039242983
0: validation loss for specific_humidity : 0.00656006159260869
0: validation loss for velocity_z : 0.116266168653965
0: validation loss for temperature : 0.019349856302142143
0: validation loss for total_precip : 0.32248610258102417
0: validation loss for t2m : 0.15173640847206116
0: 5 : 16:42:10 :: batch_size = 96, lr = 1.857198821839498e-05
1: 5 : 16:42:10 :: batch_size = 96, lr = 1.857198821839498e-05
2: 5 : 16:42:10 :: batch_size = 96, lr = 1.857198821839498e-05
3: 5 : 16:42:10 :: batch_size = 96, lr = 1.857198821839498e-05
0: [DEBUG] TRAIN INPUT BATCH
0: Epoch 5, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([2.1314, 2.2242, 2.3113, 2.3864, 2.4477, 2.4963, 2.5329, 2.5576, 2.5730, 2.5827, 2.5895, 2.5943, 2.5990, 2.6079,
0:         2.6230, 2.6433, 2.6656, 2.6878, 2.0733, 2.1382, 2.2138, 2.2910, 2.3639, 2.4295, 2.4862], device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
0:        device='cuda:0')
0:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([ 0.0008,  0.0059,  0.0114,  0.0165,  0.0186,  0.0216,  0.0251,  0.0263,  0.0277,  0.0282,  0.0280,  0.0290,
0:          0.0316,  0.0362,  0.0402,  0.0464,  0.0529,  0.0598, -0.0201, -0.0153, -0.0104, -0.0057, -0.0034, -0.0003,
0:          0.0020], device='cuda:0')
0:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-3.4092, -3.1315, -2.7700, -2.3667, -1.9479, -1.5336, -1.1567, -0.8503, -0.6410, -0.5352, -0.5220, -0.5616,
0:         -0.6013, -0.5969, -0.5352, -0.4250, -0.2949, -0.1781, -3.3761, -3.4356, -3.3585, -3.1579, -2.8626, -2.5099,
0:         -2.1419], device='cuda:0')
0:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
0:        device='cuda:0')
0:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([-0.2006, -0.1823, -0.1595, -0.1195, -0.1046, -0.0623,  0.0245,  0.1684,  0.2610, -0.2383, -0.2337, -0.2166,
0:         -0.2086, -0.1949, -0.1754, -0.1355, -0.0932, -0.0166, -0.2497, -0.2474, -0.2463, -0.2417, -0.2383, -0.2269,
0:         -0.2189], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([-3.0962e-02,  8.7496e-02,  1.9622e-04,  1.5754e-02, -2.8256e-03,  1.7402e-02,  1.9221e-01,  2.3649e-02,
0:          9.0621e-02, -6.0905e-02,  2.3640e-01,  6.6657e-02,  4.1981e-02,  1.2178e-01,  7.8128e-02,  4.8879e-02,
0:         -6.2130e-02,  6.1270e-03,  8.0320e-02,  1.5173e-02,  6.9514e-02,  4.1734e-03, -1.3537e-01, -2.1443e-02,
0:         -2.7641e-02], device='cuda:0')
0: [DEBUG] TRAIN TARGET BATCH
0: Epoch 5, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2379, 2187])
0:     First 25 batch values:
0: tensor([-1.0810, -1.0868, -1.0637, -1.0333, -1.0139, -0.9805, -0.9543, -0.9325, -0.9084, -0.8885, -0.8634, -0.8306,
0:         -0.7845, -0.7368, -0.6939, -0.6515, -0.6099, -0.5610, -0.5331, -0.5163, -0.5209, -0.5371, -0.5442, -0.5139,
0:         -0.4664])
0: [DEBUG] TRAIN PREDICTIONS BATCH
0: Epoch 5, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([25985, 972])
0:      first 25 pred values: tensor([2.0196, 2.0335, 2.0460, 2.0564, 2.0650, 2.0769, 2.0884, 2.0974, 2.1050, 2.1170, 2.1325, 2.1517, 2.1737, 2.1930,
0:         2.2154, 2.2387, 2.2666, 2.2992, 2.1072, 2.1263, 2.1392, 2.1530, 2.1679, 2.1870, 2.2050], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([27336, 972])
0:      first 25 pred values: tensor([0.4420, 0.4283, 0.4192, 0.4070, 0.3945, 0.3763, 0.3589, 0.3434, 0.3347, 0.3321, 0.3334, 0.3345, 0.3354, 0.3315,
0:         0.3292, 0.3283, 0.3372, 0.3547, 0.3999, 0.4003, 0.4009, 0.3997, 0.3951, 0.3880, 0.3806], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([26085, 972])
0:      first 25 pred values: tensor([-0.2052, -0.2098, -0.2199, -0.2338, -0.2424, -0.2494, -0.2480, -0.2493, -0.2481, -0.2448, -0.2386, -0.2279,
0:         -0.2102, -0.1932, -0.1741, -0.1600, -0.1499, -0.1466, -0.2974, -0.3003, -0.3050, -0.3108, -0.3134, -0.3139,
0:         -0.3098], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([25863, 972])
0:      first 25 pred values: tensor([0.3377, 0.3354, 0.3865, 0.4807, 0.5790, 0.6095, 0.6431, 0.7139, 0.7928, 0.9007, 0.9702, 1.0325, 1.1177, 1.1958,
0:         1.2812, 1.3376, 1.3359, 1.3476, 0.4772, 0.4427, 0.4764, 0.5588, 0.6724, 0.7004, 0.7272], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([11573, 2187])
0:      first 25 pred values: tensor([1.0451, 1.0401, 1.0343, 1.0290, 1.0243, 1.0224, 1.0240, 1.0291, 1.0358, 1.0418, 1.0447, 1.0437, 1.0426, 1.0418,
0:         1.0438, 1.0460, 1.0459, 1.0436, 1.0403, 1.0369, 1.0334, 1.0297, 1.0251, 1.0219, 1.0196], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([10173, 243])
0:      first 25 pred values: tensor([-0.2388, -0.2333, -0.2391, -0.2412, -0.2459, -0.2508, -0.2461, -0.2505, -0.2514, -0.2452, -0.2378, -0.2403,
0:         -0.2465, -0.2476, -0.2484, -0.2498, -0.2529, -0.2520, -0.2449, -0.2467, -0.2460, -0.2463, -0.2494, -0.2482,
0:         -0.2548], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([2379, 2187])
0:      first 25 pred values: tensor([-1.0181, -0.9922, -1.0662, -1.0247, -1.0610, -1.0478, -1.0577, -1.0516, -1.0421, -1.0290, -1.0488, -1.0523,
0:         -1.0460, -0.9987, -1.0154, -0.9929, -0.9720, -0.9463, -1.0040, -0.9962, -1.0147, -0.8879, -0.8921, -0.8106,
0:         -0.8015], device='cuda:0', grad_fn=<SliceBackward0>)
3: [DEBUG] TRAIN INPUT BATCH
3: Epoch 5, first input batch shapes / sample data:
3:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([2.1314, 2.2242, 2.3113, 2.3864, 2.4477, 2.4963, 2.5329, 2.5576, 2.5730, 2.5827, 2.5895, 2.5943, 2.5990, 2.6079,
3:         2.6230, 2.6433, 2.6656, 2.6878, 2.0733, 2.1382, 2.2138, 2.2910, 2.3639, 2.4295, 2.4862], device='cuda:0')
3:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
3:        device='cuda:0')
3:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
3:        device='cuda:0')
3:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([-3.4092, -3.1315, -2.7700, -2.3667, -1.9479, -1.5336, -1.1567, -0.8503, -0.6410, -0.5352, -0.5220, -0.5616,
3:         -0.6013, -0.5969, -0.5352, -0.4250, -0.2949, -0.1781, -3.3761, -3.4356, -3.3585, -3.1579, -2.8626, -2.5099,
3:         -2.1419], device='cuda:0')
3:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
3:      first 25 values: tensor([0.9749, 0.9832, 0.9911, 0.9978, 1.0028, 1.0067, 1.0102, 1.0126, 1.0127, 1.0109, 1.0074, 1.0032, 0.9999, 0.9990,
3:         1.0015, 1.0070, 1.0145, 1.0227, 1.0316, 1.0407, 1.0491, 1.0565, 1.0623, 1.0668, 1.0701], device='cuda:0')
3:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
3:      first 25 values: tensor([-0.2006, -0.1823, -0.1595, -0.1195, -0.1046, -0.0623,  0.0245,  0.1684,  0.2610, -0.2383, -0.2337, -0.2166,
3:         -0.2086, -0.1949, -0.1754, -0.1355, -0.0932, -0.0166, -0.2497, -0.2474, -0.2463, -0.2417, -0.2383, -0.2269,
3:         -0.2189], device='cuda:0')
3:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
3:      first 25 values: tensor([-0.6146, -0.6100, -0.6019, -0.5841, -0.5685, -0.5443, -0.5195, -0.4910, -0.4592, -0.4055, -0.3520, -0.3096,
3:         -0.2750, -0.2419, -0.2046, -0.1780, -0.1599, -0.1596, -0.1853, -0.2022, -0.2091, -0.2205, -0.2273, -0.2208,
3:         -0.2054], device='cuda:0')
3: [DEBUG] TRAIN TARGET BATCH
3: Epoch 5, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2429, 2187])
3:     First 25 batch values:
3: tensor([-0.2315, -0.2119, -0.2178, -0.1971, -0.1528, -0.1121, -0.0801, -0.0591, -0.0502, -0.0438, -0.0169,  0.0105,
3:          0.0266,  0.0185,  0.0195,  0.0070,  0.0173,  0.0570,  0.1014,  0.1592,  0.2030,  0.2412,  0.2660,  0.2771,
3:          0.2763])
3: [DEBUG] TRAIN PREDICTIONS BATCH
3: Epoch 5, first predictions sample:
3:   └─ Predictions for 'velocity_u' shape: torch.Size([27053, 972])
3:      first 25 pred values: tensor([1.7910, 1.8116, 1.8265, 1.8461, 1.8700, 1.8967, 1.9325, 1.9648, 1.9969, 2.0269, 2.0571, 2.0897, 2.1234, 2.1604,
3:         2.1938, 2.2253, 2.2505, 2.2700, 1.9615, 1.9827, 2.0050, 2.0229, 2.0400, 2.0667, 2.1008], device='cuda:0',
3:        grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'velocity_v' shape: torch.Size([26245, 972])
3:      first 25 pred values: tensor([0.1816, 0.2385, 0.2980, 0.3452, 0.3903, 0.4392, 0.4953, 0.5539, 0.6175, 0.6788, 0.7326, 0.7806, 0.8347, 0.8903,
3:         0.9530, 1.0179, 1.0677, 1.0986, 0.2743, 0.3236, 0.3770, 0.4242, 0.4662, 0.5074, 0.5594], device='cuda:0',
3:        grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'specific_humidity' shape: torch.Size([26347, 972])
3:      first 25 pred values: tensor([-0.0743, -0.0679, -0.0652, -0.0612, -0.0591, -0.0521, -0.0484, -0.0467, -0.0501, -0.0517, -0.0560, -0.0574,
3:         -0.0559, -0.0544, -0.0572, -0.0628, -0.0692, -0.0773, -0.0902, -0.0899, -0.0870, -0.0869, -0.0830, -0.0779,
3:         -0.0747], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'velocity_z' shape: torch.Size([25351, 972])
3:      first 25 pred values: tensor([0.9047, 0.8522, 0.8193, 0.8445, 0.8622, 0.8725, 0.8650, 0.8513, 0.8264, 0.7993, 0.7805, 0.7728, 0.8050, 0.8560,
3:         0.9103, 1.0064, 1.1210, 1.2806, 0.7587, 0.6818, 0.6490, 0.6884, 0.7325, 0.7639, 0.7643], device='cuda:0',
3:        grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'temperature' shape: torch.Size([11711, 2187])
3:      first 25 pred values: tensor([0.7259, 0.7332, 0.7344, 0.7316, 0.7268, 0.7234, 0.7228, 0.7236, 0.7260, 0.7301, 0.7348, 0.7400, 0.7461, 0.7513,
3:         0.7568, 0.7606, 0.7632, 0.7647, 0.7672, 0.7701, 0.7735, 0.7768, 0.7814, 0.7880, 0.7952], device='cuda:0',
3:        grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'total_precip' shape: torch.Size([11237, 243])
3:      first 25 pred values: tensor([-0.2464, -0.2414, -0.2442, -0.2428, -0.2403, -0.2427, -0.2382, -0.2397, -0.2400, -0.2458, -0.2419, -0.2403,
3:         -0.2427, -0.2408, -0.2406, -0.2396, -0.2428, -0.2442, -0.2464, -0.2458, -0.2433, -0.2383, -0.2411, -0.2404,
3:         -0.2470], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 't2m' shape: torch.Size([2429, 2187])
3:      first 25 pred values: tensor([-0.1076, -0.0786, -0.1102, -0.0701, -0.0568, -0.1055, -0.0468, -0.0167, -0.0115, -0.0242,  0.0091,  0.0020,
3:         -0.0075,  0.0660,  0.0665,  0.1369,  0.1064,  0.1226,  0.1389,  0.0978,  0.0863,  0.1463,  0.1618,  0.2087,
3:          0.1958], device='cuda:0', grad_fn=<SliceBackward0>)
2: [DEBUG] TRAIN INPUT BATCH
2: Epoch 5, first input batch shapes / sample data:
2:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1: [DEBUG] TRAIN INPUT BATCH
1: Epoch 5, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([2.1314, 2.2242, 2.3113, 2.3864, 2.4477, 2.4963, 2.5329, 2.5576, 2.5730, 2.5827, 2.5895, 2.5943, 2.5990, 2.6079,
2:         2.6230, 2.6433, 2.6656, 2.6878, 2.0733, 2.1382, 2.2138, 2.2910, 2.3639, 2.4295, 2.4862], device='cuda:0')
2:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
2:        device='cuda:0')
2:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([ 0.0008,  0.0059,  0.0114,  0.0165,  0.0186,  0.0216,  0.0251,  0.0263,  0.0277,  0.0282,  0.0280,  0.0290,
2:          0.0316,  0.0362,  0.0402,  0.0464,  0.0529,  0.0598, -0.0201, -0.0153, -0.0104, -0.0057, -0.0034, -0.0003,
2:          0.0020], device='cuda:0')
2:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([-3.4092, -3.1315, -2.7700, -2.3667, -1.9479, -1.5336, -1.1567, -0.8503, -0.6410, -0.5352, -0.5220, -0.5616,
2:         -0.6013, -0.5969, -0.5352, -0.4250, -0.2949, -0.1781, -3.3761, -3.4356, -3.3585, -3.1579, -2.8626, -2.5099,
2:         -2.1419], device='cuda:0')
2:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
2:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
2:        device='cuda:0')
2:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
2:      first 25 values: tensor([-0.2006, -0.1823, -0.1595, -0.1195, -0.1046, -0.0623,  0.0245,  0.1684,  0.2610, -0.2383, -0.2337, -0.2166,
2:         -0.2086, -0.1949, -0.1754, -0.1355, -0.0932, -0.0166, -0.2497, -0.2474, -0.2463, -0.2417, -0.2383, -0.2269,
2:         -0.2189], device='cuda:0')
2:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
2:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
2:        device='cuda:0')
2: [DEBUG] TRAIN TARGET BATCH
2: Epoch 5, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2428, 2187])
2:     First 25 batch values:
2: tensor([ 0.0940,  0.0762,  0.0386, -0.0172, -0.0597, -0.0652, -0.0562, -0.0530, -0.0460, -0.0217,  0.0399,  0.1150,
2:          0.1623,  0.1971,  0.2271,  0.2472,  0.2718,  0.2810,  0.2954,  0.3245,  0.3732,  0.4369,  0.4971,  0.5299,
2:          0.5294])
2: [DEBUG] TRAIN PREDICTIONS BATCH
2: Epoch 5, first predictions sample:
2:   └─ Predictions for 'velocity_u' shape: torch.Size([25476, 972])
2:      first 25 pred values: tensor([1.7404, 1.7361, 1.7287, 1.7209, 1.7141, 1.7084, 1.7033, 1.6985, 1.6935, 1.6885, 1.6889, 1.6928, 1.6987, 1.7058,
2:         1.7106, 1.7148, 1.7124, 1.7133, 1.8362, 1.8293, 1.8163, 1.8027, 1.7885, 1.7775, 1.7676], device='cuda:0',
2:        grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'velocity_v' shape: torch.Size([26509, 972])
2:      first 25 pred values: tensor([-2.8599, -2.8370, -2.8003, -2.7389, -2.6605, -2.5586, -2.4469, -2.3296, -2.2146, -2.1099, -2.0306, -1.9852,
2:         -1.9800, -2.0048, -2.0564, -2.1169, -2.1705, -2.2158, -2.8155, -2.7977, -2.7659, -2.7139, -2.6329, -2.5290,
2:         -2.4126], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'specific_humidity' shape: torch.Size([26198, 972])
2:      first 25 pred values: tensor([-0.3504, -0.3359, -0.3252, -0.3159, -0.3081, -0.3035, -0.2954, -0.2938, -0.2947, -0.2968, -0.3006, -0.3014,
2:         -0.2974, -0.2905, -0.2830, -0.2766, -0.2708, -0.2709, -0.4937, -0.4829, -0.4747, -0.4682, -0.4629, -0.4578,
2:         -0.4516], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'velocity_z' shape: torch.Size([25990, 972])
2:      first 25 pred values: tensor([0.1961, 0.2240, 0.2342, 0.2594, 0.2813, 0.2467, 0.2089, 0.2167, 0.2185, 0.2400, 0.2484, 0.2252, 0.2032, 0.1671,
2:         0.1216, 0.0819, 0.0537, 0.0532, 0.2148, 0.2112, 0.1969, 0.2079, 0.2388, 0.2192, 0.2082], device='cuda:0',
2:        grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'temperature' shape: torch.Size([12092, 2187])
2:      first 25 pred values: tensor([1.2213, 1.2053, 1.1865, 1.1697, 1.1570, 1.1483, 1.1406, 1.1328, 1.1223, 1.1114, 1.1016, 1.0933, 1.0851, 1.0760,
2:         1.0680, 1.0624, 1.0577, 1.0547, 1.0529, 1.0509, 1.0502, 1.0517, 1.0564, 1.0637, 1.0739], device='cuda:0',
2:        grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'total_precip' shape: torch.Size([11306, 243])
2:      first 25 pred values: tensor([-0.2354, -0.2288, -0.2356, -0.2368, -0.2394, -0.2447, -0.2410, -0.2446, -0.2443, -0.2375, -0.2324, -0.2338,
2:         -0.2393, -0.2415, -0.2417, -0.2429, -0.2478, -0.2485, -0.2408, -0.2400, -0.2395, -0.2395, -0.2452, -0.2450,
2:         -0.2526], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 't2m' shape: torch.Size([2428, 2187])
2:      first 25 pred values: tensor([0.1282, 0.1631, 0.0919, 0.1341, 0.1405, 0.1215, 0.1495, 0.1680, 0.1477, 0.1382, 0.1397, 0.1884, 0.1559, 0.1814,
2:         0.1868, 0.2140, 0.1980, 0.1982, 0.1527, 0.1508, 0.1479, 0.1874, 0.1999, 0.1785, 0.1871], device='cuda:0',
2:        grad_fn=<SliceBackward0>)
1:      first 25 values: tensor([2.1314, 2.2242, 2.3113, 2.3864, 2.4477, 2.4963, 2.5329, 2.5576, 2.5730, 2.5827, 2.5895, 2.5943, 2.5990, 2.6079,
1:         2.6230, 2.6433, 2.6656, 2.6878, 2.0733, 2.1382, 2.2138, 2.2910, 2.3639, 2.4295, 2.4862], device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-3.4929, -3.4726, -3.4365, -3.3866, -3.3274, -3.2634, -3.1973, -3.1324, -3.0720, -3.0193, -2.9765, -2.9443,
1:         -2.9217, -2.9057, -2.8934, -2.8818, -2.8681, -2.8488, -3.4276, -3.4483, -3.4529, -3.4388, -3.4073, -3.3602,
1:         -3.3008], device='cuda:0')
1:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([ 0.0008,  0.0059,  0.0114,  0.0165,  0.0186,  0.0216,  0.0251,  0.0263,  0.0277,  0.0282,  0.0280,  0.0290,
1:          0.0316,  0.0362,  0.0402,  0.0464,  0.0529,  0.0598, -0.0201, -0.0153, -0.0104, -0.0057, -0.0034, -0.0003,
1:          0.0020], device='cuda:0')
1:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-3.4092, -3.1315, -2.7700, -2.3667, -1.9479, -1.5336, -1.1567, -0.8503, -0.6410, -0.5352, -0.5220, -0.5616,
1:         -0.6013, -0.5969, -0.5352, -0.4250, -0.2949, -0.1781, -3.3761, -3.4356, -3.3585, -3.1579, -2.8626, -2.5099,
1:         -2.1419], device='cuda:0')
1:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([0.9749, 0.9832, 0.9911, 0.9978, 1.0028, 1.0067, 1.0102, 1.0126, 1.0127, 1.0109, 1.0074, 1.0032, 0.9999, 0.9990,
1:         1.0015, 1.0070, 1.0145, 1.0227, 1.0316, 1.0407, 1.0491, 1.0565, 1.0623, 1.0668, 1.0701], device='cuda:0')
1:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
1:      first 25 values: tensor([-0.2006, -0.1823, -0.1595, -0.1195, -0.1046, -0.0623,  0.0245,  0.1684,  0.2610, -0.2383, -0.2337, -0.2166,
1:         -0.2086, -0.1949, -0.1754, -0.1355, -0.0932, -0.0166, -0.2497, -0.2474, -0.2463, -0.2417, -0.2383, -0.2269,
1:         -0.2189], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-0.6146, -0.6100, -0.6019, -0.5841, -0.5685, -0.5443, -0.5195, -0.4910, -0.4592, -0.4055, -0.3520, -0.3096,
1:         -0.2750, -0.2419, -0.2046, -0.1780, -0.1599, -0.1596, -0.1853, -0.2022, -0.2091, -0.2205, -0.2273, -0.2208,
1:         -0.2054], device='cuda:0')
1: [DEBUG] TRAIN TARGET BATCH
1: Epoch 5, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2435, 2187])
1:     First 25 batch values:
1: tensor([-0.2672, -0.2525, -0.2328, -0.2134, -0.1780, -0.1321, -0.0749, -0.0518, -0.0127, -0.0108,  0.0115,  0.0048,
1:          0.0246,  0.0534,  0.1159,  0.1978,  0.2862,  0.3646,  0.3954,  0.4005,  0.3901,  0.3526,  0.3292,  0.3313,
1:          0.3515])
1: [DEBUG] TRAIN PREDICTIONS BATCH
1: Epoch 5, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([26323, 972])
1:      first 25 pred values: tensor([1.7024, 1.7433, 1.7787, 1.8097, 1.8406, 1.8771, 1.9168, 1.9613, 2.0050, 2.0486, 2.0939, 2.1440, 2.1972, 2.2445,
1:         2.2896, 2.3283, 2.3593, 2.3875, 1.8857, 1.9351, 1.9759, 2.0087, 2.0421, 2.0817, 2.1275], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([25316, 972])
1:      first 25 pred values: tensor([-2.2139, -2.2908, -2.3346, -2.3502, -2.3476, -2.3402, -2.3358, -2.3422, -2.3554, -2.3741, -2.3963, -2.4234,
1:         -2.4542, -2.4876, -2.5246, -2.5616, -2.5987, -2.6365, -2.1640, -2.2476, -2.3000, -2.3303, -2.3336, -2.3348,
1:         -2.3361], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([25439, 972])
1:      first 25 pred values: tensor([-0.7559, -0.7490, -0.7317, -0.7058, -0.6644, -0.6139, -0.5460, -0.4739, -0.3914, -0.3124, -0.2338, -0.1587,
1:         -0.0861, -0.0207,  0.0336,  0.0782,  0.1119,  0.1424, -0.7672, -0.7671, -0.7652, -0.7556, -0.7339, -0.6932,
1:         -0.6413], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([26125, 972])
1:      first 25 pred values: tensor([0.5298, 0.5091, 0.5118, 0.5294, 0.5558, 0.5661, 0.5709, 0.5898, 0.6246, 0.6637, 0.6809, 0.7326, 0.7886, 0.8289,
1:         0.8771, 0.9335, 0.9909, 1.0216, 0.3662, 0.3441, 0.3502, 0.3698, 0.3928, 0.4014, 0.4348], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([11727, 2187])
1:      first 25 pred values: tensor([0.3008, 0.3442, 0.3894, 0.4339, 0.4736, 0.5092, 0.5417, 0.5708, 0.5949, 0.6138, 0.6297, 0.6424, 0.6515, 0.6592,
1:         0.6638, 0.6664, 0.6670, 0.6661, 0.6643, 0.6638, 0.6628, 0.6622, 0.6634, 0.6670, 0.6735], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([11047, 243])
1:      first 25 pred values: tensor([-0.2386, -0.2352, -0.2378, -0.2403, -0.2422, -0.2459, -0.2425, -0.2428, -0.2447, -0.2464, -0.2392, -0.2412,
1:         -0.2453, -0.2414, -0.2423, -0.2431, -0.2461, -0.2480, -0.2464, -0.2477, -0.2464, -0.2431, -0.2439, -0.2439,
1:         -0.2480], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([2435, 2187])
1:      first 25 pred values: tensor([-0.2502, -0.2099, -0.2854, -0.2510, -0.2531, -0.2910, -0.2020, -0.1698, -0.2056, -0.1027, -0.1342, -0.1066,
1:         -0.0954, -0.0205, -0.0233,  0.0672,  0.0659,  0.0839,  0.1183,  0.1023,  0.1044,  0.2104,  0.1920,  0.2419,
1:          0.2827], device='cuda:0', grad_fn=<SliceBackward0>)
0: epoch: 5 [1/5 (20%)]	Loss: 0.35265 : 0.07966 :: 0.06717 (1.50 s/sec)
0: epoch: 5 [2/5 (40%)]	Loss: 0.37231 : 0.08661 :: 0.06847 (8.16 s/sec)
0: epoch: 5 [3/5 (60%)]	Loss: 0.34724 : 0.09731 :: 0.07206 (8.15 s/sec)
0: epoch: 5 [4/5 (80%)]	Loss: 0.37458 : 0.13391 :: 0.07421 (8.15 s/sec)
0: validation loss for strategy=BERT at epoch 5 : 0.0825183168053627
0: validation loss for velocity_u : 0.00378865422680974
0: validation loss for velocity_v : 0.005338616203516722
0: validation loss for specific_humidity : 0.006670039147138596
0: validation loss for velocity_z : 0.10943968594074249
0: validation loss for temperature : 0.020113978534936905
0: validation loss for total_precip : 0.2615079879760742
0: validation loss for t2m : 0.1707693636417389
0: 6 : 16:48:55 :: batch_size = 96, lr = 1.8119012895995104e-05
1: 6 : 16:48:55 :: batch_size = 96, lr = 1.8119012895995104e-05
3: 6 : 16:48:55 :: batch_size = 96, lr = 1.8119012895995104e-05
2: 6 : 16:48:55 :: batch_size = 96, lr = 1.8119012895995104e-05
0: [DEBUG] TRAIN INPUT BATCH
0: Epoch 6, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.2865, -0.3050, -0.3230, -0.3408, -0.3596, -0.3795, -0.3999, -0.4205, -0.4402, -0.4567, -0.4674, -0.4704,
0:         -0.4666, -0.4588, -0.4491, -0.4362, -0.4182, -0.3950, -0.2706, -0.2909, -0.3088, -0.3244, -0.3395, -0.3553,
0:         -0.3726], device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
0:        device='cuda:0')
0:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([ 0.2119,  0.2224,  0.2275,  0.2350,  0.2355,  0.2276,  0.2149,  0.1937,  0.1585,  0.1048,  0.0599, -0.0041,
0:         -0.0969, -0.1689, -0.2322, -0.2821, -0.3079, -0.3157,  0.2347,  0.2446,  0.2547,  0.2622,  0.2656,  0.2609,
0:          0.2482], device='cuda:0')
0:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([0.6615, 0.6863, 0.7403, 0.7674, 0.7538, 0.7268, 0.6773, 0.6390, 0.6435, 0.6593, 0.6525, 0.6120, 0.5084, 0.3666,
0:         0.2833, 0.2630, 0.2473, 0.2360, 0.6233, 0.6390, 0.6796, 0.6931, 0.6728, 0.6458, 0.6075], device='cuda:0')
0:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
0:        device='cuda:0')
0:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([-0.2216, -0.2426, -0.2426, -0.2426, -0.2426, -0.2356, -0.2356, -0.2356, -0.2426, -0.2426, -0.2426, -0.2426,
0:         -0.2426, -0.2333, -0.2298, -0.2298, -0.2426, -0.2426, -0.2426, -0.2426, -0.2426, -0.2263, -0.2111, -0.2205,
0:         -0.2368], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([ 0.0413,  0.1074,  0.0029, -0.0520,  0.0665, -0.0875, -0.0362,  0.0174, -0.2130,  0.1917,  0.0581,  0.0395,
0:          0.1536,  0.0496, -0.1926,  0.0228, -0.0726,  0.0134,  0.1121,  0.0454,  0.0677,  0.1193, -0.1143, -0.0620,
0:          0.0702], device='cuda:0')
0: [DEBUG] TRAIN TARGET BATCH
0: Epoch 6, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2379, 2187])
0:     First 25 batch values:
0: tensor([-0.2092, -0.1933, -0.1882, -0.1703, -0.1611, -0.1579, -0.1489, -0.1552, -0.1439, -0.1056, -0.0467,  0.0011,
0:          0.0211,  0.0509,  0.0653,  0.1562,  0.3039,  0.4362,  0.5082,  0.5413,  0.5631,  0.5768,  0.5813,  0.6261,
0:          0.6135])
0: [DEBUG] TRAIN PREDICTIONS BATCH
0: Epoch 6, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([25985, 972])
0:      first 25 pred values: tensor([-1.1395, -1.1559, -1.1740, -1.1944, -1.2102, -1.2217, -1.2276, -1.2304, -1.2294, -1.2244, -1.2189, -1.2122,
0:         -1.2087, -1.2063, -1.2029, -1.1929, -1.1747, -1.1476, -1.0551, -1.0688, -1.0823, -1.0964, -1.1062, -1.1128,
0:         -1.1159], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([27336, 972])
0:      first 25 pred values: tensor([ 0.4333,  0.4068,  0.3778,  0.3474,  0.3163,  0.2858,  0.2535,  0.2183,  0.1843,  0.1499,  0.1176,  0.0864,
0:          0.0581,  0.0315,  0.0096, -0.0171, -0.0442, -0.0636,  0.3861,  0.3658,  0.3430,  0.3177,  0.2930,  0.2679,
0:          0.2408], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([26085, 972])
0:      first 25 pred values: tensor([ 0.0665,  0.0288, -0.0082, -0.0391, -0.0616, -0.0829, -0.1022, -0.1268, -0.1537, -0.1926, -0.2404, -0.2976,
0:         -0.3538, -0.4130, -0.4660, -0.5062, -0.5369, -0.5466,  0.1142,  0.0586,  0.0058, -0.0355, -0.0677, -0.0909,
0:         -0.1060], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([25863, 972])
0:      first 25 pred values: tensor([-0.2311, -0.2821, -0.2912, -0.2701, -0.2424, -0.1794, -0.1104, -0.0320,  0.0542,  0.1561,  0.2497,  0.2872,
0:          0.2975,  0.2939,  0.2611,  0.2307,  0.2001,  0.1634, -0.2464, -0.2516, -0.2098, -0.1454, -0.0830, -0.0178,
0:          0.0233], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([11573, 2187])
0:      first 25 pred values: tensor([-0.2212, -0.0990,  0.0281,  0.1455,  0.2472,  0.3352,  0.4076,  0.4673,  0.5150,  0.5509,  0.5739,  0.5900,
0:          0.6018,  0.6102,  0.6177,  0.6223,  0.6281,  0.6378,  0.6534,  0.6738,  0.6966,  0.7186,  0.7382,  0.7559,
0:          0.7721], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([10173, 243])
0:      first 25 pred values: tensor([ 0.1493,  0.0598, -0.0154, -0.0912, -0.1473, -0.1786, -0.2046, -0.2247, -0.2260,  0.2144,  0.1036,  0.0073,
0:         -0.0828, -0.1558, -0.1818, -0.2157, -0.2244, -0.2392,  0.2869,  0.1690,  0.0577, -0.0611, -0.1225, -0.1861,
0:         -0.2045], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([2379, 2187])
0:      first 25 pred values: tensor([ 0.0027,  0.0120, -0.0068,  0.0234,  0.0514,  0.0222,  0.0759,  0.1004,  0.1056,  0.0942,  0.1617,  0.1774,
0:          0.2032,  0.2571,  0.2874,  0.3045,  0.3607,  0.3975,  0.4037,  0.4017,  0.3958,  0.4906,  0.5109,  0.5482,
0:          0.5553], device='cuda:0', grad_fn=<SliceBackward0>)
1: [DEBUG] TRAIN INPUT BATCH
1: Epoch 6, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.2865, -0.3050, -0.3230, -0.3408, -0.3596, -0.3795, -0.3999, -0.4205, -0.4402, -0.4567, -0.4674, -0.4704,
1:         -0.4666, -0.4588, -0.4491, -0.4362, -0.4182, -0.3950, -0.2706, -0.2909, -0.3088, -0.3244, -0.3395, -0.3553,
1:         -0.3726], device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([0.9235, 0.9824, 1.0402, 1.0929, 1.1382, 1.1768, 1.2110, 1.2461, 1.2862, 1.3328, 1.3863, 1.4458, 1.5086, 1.5700,
1:         1.6244, 1.6635, 1.6830, 1.6847, 0.8760, 0.9345, 0.9942, 1.0513, 1.1042, 1.1511, 1.1935], device='cuda:0')
1:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([ 0.2119,  0.2224,  0.2275,  0.2350,  0.2355,  0.2276,  0.2149,  0.1937,  0.1585,  0.1048,  0.0599, -0.0041,
1:         -0.0969, -0.1689, -0.2322, -0.2821, -0.3079, -0.3157,  0.2347,  0.2446,  0.2547,  0.2622,  0.2656,  0.2609,
1:          0.2482], device='cuda:0')
1:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([0.6615, 0.6863, 0.7403, 0.7674, 0.7538, 0.7268, 0.6773, 0.6390, 0.6435, 0.6593, 0.6525, 0.6120, 0.5084, 0.3666,
1:         0.2833, 0.2630, 0.2473, 0.2360, 0.6233, 0.6390, 0.6796, 0.6931, 0.6728, 0.6458, 0.6075], device='cuda:0')
1:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([ 0.0286, -0.0065, -0.0423, -0.0806, -0.1222, -0.1640, -0.2054, -0.2446, -0.2816, -0.3182, -0.3553, -0.3918,
1:         -0.4288, -0.4682, -0.5139, -0.5700, -0.6348, -0.7008, -0.7637, -0.8233, -0.8817, -0.9406, -0.9980, -1.0485,
1:         -1.0902], device='cuda:0')
1:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
1:      first 25 values: tensor([-0.2216, -0.2426, -0.2426, -0.2426, -0.2426, -0.2356, -0.2356, -0.2356, -0.2426, -0.2426, -0.2426, -0.2426,
1:         -0.2426, -0.2333, -0.2298, -0.2298, -0.2426, -0.2426, -0.2426, -0.2426, -0.2426, -0.2263, -0.2111, -0.2205,
1:         -0.2368], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-0.0022,  0.0594,  0.0910,  0.0899, -0.0223,  0.0099,  0.0917,  0.1476,  0.4123,  0.5447,  0.8417,  1.0191,
1:          1.1061,  1.0713,  1.0009,  0.9462,  0.9086,  0.9441,  1.1128,  1.4176,  1.6296,  1.7557,  1.7025,  1.6957,
1:          1.7195], device='cuda:0')
1: [DEBUG] TRAIN TARGET BATCH
1: Epoch 6, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2435, 2187])
1:     First 25 batch values:
1: tensor([ 0.5487,  0.4938,  0.4461,  0.3820,  0.3092,  0.2681,  0.2287,  0.1967,  0.1879,  0.1958,  0.1758,  0.1571,
1:          0.1490,  0.1342,  0.1200,  0.1256,  0.1233,  0.1172,  0.0762,  0.0380,  0.0041, -0.0392, -0.0606, -0.0794,
1:         -0.0983])
1: [DEBUG] TRAIN PREDICTIONS BATCH
1: Epoch 6, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([26323, 972])
1:      first 25 pred values: tensor([-0.3719, -0.4235, -0.4798, -0.5410, -0.6023, -0.6593, -0.7095, -0.7544, -0.7939, -0.8304, -0.8645, -0.8970,
1:         -0.9299, -0.9588, -0.9898, -1.0187, -1.0494, -1.0823, -0.2700, -0.3165, -0.3679, -0.4238, -0.4817, -0.5394,
1:         -0.5899], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([25316, 972])
1:      first 25 pred values: tensor([-0.6805, -0.6496, -0.6199, -0.5959, -0.5735, -0.5429, -0.4949, -0.4214, -0.3256, -0.2089, -0.0815,  0.0534,
1:          0.1856,  0.3127,  0.4312,  0.5390,  0.6348,  0.7264, -0.7361, -0.7092, -0.6807, -0.6608, -0.6417, -0.6194,
1:         -0.5805], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([25439, 972])
1:      first 25 pred values: tensor([-0.5227, -0.5077, -0.4753, -0.4285, -0.3715, -0.3127, -0.2614, -0.2282, -0.2111, -0.2079, -0.2138, -0.2179,
1:         -0.2099, -0.1850, -0.1422, -0.0805, -0.0106,  0.0529, -0.5778, -0.5666, -0.5417, -0.5006, -0.4443, -0.3833,
1:         -0.3276], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([26125, 972])
1:      first 25 pred values: tensor([ 0.1473,  0.0753,  0.0554,  0.0329, -0.0145, -0.0810, -0.1836, -0.2647, -0.3104, -0.2638, -0.1484, -0.0890,
1:         -0.0514, -0.0566, -0.1746, -0.3036, -0.4192, -0.4933, -0.0082, -0.0395, -0.0219, -0.0088, -0.0289, -0.0824,
1:         -0.1877], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([11727, 2187])
1:      first 25 pred values: tensor([0.3253, 0.3383, 0.3583, 0.3848, 0.4181, 0.4522, 0.4849, 0.5166, 0.5474, 0.5756, 0.6000, 0.6177, 0.6300, 0.6405,
1:         0.6510, 0.6608, 0.6671, 0.6630, 0.6417, 0.5999, 0.5353, 0.4499, 0.3475, 0.2350, 0.1165], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([11047, 243])
1:      first 25 pred values: tensor([-0.2456, -0.2368, -0.2363, -0.2337, -0.2348, -0.2321, -0.2360, -0.2345, -0.2328, -0.2415, -0.2341, -0.2372,
1:         -0.2353, -0.2425, -0.2383, -0.2366, -0.2381, -0.2379, -0.2383, -0.2330, -0.2372, -0.2347, -0.2301, -0.2365,
1:         -0.2374], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([2435, 2187])
1:      first 25 pred values: tensor([ 0.4832,  0.5008,  0.4312,  0.4700,  0.4516,  0.4594,  0.4217,  0.3836,  0.3440,  0.2874,  0.2622,  0.2487,
1:          0.1953,  0.1519,  0.1417,  0.0299,  0.0330, -0.0122, -0.0774, -0.0714, -0.1088, -0.1941, -0.1883, -0.2070,
1:         -0.2486], device='cuda:0', grad_fn=<SliceBackward0>)
3: [DEBUG] TRAIN INPUT BATCH
3: Epoch 6, first input batch shapes / sample data:
3:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2: [DEBUG] TRAIN INPUT BATCH
2: Epoch 6, first input batch shapes / sample data:
2:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([-0.2865, -0.3050, -0.3230, -0.3408, -0.3596, -0.3795, -0.3999, -0.4205, -0.4402, -0.4567, -0.4674, -0.4704,
3:         -0.4666, -0.4588, -0.4491, -0.4362, -0.4182, -0.3950, -0.2706, -0.2909, -0.3088, -0.3244, -0.3395, -0.3553,
3:         -0.3726], device='cuda:0')
3:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
3:        device='cuda:0')
3:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
3:        device='cuda:0')
3:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([0.6615, 0.6863, 0.7403, 0.7674, 0.7538, 0.7268, 0.6773, 0.6390, 0.6435, 0.6593, 0.6525, 0.6120, 0.5084, 0.3666,
3:         0.2833, 0.2630, 0.2473, 0.2360, 0.6233, 0.6390, 0.6796, 0.6931, 0.6728, 0.6458, 0.6075], device='cuda:0')
3:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
3:      first 25 values: tensor([ 0.0286, -0.0065, -0.0423, -0.0806, -0.1222, -0.1640, -0.2054, -0.2446, -0.2816, -0.3182, -0.3553, -0.3918,
3:         -0.4288, -0.4682, -0.5139, -0.5700, -0.6348, -0.7008, -0.7637, -0.8233, -0.8817, -0.9406, -0.9980, -1.0485,
3:         -1.0902], device='cuda:0')
3:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
3:      first 25 values: tensor([-0.2216, -0.2426, -0.2426, -0.2426, -0.2426, -0.2356, -0.2356, -0.2356, -0.2426, -0.2426, -0.2426, -0.2426,
3:         -0.2426, -0.2333, -0.2298, -0.2298, -0.2426, -0.2426, -0.2426, -0.2426, -0.2426, -0.2263, -0.2111, -0.2205,
3:         -0.2368], device='cuda:0')
3:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
3:      first 25 values: tensor([-0.0022,  0.0594,  0.0910,  0.0899, -0.0223,  0.0099,  0.0917,  0.1476,  0.4123,  0.5447,  0.8417,  1.0191,
3:          1.1061,  1.0713,  1.0009,  0.9462,  0.9086,  0.9441,  1.1128,  1.4176,  1.6296,  1.7557,  1.7025,  1.6957,
3:          1.7195], device='cuda:0')
3: [DEBUG] TRAIN TARGET BATCH
3: Epoch 6, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2429, 2187])
3:     First 25 batch values:
3: tensor([1.3867, 1.3685, 1.3575, 1.3356, 1.3622, 1.4789, 1.5490, 1.4979, 1.4290, 1.3819, 1.3595, 1.3482, 1.3197, 1.2976,
3:         1.2327, 1.1948, 1.1492, 1.0813, 0.9881, 0.8682, 0.8241, 0.7707, 0.7607, 0.7427, 0.7313])
3: [DEBUG] TRAIN PREDICTIONS BATCH
3: Epoch 6, first predictions sample:
3:   └─ Predictions for 'velocity_u' shape: torch.Size([27053, 972])
3:      first 25 pred values: tensor([ 0.0615,  0.0260, -0.0120, -0.0529, -0.0964, -0.1404, -0.1830, -0.2268, -0.2682, -0.3077, -0.3429, -0.3773,
3:         -0.4087, -0.4371, -0.4651, -0.4919, -0.5255, -0.5578,  0.1162,  0.0862,  0.0517,  0.0166, -0.0201, -0.0601,
3:         -0.0984], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'velocity_v' shape: torch.Size([26245, 972])
3:      first 25 pred values: tensor([0.6195, 0.6204, 0.6248, 0.6277, 0.6362, 0.6487, 0.6593, 0.6681, 0.6845, 0.6904, 0.6995, 0.7081, 0.7174, 0.7319,
3:         0.7525, 0.7749, 0.7937, 0.8107, 0.6259, 0.6263, 0.6277, 0.6339, 0.6446, 0.6545, 0.6650], device='cuda:0',
3:        grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'specific_humidity' shape: torch.Size([26347, 972])
3:      first 25 pred values: tensor([-0.3771, -0.3901, -0.3967, -0.4002, -0.3939, -0.3784, -0.3610, -0.3502, -0.3520, -0.3667, -0.3950, -0.4299,
3:         -0.4606, -0.4850, -0.5006, -0.5055, -0.5072, -0.5089, -0.3640, -0.3822, -0.3946, -0.4046, -0.4068, -0.4018,
3:         -0.3921], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'velocity_z' shape: torch.Size([25351, 972])
3:      first 25 pred values: tensor([0.2089, 0.1856, 0.2070, 0.2731, 0.3170, 0.3360, 0.3554, 0.3760, 0.3814, 0.3980, 0.4351, 0.4373, 0.4142, 0.4010,
3:         0.3956, 0.4276, 0.4510, 0.4656, 0.4315, 0.4342, 0.4490, 0.4868, 0.5219, 0.5422, 0.5539], device='cuda:0',
3:        grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'temperature' shape: torch.Size([11711, 2187])
3:      first 25 pred values: tensor([-1.2099, -1.2184, -1.2242, -1.2224, -1.2091, -1.1799, -1.1371, -1.0821, -1.0150, -0.9399, -0.8593, -0.7765,
3:         -0.6968, -0.6251, -0.5627, -0.5087, -0.4559, -0.4023, -0.3464, -0.2901, -0.2376, -0.1871, -0.1368, -0.0812,
3:         -0.0205], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'total_precip' shape: torch.Size([11237, 243])
3:      first 25 pred values: tensor([-0.2348, -0.2294, -0.2279, -0.2270, -0.2308, -0.2244, -0.2263, -0.2187, -0.2159, -0.2376, -0.2288, -0.2367,
3:         -0.2303, -0.2374, -0.2295, -0.2264, -0.2234, -0.2164, -0.2400, -0.2394, -0.2383, -0.2355, -0.2268, -0.2293,
3:         -0.2245], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 't2m' shape: torch.Size([2429, 2187])
3:      first 25 pred values: tensor([1.4350, 1.4701, 1.4168, 1.4118, 1.3534, 1.3636, 1.3381, 1.3159, 1.3642, 1.3119, 1.2647, 1.1872, 1.1933, 1.1616,
3:         1.1494, 1.1734, 1.0707, 1.0490, 0.9918, 1.0513, 0.9425, 0.8640, 0.8746, 0.8669, 0.8028], device='cuda:0',
3:        grad_fn=<SliceBackward0>)
2:      first 25 values: tensor([-0.2865, -0.3050, -0.3230, -0.3408, -0.3596, -0.3795, -0.3999, -0.4205, -0.4402, -0.4567, -0.4674, -0.4704,
2:         -0.4666, -0.4588, -0.4491, -0.4362, -0.4182, -0.3950, -0.2706, -0.2909, -0.3088, -0.3244, -0.3395, -0.3553,
2:         -0.3726], device='cuda:0')
2:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
2:        device='cuda:0')
2:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([ 0.2119,  0.2224,  0.2275,  0.2350,  0.2355,  0.2276,  0.2149,  0.1937,  0.1585,  0.1048,  0.0599, -0.0041,
2:         -0.0969, -0.1689, -0.2322, -0.2821, -0.3079, -0.3157,  0.2347,  0.2446,  0.2547,  0.2622,  0.2656,  0.2609,
2:          0.2482], device='cuda:0')
2:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([0.6615, 0.6863, 0.7403, 0.7674, 0.7538, 0.7268, 0.6773, 0.6390, 0.6435, 0.6593, 0.6525, 0.6120, 0.5084, 0.3666,
2:         0.2833, 0.2630, 0.2473, 0.2360, 0.6233, 0.6390, 0.6796, 0.6931, 0.6728, 0.6458, 0.6075], device='cuda:0')
2:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
2:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
2:        device='cuda:0')
2:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
2:      first 25 values: tensor([-0.2216, -0.2426, -0.2426, -0.2426, -0.2426, -0.2356, -0.2356, -0.2356, -0.2426, -0.2426, -0.2426, -0.2426,
2:         -0.2426, -0.2333, -0.2298, -0.2298, -0.2426, -0.2426, -0.2426, -0.2426, -0.2426, -0.2263, -0.2111, -0.2205,
2:         -0.2368], device='cuda:0')
2:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
2:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
2:        device='cuda:0')
2: [DEBUG] TRAIN TARGET BATCH
2: Epoch 6, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2428, 2187])
2:     First 25 batch values:
2: tensor([0.8149, 0.7964, 0.7494, 0.7182, 0.6826, 0.6823, 0.6672, 0.6361, 0.6166, 0.5890, 0.5596, 0.5473, 0.5275, 0.5156,
2:         0.4991, 0.4767, 0.4701, 0.4342, 0.4272, 0.4367, 0.4303, 0.4248, 0.4323, 0.4011, 0.3610])
2: [DEBUG] TRAIN PREDICTIONS BATCH
2: Epoch 6, first predictions sample:
2:   └─ Predictions for 'velocity_u' shape: torch.Size([25476, 972])
2:      first 25 pred values: tensor([0.5215, 0.5135, 0.4970, 0.4744, 0.4543, 0.4386, 0.4318, 0.4370, 0.4574, 0.4966, 0.5548, 0.6270, 0.7010, 0.7705,
2:         0.8291, 0.8816, 0.9315, 0.9864, 0.5062, 0.4972, 0.4750, 0.4473, 0.4176, 0.3921, 0.3723], device='cuda:0',
2:        grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'velocity_v' shape: torch.Size([26509, 972])
2:      first 25 pred values: tensor([-1.0450, -1.0582, -1.0742, -1.0798, -1.0705, -1.0506, -1.0191, -0.9900, -0.9626, -0.9425, -0.9282, -0.9163,
2:         -0.9016, -0.8814, -0.8569, -0.8327, -0.8119, -0.7872, -1.0677, -1.0899, -1.1092, -1.1152, -1.1031, -1.0769,
2:         -1.0428], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'specific_humidity' shape: torch.Size([26198, 972])
2:      first 25 pred values: tensor([0.2946, 0.3900, 0.4727, 0.5262, 0.5432, 0.5207, 0.4687, 0.4047, 0.3378, 0.2909, 0.2550, 0.2403, 0.2356, 0.2311,
2:         0.2158, 0.1860, 0.1479, 0.1051, 0.0881, 0.1927, 0.2980, 0.3849, 0.4425, 0.4641, 0.4474], device='cuda:0',
2:        grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'velocity_z' shape: torch.Size([25990, 972])
2:      first 25 pred values: tensor([ 5.9702e-01,  4.9152e-01,  2.8423e-01, -3.9690e-03, -3.9617e-01, -8.0595e-01, -1.1974e+00, -1.5487e+00,
2:         -1.8463e+00, -2.0285e+00, -2.0740e+00, -2.1406e+00, -2.2547e+00, -2.3086e+00, -2.3441e+00, -2.4527e+00,
2:         -2.6588e+00, -2.8998e+00,  8.4474e-01,  7.6212e-01,  6.7761e-01,  5.4374e-01,  3.0542e-01,  1.4668e-03,
2:         -3.9165e-01], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'temperature' shape: torch.Size([12092, 2187])
2:      first 25 pred values: tensor([-0.9647, -1.0302, -1.1007, -1.1714, -1.2395, -1.3007, -1.3492, -1.3833, -1.4012, -1.4075, -1.4081, -1.4016,
2:         -1.3870, -1.3595, -1.3137, -1.2509, -1.1696, -1.0761, -0.9710, -0.8591, -0.7467, -0.6392, -0.5396, -0.4481,
2:         -0.3572], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'total_precip' shape: torch.Size([11306, 243])
2:      first 25 pred values: tensor([-0.2303, -0.2243, -0.2285, -0.2287, -0.2322, -0.2276, -0.2331, -0.2268, -0.2228, -0.2303, -0.2245, -0.2350,
2:         -0.2308, -0.2404, -0.2358, -0.2340, -0.2309, -0.2259, -0.2355, -0.2367, -0.2375, -0.2369, -0.2343, -0.2389,
2:         -0.2364], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 't2m' shape: torch.Size([2428, 2187])
2:      first 25 pred values: tensor([0.9270, 0.9429, 0.8728, 0.8837, 0.8219, 0.8323, 0.7286, 0.7453, 0.7318, 0.6673, 0.6272, 0.6056, 0.5708, 0.5480,
2:         0.4785, 0.4637, 0.4416, 0.3832, 0.2772, 0.3116, 0.2412, 0.2050, 0.2047, 0.1663, 0.1238], device='cuda:0',
2:        grad_fn=<SliceBackward0>)
0: epoch: 6 [1/5 (20%)]	Loss: 0.36788 : 0.08657 :: 0.06963 (1.38 s/sec)
0: epoch: 6 [2/5 (40%)]	Loss: 0.35575 : 0.07009 :: 0.07025 (8.11 s/sec)
0: epoch: 6 [3/5 (60%)]	Loss: 0.35517 : 0.11396 :: 0.06714 (8.13 s/sec)
0: epoch: 6 [4/5 (80%)]	Loss: 0.36799 : 0.10201 :: 0.07194 (8.13 s/sec)
0: validation loss for strategy=BERT at epoch 6 : 0.09394320100545883
0: validation loss for velocity_u : 0.0036359268706291914
0: validation loss for velocity_v : 0.0050445664674043655
0: validation loss for specific_humidity : 0.006346396170556545
0: validation loss for velocity_z : 0.11340858787298203
0: validation loss for temperature : 0.019188737496733665
0: validation loss for total_precip : 0.351967990398407
0: validation loss for t2m : 0.15801021456718445
0: 7 : 16:55:47 :: batch_size = 96, lr = 1.7677085752190346e-05
2: 7 : 16:55:47 :: batch_size = 96, lr = 1.7677085752190346e-05
1: 7 : 16:55:47 :: batch_size = 96, lr = 1.7677085752190346e-05
3: 7 : 16:55:47 :: batch_size = 96, lr = 1.7677085752190346e-05
0: [DEBUG] TRAIN INPUT BATCH
0: Epoch 7, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.5417, -0.5812, -0.6147, -0.6401, -0.6583, -0.6715, -0.6833, -0.6966, -0.7133, -0.7347, -0.7601, -0.7881,
0:         -0.8168, -0.8433, -0.8656, -0.8820, -0.8920, -0.8958, -0.8176, -0.8474, -0.8701, -0.8871, -0.9005, -0.9132,
0:         -0.9271], device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
0:        device='cuda:0')
0:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.6250, -0.6261, -0.6270, -0.6279, -0.6282, -0.6259, -0.6244, -0.6198, -0.6095, -0.5993, -0.6017, -0.6075,
0:         -0.6134, -0.6186, -0.6238, -0.6274, -0.6293, -0.6316, -0.6158, -0.6171, -0.6172, -0.6171, -0.6171, -0.6143,
0:         -0.6115], device='cuda:0')
0:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([ 0.1728,  0.3164,  0.3443,  0.2585,  0.0956, -0.0994, -0.2924, -0.4531, -0.5624, -0.6053, -0.5881, -0.5324,
0:         -0.4681, -0.4210, -0.3952, -0.3867, -0.3867, -0.3974,  0.4600,  0.4557,  0.3464,  0.1556, -0.0780, -0.3224,
0:         -0.5453], device='cuda:0')
0:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
0:        device='cuda:0')
0:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([0.3128, 0.2584, 0.2191, 0.1867, 0.1647, 0.1763, 0.1867, 0.2284, 0.3337, 0.2839, 0.2700, 0.2665, 0.2503, 0.2353,
0:         0.2457, 0.2573, 0.2770, 0.3036, 0.2746, 0.2781, 0.2793, 0.2793, 0.2804, 0.2978, 0.3152], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([ 0.0181,  0.0425,  0.0219,  0.0280,  0.0419,  0.0643,  0.0392, -0.1220,  0.1323, -0.2163,  0.0157, -0.1336,
0:          0.0866, -0.0606,  0.1148, -0.0535, -0.0531,  0.0760, -0.0296, -0.0631,  0.0553,  0.0829, -0.0735,  0.0473,
0:          0.1328], device='cuda:0')
0: [DEBUG] TRAIN TARGET BATCH
0: Epoch 7, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2379, 2187])
0:     First 25 batch values:
0: tensor([-0.8000, -0.8080, -0.8012, -0.7849, -0.7662, -0.7368, -0.7060, -0.6723, -0.6560, -0.6981, -0.7738, -0.8443,
0:         -0.8364, -0.7972, -0.7496, -0.6962, -0.6671, -0.8115, -0.9508, -1.0959, -1.1662, -1.1580, -1.1448, -1.0906,
0:         -0.9280])
0: [DEBUG] TRAIN PREDICTIONS BATCH
0: Epoch 7, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([25985, 972])
0:      first 25 pred values: tensor([0.2655, 0.2653, 0.2624, 0.2543, 0.2489, 0.2457, 0.2448, 0.2454, 0.2470, 0.2517, 0.2574, 0.2623, 0.2636, 0.2597,
0:         0.2541, 0.2467, 0.2390, 0.2310, 0.3176, 0.3147, 0.3121, 0.3074, 0.3041, 0.3015, 0.3031], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([27336, 972])
0:      first 25 pred values: tensor([-0.2639, -0.2530, -0.2424, -0.2344, -0.2243, -0.2151, -0.2063, -0.1977, -0.1903, -0.1834, -0.1752, -0.1641,
0:         -0.1516, -0.1383, -0.1233, -0.1091, -0.0957, -0.0817, -0.2412, -0.2330, -0.2252, -0.2182, -0.2104, -0.1998,
0:         -0.1910], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([26085, 972])
0:      first 25 pred values: tensor([-0.3898, -0.3971, -0.4001, -0.4007, -0.4012, -0.4040, -0.4069, -0.4059, -0.4011, -0.3967, -0.3926, -0.3902,
0:         -0.3892, -0.3925, -0.3972, -0.3976, -0.3957, -0.3893, -0.3867, -0.3944, -0.3955, -0.3934, -0.3897, -0.3907,
0:         -0.3907], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([25863, 972])
0:      first 25 pred values: tensor([-1.7047, -1.5169, -1.3303, -1.2010, -1.1062, -1.0416, -1.0095, -0.9931, -0.9966, -1.0212, -1.0380, -1.0459,
0:         -1.0424, -1.0430, -1.0862, -1.1488, -1.1865, -1.1896, -1.9406, -1.6684, -1.4462, -1.3063, -1.1958, -1.1312,
0:         -1.0903], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([11573, 2187])
0:      first 25 pred values: tensor([-0.2396, -0.2355, -0.2356, -0.2378, -0.2388, -0.2412, -0.2439, -0.2462, -0.2468, -0.2479, -0.2493, -0.2524,
0:         -0.2560, -0.2589, -0.2617, -0.2640, -0.2659, -0.2700, -0.2738, -0.2777, -0.2810, -0.2842, -0.2880, -0.2913,
0:         -0.2951], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([10173, 243])
0:      first 25 pred values: tensor([-0.2375, -0.2422, -0.2430, -0.2374, -0.2329, -0.2304, -0.2286, -0.2260, -0.2248, -0.2419, -0.2436, -0.2417,
0:         -0.2413, -0.2369, -0.2339, -0.2337, -0.2278, -0.2282, -0.2429, -0.2438, -0.2439, -0.2404, -0.2384, -0.2371,
0:         -0.2395], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([2379, 2187])
0:      first 25 pred values: tensor([-0.5632, -0.5364, -0.5356, -0.5494, -0.5220, -0.5282, -0.5240, -0.5339, -0.4827, -0.5246, -0.5781, -0.5641,
0:         -0.5577, -0.5402, -0.4903, -0.5333, -0.5163, -0.5543, -0.5508, -0.5197, -0.5360, -0.4988, -0.5243, -0.4948,
0:         -0.4699], device='cuda:0', grad_fn=<SliceBackward0>)
2: [DEBUG] TRAIN INPUT BATCH
2: Epoch 7, first input batch shapes / sample data:
2:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([-0.5417, -0.5812, -0.6147, -0.6401, -0.6583, -0.6715, -0.6833, -0.6966, -0.7133, -0.7347, -0.7601, -0.7881,
2:         -0.8168, -0.8433, -0.8656, -0.8820, -0.8920, -0.8958, -0.8176, -0.8474, -0.8701, -0.8871, -0.9005, -0.9132,
2:         -0.9271], device='cuda:0')
2:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
2:        device='cuda:0')
2:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([-0.6250, -0.6261, -0.6270, -0.6279, -0.6282, -0.6259, -0.6244, -0.6198, -0.6095, -0.5993, -0.6017, -0.6075,
2:         -0.6134, -0.6186, -0.6238, -0.6274, -0.6293, -0.6316, -0.6158, -0.6171, -0.6172, -0.6171, -0.6171, -0.6143,
2:         -0.6115], device='cuda:0')
2:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([ 0.1728,  0.3164,  0.3443,  0.2585,  0.0956, -0.0994, -0.2924, -0.4531, -0.5624, -0.6053, -0.5881, -0.5324,
2:         -0.4681, -0.4210, -0.3952, -0.3867, -0.3867, -0.3974,  0.4600,  0.4557,  0.3464,  0.1556, -0.0780, -0.3224,
2:         -0.5453], device='cuda:0')
2:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
2:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
2:        device='cuda:0')
2:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
2:      first 25 values: tensor([0.3128, 0.2584, 0.2191, 0.1867, 0.1647, 0.1763, 0.1867, 0.2284, 0.3337, 0.2839, 0.2700, 0.2665, 0.2503, 0.2353,
2:         0.2457, 0.2573, 0.2770, 0.3036, 0.2746, 0.2781, 0.2793, 0.2793, 0.2804, 0.2978, 0.3152], device='cuda:0')
2:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
2:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
2:        device='cuda:0')
2: [DEBUG] TRAIN TARGET BATCH
2: Epoch 7, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2428, 2187])
2:     First 25 batch values:
2: tensor([-5.7713e-01, -5.3839e-01, -4.8693e-01, -4.4518e-01, -4.2183e-01, -3.3457e-01, -2.5200e-01, -1.7361e-01,
2:         -9.9361e-02, -7.6048e-02, -4.4286e-02, -1.1202e-02, -2.0367e-04, -6.6267e-04,  2.2363e-02,  4.6833e-02,
2:          5.5585e-02,  7.9049e-02,  1.3450e-01,  1.9349e-01,  2.2463e-01,  2.3967e-01,  2.5151e-01,  2.7957e-01,
2:          3.0492e-01])
2: [DEBUG] TRAIN PREDICTIONS BATCH
2: Epoch 7, first predictions sample:
2:   └─ Predictions for 'velocity_u' shape: torch.Size([25476, 972])
2:      first 25 pred values: tensor([-0.5822, -0.5394, -0.4903, -0.4413, -0.3919, -0.3450, -0.2994, -0.2581, -0.2216, -0.1898, -0.1600, -0.1317,
2:         -0.1039, -0.0788, -0.0566, -0.0374, -0.0251, -0.0142, -0.7059, -0.6565, -0.5972, -0.5403, -0.4866, -0.4335,
2:         -0.3819], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'velocity_v' shape: torch.Size([26509, 972])
2:      first 25 pred values: tensor([-0.1132, -0.0940, -0.0798, -0.0661, -0.0506, -0.0370, -0.0196, -0.0018,  0.0195,  0.0432,  0.0673,  0.0927,
2:          0.1218,  0.1483,  0.1780,  0.2023,  0.2264,  0.2501, -0.0737, -0.0524, -0.0325, -0.0143,  0.0036,  0.0188,
2:          0.0361], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'specific_humidity' shape: torch.Size([26198, 972])
2:      first 25 pred values: tensor([-0.4506, -0.4516, -0.4520, -0.4494, -0.4461, -0.4407, -0.4374, -0.4308, -0.4230, -0.4181, -0.4123, -0.4087,
2:         -0.4067, -0.4065, -0.4075, -0.4082, -0.4074, -0.4036, -0.4566, -0.4571, -0.4573, -0.4546, -0.4502, -0.4447,
2:         -0.4403], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'velocity_z' shape: torch.Size([25990, 972])
2:      first 25 pred values: tensor([-0.2030, -0.2482, -0.2959, -0.3384, -0.3594, -0.3539, -0.3371, -0.3132, -0.3201, -0.3406, -0.3658, -0.3686,
2:         -0.3574, -0.3817, -0.3919, -0.4050, -0.4428, -0.4864, -0.2255, -0.2334, -0.2553, -0.2932, -0.2875, -0.2765,
2:         -0.2734], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'temperature' shape: torch.Size([12092, 2187])
2:      first 25 pred values: tensor([-0.4966, -0.4799, -0.4617, -0.4429, -0.4247, -0.4063, -0.3878, -0.3697, -0.3497, -0.3287, -0.3061, -0.2833,
2:         -0.2623, -0.2461, -0.2318, -0.2199, -0.2061, -0.1904, -0.1726, -0.1550, -0.1388, -0.1257, -0.1166, -0.1110,
2:         -0.1066], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'total_precip' shape: torch.Size([11306, 243])
2:      first 25 pred values: tensor([-0.2268, -0.2324, -0.2332, -0.2296, -0.2250, -0.2203, -0.2173, -0.2113, -0.2111, -0.2330, -0.2355, -0.2327,
2:         -0.2362, -0.2327, -0.2283, -0.2252, -0.2184, -0.2171, -0.2358, -0.2355, -0.2384, -0.2385, -0.2360, -0.2370,
2:         -0.2369], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 't2m' shape: torch.Size([2428, 2187])
2:      first 25 pred values: tensor([-0.1429, -0.1360, -0.0996, -0.1395, -0.1092, -0.1419, -0.0627, -0.0943, -0.0428, -0.1340, -0.1144, -0.0609,
2:         -0.0641, -0.0266, -0.1029, -0.0967, -0.0992, -0.1235, -0.2182, -0.2232, -0.2214, -0.1609, -0.2808, -0.3224,
2:         -0.2141], device='cuda:0', grad_fn=<SliceBackward0>)
1: [DEBUG] TRAIN INPUT BATCH
1: Epoch 7, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.5417, -0.5812, -0.6147, -0.6401, -0.6583, -0.6715, -0.6833, -0.6966, -0.7133, -0.7347, -0.7601, -0.7881,
1:         -0.8168, -0.8433, -0.8656, -0.8820, -0.8920, -0.8958, -0.8176, -0.8474, -0.8701, -0.8871, -0.9005, -0.9132,
1:         -0.9271], device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([ 0.8908,  0.8590,  0.8331,  0.8096,  0.7843,  0.7535,  0.7140,  0.6651,  0.6065,  0.5399,  0.4673,  0.3923,
1:          0.3179,  0.2465,  0.1787,  0.1139,  0.0512, -0.0101,  0.8610,  0.8351,  0.8096,  0.7813,  0.7479,  0.7077,
1:          0.6606], device='cuda:0')
1:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.6250, -0.6261, -0.6270, -0.6279, -0.6282, -0.6259, -0.6244, -0.6198, -0.6095, -0.5993, -0.6017, -0.6075,
1:         -0.6134, -0.6186, -0.6238, -0.6274, -0.6293, -0.6316, -0.6158, -0.6171, -0.6172, -0.6171, -0.6171, -0.6143,
1:         -0.6115], device='cuda:0')
1:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([ 0.1728,  0.3164,  0.3443,  0.2585,  0.0956, -0.0994, -0.2924, -0.4531, -0.5624, -0.6053, -0.5881, -0.5324,
1:         -0.4681, -0.4210, -0.3952, -0.3867, -0.3867, -0.3974,  0.4600,  0.4557,  0.3464,  0.1556, -0.0780, -0.3224,
1:         -0.5453], device='cuda:0')
1:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-1.0893, -1.1034, -1.1160, -1.1254, -1.1299, -1.1295, -1.1246, -1.1165, -1.1062, -1.0933, -1.0778, -1.0592,
1:         -1.0382, -1.0152, -0.9911, -0.9660, -0.9395, -0.9109, -0.8800, -0.8470, -0.8130, -0.7784, -0.7443, -0.7111,
1:         -0.6794], device='cuda:0')
1:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
1:      first 25 values: tensor([0.3128, 0.2584, 0.2191, 0.1867, 0.1647, 0.1763, 0.1867, 0.2284, 0.3337, 0.2839, 0.2700, 0.2665, 0.2503, 0.2353,
1:         0.2457, 0.2573, 0.2770, 0.3036, 0.2746, 0.2781, 0.2793, 0.2793, 0.2804, 0.2978, 0.3152], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([ 1.9222,  1.8446,  1.4943,  0.9976,  0.4749,  0.3267,  0.1425, -0.0096, -0.1191, -0.1798, -0.0856,  0.0023,
1:          0.0829,  0.1371,  0.1860,  0.2213,  0.2295,  0.2274,  0.2409,  0.2597,  0.2654,  0.3123,  0.3759,  0.4319,
1:          0.4845], device='cuda:0')
1: [DEBUG] TRAIN TARGET BATCH
1: Epoch 7, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2435, 2187])
1:     First 25 batch values:
1: tensor([-1.5043, -1.4839, -1.4567, -1.4192, -1.4158, -1.4026, -1.3948, -1.4329, -1.4956, -1.5478, -1.6408, -1.7259,
1:         -1.8031, -1.8736, -1.9498, -1.9973, -2.0335, -2.0796, -2.0943, -2.0360, -1.9667, -1.9435, -1.8016, -1.6241,
1:         -1.4555])
1: [DEBUG] TRAIN PREDICTIONS BATCH
1: Epoch 7, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([26323, 972])
1:      first 25 pred values: tensor([0.0788, 0.0923, 0.1033, 0.1112, 0.1175, 0.1230, 0.1302, 0.1394, 0.1518, 0.1655, 0.1779, 0.1907, 0.2011, 0.2098,
1:         0.2179, 0.2269, 0.2344, 0.2444, 0.1219, 0.1338, 0.1457, 0.1537, 0.1580, 0.1644, 0.1711], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([25316, 972])
1:      first 25 pred values: tensor([0.2664, 0.2826, 0.2906, 0.2889, 0.2782, 0.2653, 0.2520, 0.2415, 0.2359, 0.2305, 0.2230, 0.2136, 0.1976, 0.1782,
1:         0.1512, 0.1182, 0.0782, 0.0332, 0.3496, 0.3439, 0.3320, 0.3107, 0.2855, 0.2556, 0.2272], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([25439, 972])
1:      first 25 pred values: tensor([-0.5503, -0.5551, -0.5564, -0.5547, -0.5501, -0.5434, -0.5376, -0.5308, -0.5243, -0.5199, -0.5185, -0.5184,
1:         -0.5190, -0.5220, -0.5234, -0.5238, -0.5228, -0.5196, -0.5557, -0.5592, -0.5611, -0.5589, -0.5552, -0.5488,
1:         -0.5441], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([26125, 972])
1:      first 25 pred values: tensor([-0.6416, -0.6401, -0.6373, -0.6441, -0.6375, -0.6126, -0.5922, -0.5778, -0.5690, -0.5930, -0.6206, -0.6178,
1:         -0.6113, -0.6154, -0.6221, -0.6362, -0.6460, -0.6784, -0.6585, -0.6508, -0.6380, -0.6283, -0.6320, -0.6256,
1:         -0.6235], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([11727, 2187])
1:      first 25 pred values: tensor([1.0296, 1.0075, 0.9899, 0.9753, 0.9614, 0.9493, 0.9369, 0.9264, 0.9155, 0.9017, 0.8849, 0.8644, 0.8417, 0.8157,
1:         0.7883, 0.7570, 0.7237, 0.6876, 0.6486, 0.6069, 0.5624, 0.5160, 0.4694, 0.4278, 0.3922], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([11047, 243])
1:      first 25 pred values: tensor([-0.2234, -0.2275, -0.2299, -0.2322, -0.2307, -0.2276, -0.2257, -0.2212, -0.2209, -0.2256, -0.2270, -0.2287,
1:         -0.2328, -0.2327, -0.2334, -0.2312, -0.2271, -0.2249, -0.2266, -0.2277, -0.2328, -0.2331, -0.2342, -0.2361,
1:         -0.2376], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([2435, 2187])
1:      first 25 pred values: tensor([ 0.4880,  0.5734,  0.5526,  0.4918,  0.4521,  0.4759,  0.5274,  0.4765,  0.5108,  0.4410,  0.4478,  0.4299,
1:          0.3541,  0.4171,  0.3456,  0.3164,  0.2420,  0.2240,  0.1955,  0.1518,  0.0674,  0.0524, -0.0106, -0.0582,
1:         -0.1282], device='cuda:0', grad_fn=<SliceBackward0>)
3: [DEBUG] TRAIN INPUT BATCH
3: Epoch 7, first input batch shapes / sample data:
3:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([0.3579, 0.3833, 0.3701, 0.3176, 0.2724, 0.2550, 0.2656, 0.3001, 0.3464, 0.4051, 0.4915, 0.5900, 0.6515, 0.6473,
3:         0.5612, 0.3912, 0.2276, 0.1707, 0.3677, 0.3909, 0.3867, 0.3559, 0.3211, 0.3069, 0.3166], device='cuda:0')
3:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
3:        device='cuda:0')
3:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
3:        device='cuda:0')
3:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([ 0.0213, -1.0588, -1.0555,  0.7196,  1.1625,  0.2057, -0.1249, -0.2602, -0.4031, -0.1991, -0.0147, -0.3486,
3:         -1.4429, -2.4182, -2.7870, -2.4728, -0.7675,  0.9247,  0.0115, -0.1118,  0.5363,  1.2083,  0.7567, -0.1685,
3:         -0.6311], device='cuda:0')
3:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
3:      first 25 values: tensor([0.9382, 0.9296, 0.8790, 0.8498, 0.8430, 0.8270, 0.8223, 0.8366, 0.8652, 0.9047, 0.9369, 0.9686, 0.9949, 0.9703,
3:         0.8948, 0.8277, 0.8121, 0.8415, 0.8922, 0.9463, 0.9904, 1.0274, 1.0538, 1.0492, 1.0186], device='cuda:0')
3:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
3:      first 25 values: tensor([-0.0599, -0.0886, -0.1792, -0.2221, -0.2102, -0.2341,  0.8178,  0.3837, -0.1840,  0.0092,  0.0164, -0.1697,
3:         -0.2388, -0.2293, -0.2221,  0.0212,  0.0092, -0.2198, -0.0027, -0.1220, -0.2245, -0.2436, -0.2388, -0.2293,
3:         -0.2317], device='cuda:0')
3:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
3:      first 25 values: tensor([-0.3613, -0.1624,  0.0028,  0.0664,  0.0783,  0.1697,  0.1944,  0.2054,  0.2223,  0.2501,  0.2661,  0.2830,
3:          0.2765,  0.2578,  0.2479,  0.1922,  0.1603,  0.1301,  0.1036,  0.0925,  0.1495,  0.2017,  0.2052,  0.1398,
3:          0.0944], device='cuda:0')
3: [DEBUG] TRAIN TARGET BATCH
3: Epoch 7, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2429, 2187])
3:     First 25 batch values:
3: tensor([-0.9677, -1.0148, -1.0221, -1.0189, -1.0043, -0.9717, -0.9549, -1.0171, -1.0197, -1.0296, -1.0510, -1.1556,
3:         -1.2127, -1.2520, -1.2743, -1.2369, -1.1930, -1.1796, -1.1813, -1.1908, -1.5359, -1.6301, -1.5855, -1.5972,
3:         -1.7217])
3: [DEBUG] TRAIN PREDICTIONS BATCH
3: Epoch 7, first predictions sample:
3:   └─ Predictions for 'velocity_u' shape: torch.Size([27053, 972])
3:      first 25 pred values: tensor([0.8955, 0.9087, 0.9169, 0.9175, 0.9100, 0.9021, 0.8968, 0.8932, 0.8963, 0.8995, 0.9035, 0.9058, 0.9030, 0.9010,
3:         0.8974, 0.8964, 0.8977, 0.8999, 0.8862, 0.9059, 0.9227, 0.9325, 0.9351, 0.9328, 0.9270], device='cuda:0',
3:        grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'velocity_v' shape: torch.Size([26245, 972])
3:      first 25 pred values: tensor([1.0198, 1.0097, 1.0002, 0.9875, 0.9808, 0.9719, 0.9550, 0.9355, 0.9166, 0.8981, 0.8835, 0.8784, 0.8702, 0.8580,
3:         0.8424, 0.8284, 0.8182, 0.8153, 1.0123, 0.9965, 0.9830, 0.9699, 0.9609, 0.9496, 0.9333], device='cuda:0',
3:        grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'specific_humidity' shape: torch.Size([26347, 972])
3:      first 25 pred values: tensor([0.3575, 0.4020, 0.4571, 0.5175, 0.5730, 0.6175, 0.6468, 0.6473, 0.6211, 0.5714, 0.5109, 0.4623, 0.4381, 0.4616,
3:         0.5091, 0.5897, 0.6768, 0.7689, 0.2785, 0.3438, 0.4139, 0.4666, 0.5098, 0.5289, 0.5230], device='cuda:0',
3:        grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'velocity_z' shape: torch.Size([25351, 972])
3:      first 25 pred values: tensor([-0.1326, -0.0029,  0.1086,  0.2076,  0.2603,  0.2429,  0.1943,  0.1435,  0.1545,  0.2312,  0.3394,  0.4721,
3:          0.5388,  0.5360,  0.5069,  0.4316,  0.3135,  0.1830,  0.0645,  0.1282,  0.1692,  0.2299,  0.2812,  0.2885,
3:          0.2640], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'temperature' shape: torch.Size([11711, 2187])
3:      first 25 pred values: tensor([0.1716, 0.1868, 0.2128, 0.2474, 0.2877, 0.3306, 0.3725, 0.4084, 0.4367, 0.4543, 0.4609, 0.4598, 0.4518, 0.4350,
3:         0.4142, 0.3884, 0.3633, 0.3406, 0.3208, 0.3008, 0.2809, 0.2620, 0.2441, 0.2285, 0.2198], device='cuda:0',
3:        grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'total_precip' shape: torch.Size([11237, 243])
3:      first 25 pred values: tensor([-0.2449, -0.2504, -0.2509, -0.2511, -0.2512, -0.2494, -0.2506, -0.2520, -0.2535, -0.2435, -0.2465, -0.2462,
3:         -0.2501, -0.2487, -0.2496, -0.2507, -0.2498, -0.2503, -0.2424, -0.2446, -0.2479, -0.2446, -0.2464, -0.2502,
3:         -0.2546], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 't2m' shape: torch.Size([2429, 2187])
3:      first 25 pred values: tensor([-1.0653, -1.0824, -1.0846, -1.1593, -1.2023, -1.2010, -1.2664, -1.3022, -1.3432, -1.3657, -1.4033, -1.4608,
3:         -1.5026, -1.5674, -1.5686, -1.6534, -1.6527, -1.6847, -1.7021, -1.7625, -1.7857, -1.8278, -1.8590, -1.8780,
3:         -1.8323], device='cuda:0', grad_fn=<SliceBackward0>)
0: epoch: 7 [1/5 (20%)]	Loss: 0.34709 : 0.08121 :: 0.06998 (1.44 s/sec)
0: epoch: 7 [2/5 (40%)]	Loss: 0.34623 : 0.06679 :: 0.07164 (8.16 s/sec)
0: epoch: 7 [3/5 (60%)]	Loss: 0.34514 : 0.09003 :: 0.07062 (8.14 s/sec)
0: epoch: 7 [4/5 (80%)]	Loss: 0.35478 : 0.10196 :: 0.07195 (8.15 s/sec)
0: validation loss for strategy=BERT at epoch 7 : 0.07691966742277145
0: validation loss for velocity_u : 0.0032919258810579777
0: validation loss for velocity_v : 0.0045595248229801655
0: validation loss for specific_humidity : 0.006060309708118439
0: validation loss for velocity_z : 0.10067933797836304
0: validation loss for temperature : 0.018518073484301567
0: validation loss for total_precip : 0.2527024447917938
0: validation loss for t2m : 0.15262608230113983
0: 8 : 17:02:35 :: batch_size = 96, lr = 1.7245937319210094e-05
3: 8 : 17:02:35 :: batch_size = 96, lr = 1.7245937319210094e-05
1: 8 : 17:02:35 :: batch_size = 96, lr = 1.7245937319210094e-05
2: 8 : 17:02:35 :: batch_size = 96, lr = 1.7245937319210094e-05
0: [DEBUG] TRAIN INPUT BATCH
0: Epoch 8, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.0694, -0.0464, -0.0296, -0.0193, -0.0135, -0.0102, -0.0121, -0.0150, -0.0148, -0.0101, -0.0055, -0.0022,
0:         -0.0061, -0.0165, -0.0324, -0.0563, -0.0815, -0.1102, -0.1565, -0.1239, -0.0942, -0.0692, -0.0456, -0.0276,
0:         -0.0189], device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
0:        device='cuda:0')
0:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.3135, -0.3550, -0.3869, -0.4033, -0.3964, -0.3792, -0.3591, -0.3394, -0.3185, -0.2958, -0.2760, -0.2460,
0:         -0.2122, -0.1847, -0.1767, -0.1803, -0.1976, -0.2304, -0.2732, -0.3540, -0.4142, -0.4647, -0.4728, -0.4710,
0:         -0.4555], device='cuda:0')
0:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.0204, -0.0302, -0.0598, -0.1048, -0.1081,  0.0147,  0.0663,  0.0751,  0.1979,  0.3383,  0.3350,  0.1880,
0:         -0.0236, -0.2649, -0.4075, -0.4338, -0.2529, -0.0478, -0.0368, -0.0269, -0.0949, -0.1607, -0.1180,  0.0389,
0:          0.1003], device='cuda:0')
0:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
0:        device='cuda:0')
0:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([-0.2491, -0.2410, -0.2351, -0.2398, -0.1977, -0.1756, -0.1277, -0.0062,  0.0896, -0.2410, -0.2433, -0.2456,
0:         -0.1499, -0.1779, -0.1464, -0.0961, -0.1055, -0.1230, -0.2480, -0.2118, -0.2164, -0.2001, -0.1545, -0.1405,
0:         -0.1604], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([ 0.0989, -0.0413,  0.1658, -0.0053, -0.0324, -0.1578,  0.0572, -0.1641,  0.0351, -0.0836, -0.0173,  0.1119,
0:         -0.0670,  0.0261, -0.0410,  0.0477, -0.0179,  0.0640, -0.0542,  0.0063,  0.0144, -0.0991, -0.0891,  0.0987,
0:          0.1020], device='cuda:0')
0: [DEBUG] TRAIN TARGET BATCH
0: Epoch 8, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2379, 2187])
0:     First 25 batch values:
0: tensor([ 0.1571,  0.0899,  0.1133,  0.1182,  0.0780, -0.0154, -0.0833, -0.0480,  0.0621,  0.1373,  0.2468,  0.3358,
0:          0.4991,  0.6855,  0.8180,  0.7811,  0.4854,  0.0894, -0.0577, -0.0580, -0.0319, -0.0018,  0.0122, -0.0082,
0:         -0.1108])
0: [DEBUG] TRAIN PREDICTIONS BATCH
0: Epoch 8, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([25985, 972])
0:      first 25 pred values: tensor([-1.0161, -1.0251, -1.0360, -1.0501, -1.0622, -1.0728, -1.0785, -1.0815, -1.0835, -1.0882, -1.0939, -1.1006,
0:         -1.1073, -1.1140, -1.1203, -1.1283, -1.1347, -1.1386, -1.0184, -1.0288, -1.0402, -1.0567, -1.0717, -1.0838,
0:         -1.0892], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([27336, 972])
0:      first 25 pred values: tensor([0.3374, 0.3618, 0.3831, 0.3980, 0.4050, 0.4055, 0.4042, 0.4049, 0.4062, 0.4106, 0.4174, 0.4231, 0.4244, 0.4192,
0:         0.4084, 0.3920, 0.3736, 0.3608, 0.3520, 0.3757, 0.3962, 0.4113, 0.4151, 0.4121, 0.4060], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([26085, 972])
0:      first 25 pred values: tensor([2.8886, 3.0154, 3.1435, 3.2425, 3.2936, 3.3041, 3.3092, 3.2751, 3.2100, 3.0968, 2.9441, 2.7477, 2.5300, 2.2880,
0:         2.0505, 1.7964, 1.5372, 1.2753, 3.0293, 3.1541, 3.2634, 3.3158, 3.3167, 3.2836, 3.2219], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([25863, 972])
0:      first 25 pred values: tensor([ 2.2960e-02,  3.0080e-01,  4.7679e-01,  6.3414e-01,  7.2794e-01,  4.8865e-01,  4.2891e-02, -4.0632e-01,
0:         -6.7666e-01, -7.5167e-01, -8.6337e-01, -9.4971e-01, -8.8402e-01, -6.0824e-01, -3.7086e-01, -6.0656e-01,
0:         -1.0973e+00, -1.5012e+00, -2.5060e-01, -7.5560e-03,  1.0887e-01,  1.7634e-01,  2.1744e-01,  1.7583e-04,
0:         -3.1145e-01], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([11573, 2187])
0:      first 25 pred values: tensor([-1.2439, -1.1316, -1.0191, -0.9243, -0.8546, -0.8133, -0.7848, -0.7475, -0.6960, -0.6311, -0.5640, -0.5102,
0:         -0.4685, -0.4342, -0.3983, -0.3594, -0.3237, -0.3007, -0.2904, -0.2897, -0.2918, -0.2933, -0.2990, -0.3276,
0:         -0.3836], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([10173, 243])
0:      first 25 pred values: tensor([-0.2247, -0.2232, -0.2225, -0.2343, -0.2348, -0.2447, -0.2461, -0.2439, -0.2522, -0.2138, -0.2142, -0.2239,
0:         -0.2280, -0.2324, -0.2361, -0.2392, -0.2483, -0.2458, -0.2023, -0.2092, -0.2161, -0.2197, -0.2281, -0.2351,
0:         -0.2376], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([2379, 2187])
0:      first 25 pred values: tensor([-0.1234, -0.1192, -0.1013, -0.0486, -0.0339, -0.0524,  0.0492,  0.0894,  0.1442,  0.1534,  0.1662,  0.2342,
0:          0.2666,  0.3243,  0.3972,  0.3959,  0.4556,  0.5067,  0.5424,  0.5327,  0.5513,  0.6155,  0.6539,  0.6584,
0:          0.7212], device='cuda:0', grad_fn=<SliceBackward0>)
1: [DEBUG] TRAIN INPUT BATCH
1: Epoch 8, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.0694, -0.0464, -0.0296, -0.0193, -0.0135, -0.0102, -0.0121, -0.0150, -0.0148, -0.0101, -0.0055, -0.0022,
1:         -0.0061, -0.0165, -0.0324, -0.0563, -0.0815, -0.1102, -0.1565, -0.1239, -0.0942, -0.0692, -0.0456, -0.0276,
1:         -0.0189], device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([ 0.1467,  0.1081,  0.0649,  0.0175, -0.0320, -0.0817, -0.1246, -0.1622, -0.1912, -0.2101, -0.2183, -0.2146,
1:         -0.2080, -0.1979, -0.1877, -0.1809, -0.1770, -0.1819,  0.1494,  0.1157,  0.0764,  0.0296, -0.0209, -0.0722,
1:         -0.1191], device='cuda:0')
1:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.3135, -0.3550, -0.3869, -0.4033, -0.3964, -0.3792, -0.3591, -0.3394, -0.3185, -0.2958, -0.2760, -0.2460,
1:         -0.2122, -0.1847, -0.1767, -0.1803, -0.1976, -0.2304, -0.2732, -0.3540, -0.4142, -0.4647, -0.4728, -0.4710,
1:         -0.4555], device='cuda:0')
1:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.0204, -0.0302, -0.0598, -0.1048, -0.1081,  0.0147,  0.0663,  0.0751,  0.1979,  0.3383,  0.3350,  0.1880,
1:         -0.0236, -0.2649, -0.4075, -0.4338, -0.2529, -0.0478, -0.0368, -0.0269, -0.0949, -0.1607, -0.1180,  0.0389,
1:          0.1003], device='cuda:0')
1:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-1.9915, -1.9041, -1.8350, -1.7575, -1.6765, -1.5954, -1.4719, -1.3327, -1.1829, -1.0022, -0.8229, -0.6896,
1:         -0.6319, -0.6376, -0.6860, -0.7520, -0.7721, -0.7231, -0.5985, -0.3939, -0.1823,  0.0247,  0.2292,  0.3472,
1:          0.3283], device='cuda:0')
1:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
1:      first 25 values: tensor([-0.2491, -0.2410, -0.2351, -0.2398, -0.1977, -0.1756, -0.1277, -0.0062,  0.0896, -0.2410, -0.2433, -0.2456,
1:         -0.1499, -0.1779, -0.1464, -0.0961, -0.1055, -0.1230, -0.2480, -0.2118, -0.2164, -0.2001, -0.1545, -0.1405,
1:         -0.1604], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-0.0678, -0.3744, -0.3451, -0.2856,  0.0255,  0.2677,  0.3975,  0.4800,  0.4564,  0.2465, -0.2564, -0.5094,
1:         -0.2482,  0.0139,  0.1515,  0.2082,  0.2153,  0.1693,  0.1764,  0.3420,  0.5611,  0.7592,  0.8300,  0.7878,
1:          0.7832], device='cuda:0')
1: [DEBUG] TRAIN TARGET BATCH
1: Epoch 8, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2435, 2187])
1:     First 25 batch values:
1: tensor([1.3130, 1.2871, 1.2327, 1.1178, 1.0692, 1.0323, 1.0031, 1.0502, 1.2024, 1.4035, 1.5384, 1.5433, 1.4759, 1.3902,
1:         1.3564, 1.3551, 1.3745, 1.4377, 1.4647, 1.4101, 1.2645, 1.2000, 1.1745, 1.2269, 1.3343])
1: [DEBUG] TRAIN PREDICTIONS BATCH
1: Epoch 8, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([26323, 972])
1:      first 25 pred values: tensor([-0.9780, -0.9847, -0.9874, -0.9891, -0.9903, -0.9906, -0.9899, -0.9861, -0.9799, -0.9714, -0.9637, -0.9568,
1:         -0.9534, -0.9542, -0.9567, -0.9626, -0.9693, -0.9744, -0.9654, -0.9742, -0.9782, -0.9801, -0.9830, -0.9855,
1:         -0.9857], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([25316, 972])
1:      first 25 pred values: tensor([-0.0489, -0.0361, -0.0492, -0.0848, -0.1189, -0.1382, -0.1303, -0.1027, -0.0676, -0.0338, -0.0116, -0.0039,
1:         -0.0130, -0.0373, -0.0768, -0.1145, -0.1424, -0.1563, -0.0607, -0.0344, -0.0359, -0.0646, -0.0973, -0.1168,
1:         -0.1172], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([25439, 972])
1:      first 25 pred values: tensor([3.4670, 3.3411, 3.2160, 3.1732, 3.2231, 3.3507, 3.5332, 3.6928, 3.8087, 3.8517, 3.8302, 3.7198, 3.5561, 3.3299,
1:         3.0740, 2.8184, 2.5918, 2.4028, 3.4847, 3.3498, 3.2152, 3.1614, 3.2266, 3.3641, 3.5455], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([26125, 972])
1:      first 25 pred values: tensor([-0.1828, -0.3154, -0.3371, -0.2531, -0.0678,  0.0870,  0.1452,  0.1171,  0.0171, -0.0671, -0.0813, -0.0435,
1:          0.0350,  0.0824,  0.0528,  0.0089, -0.0075,  0.0361, -0.0745, -0.2886, -0.3822, -0.3520, -0.1748, -0.0055,
1:          0.0539], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([11727, 2187])
1:      first 25 pred values: tensor([-2.3843, -2.3726, -2.1841, -1.8080, -1.3094, -0.8075, -0.4050, -0.1635, -0.0768, -0.0997, -0.1801, -0.2852,
1:         -0.4022, -0.5330, -0.6590, -0.7616, -0.8225, -0.8337, -0.7991, -0.7336, -0.6443, -0.5313, -0.3942, -0.2389,
1:         -0.0789], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([11047, 243])
1:      first 25 pred values: tensor([-0.2515, -0.2489, -0.2463, -0.2482, -0.2499, -0.2538, -0.2537, -0.2483, -0.2509, -0.2491, -0.2497, -0.2488,
1:         -0.2442, -0.2480, -0.2464, -0.2422, -0.2397, -0.2344, -0.2434, -0.2465, -0.2441, -0.2386, -0.2346, -0.2316,
1:         -0.2232], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([2435, 2187])
1:      first 25 pred values: tensor([1.1562, 1.1570, 1.1083, 1.1331, 1.1674, 1.1334, 1.1222, 1.0849, 1.0461, 1.1201, 0.9829, 0.9463, 0.9692, 0.9409,
1:         0.8525, 0.8070, 0.8092, 0.6819, 0.7201, 0.6471, 0.5913, 0.5451, 0.5884, 0.4809, 0.4831], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
2: [DEBUG] TRAIN INPUT BATCH
2: Epoch 8, first input batch shapes / sample data:
2:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([-0.0694, -0.0464, -0.0296, -0.0193, -0.0135, -0.0102, -0.0121, -0.0150, -0.0148, -0.0101, -0.0055, -0.0022,
2:         -0.0061, -0.0165, -0.0324, -0.0563, -0.0815, -0.1102, -0.1565, -0.1239, -0.0942, -0.0692, -0.0456, -0.0276,
2:         -0.0189], device='cuda:0')
2:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
2:        device='cuda:0')
2:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([-0.3135, -0.3550, -0.3869, -0.4033, -0.3964, -0.3792, -0.3591, -0.3394, -0.3185, -0.2958, -0.2760, -0.2460,
2:         -0.2122, -0.1847, -0.1767, -0.1803, -0.1976, -0.2304, -0.2732, -0.3540, -0.4142, -0.4647, -0.4728, -0.4710,
2:         -0.4555], device='cuda:0')
2:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([-0.0204, -0.0302, -0.0598, -0.1048, -0.1081,  0.0147,  0.0663,  0.0751,  0.1979,  0.3383,  0.3350,  0.1880,
2:         -0.0236, -0.2649, -0.4075, -0.4338, -0.2529, -0.0478, -0.0368, -0.0269, -0.0949, -0.1607, -0.1180,  0.0389,
2:          0.1003], device='cuda:0')
2:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
2:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
2:        device='cuda:0')
2:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
2:      first 25 values: tensor([-0.2491, -0.2410, -0.2351, -0.2398, -0.1977, -0.1756, -0.1277, -0.0062,  0.0896, -0.2410, -0.2433, -0.2456,
2:         -0.1499, -0.1779, -0.1464, -0.0961, -0.1055, -0.1230, -0.2480, -0.2118, -0.2164, -0.2001, -0.1545, -0.1405,
2:         -0.1604], device='cuda:0')
2:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
2:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., 0., -0., -0., -0., -0., -0.],
2:        device='cuda:0')
2: [DEBUG] TRAIN TARGET BATCH
2: Epoch 8, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2428, 2187])
2:     First 25 batch values:
2: tensor([-0.7987, -0.8444, -0.7666, -0.4954, -0.5560, -0.6862, -0.7036, -0.6985, -0.6707, -0.3005, -0.2477, -0.4327,
2:         -0.1892, -0.2082, -0.2140, -0.1543, -0.1058, -0.1164, -0.0606,  0.4608,  0.7916,  0.8415,  0.8917,  0.7971,
2:          0.7853])
2: [DEBUG] TRAIN PREDICTIONS BATCH
2: Epoch 8, first predictions sample:
2:   └─ Predictions for 'velocity_u' shape: torch.Size([25476, 972])
2:      first 25 pred values: tensor([-0.6301, -0.6033, -0.5698, -0.5369, -0.5030, -0.4642, -0.4197, -0.3817, -0.3633, -0.3728, -0.4102, -0.4674,
2:         -0.5329, -0.5947, -0.6535, -0.7057, -0.7531, -0.7950, -0.6336, -0.6161, -0.5839, -0.5441, -0.4868, -0.4094,
2:         -0.3245], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'velocity_v' shape: torch.Size([26509, 972])
2:      first 25 pred values: tensor([-0.8814, -0.8373, -0.7667, -0.6859, -0.6114, -0.5596, -0.5430, -0.5563, -0.5951, -0.6477, -0.6954, -0.7275,
2:         -0.7402, -0.7264, -0.6735, -0.5719, -0.4262, -0.2659, -0.8961, -0.8740, -0.8282, -0.7605, -0.6866, -0.6280,
2:         -0.5952], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'specific_humidity' shape: torch.Size([26198, 972])
2:      first 25 pred values: tensor([2.8197, 2.9220, 3.0240, 3.0742, 3.0759, 3.0068, 2.8947, 2.7433, 2.5889, 2.4520, 2.3503, 2.2923, 2.3081, 2.3756,
2:         2.4912, 2.6281, 2.7631, 2.8680, 2.9210, 3.0153, 3.0680, 3.0596, 2.9822, 2.8446, 2.6839], device='cuda:0',
2:        grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'velocity_z' shape: torch.Size([25990, 972])
2:      first 25 pred values: tensor([-0.3868, -0.6466, -0.7529, -0.5940, -0.3360, -0.0577,  0.1922,  0.2869,  0.2734,  0.2385,  0.1675,  0.0925,
2:          0.0577,  0.1216,  0.3037,  0.4811,  0.5632,  0.5125, -0.4122, -0.7162, -0.8331, -0.6254, -0.2591,  0.0878,
2:          0.3349], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'temperature' shape: torch.Size([12092, 2187])
2:      first 25 pred values: tensor([ 0.4178,  0.2122, -0.0058, -0.2175, -0.4130, -0.5838, -0.7015, -0.7366, -0.6608, -0.4895, -0.2739, -0.0645,
2:          0.0968,  0.2157,  0.3080,  0.3957,  0.4803,  0.5404,  0.5573,  0.5336,  0.4961,  0.4715,  0.4730,  0.5006,
2:          0.5472], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'total_precip' shape: torch.Size([11306, 243])
2:      first 25 pred values: tensor([-0.2612, -0.2543, -0.2507, -0.2513, -0.2474, -0.2529, -0.2479, -0.2523, -0.2557, -0.2633, -0.2573, -0.2529,
2:         -0.2463, -0.2515, -0.2504, -0.2476, -0.2518, -0.2502, -0.2575, -0.2587, -0.2511, -0.2441, -0.2433, -0.2481,
2:         -0.2483], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 't2m' shape: torch.Size([2428, 2187])
2:      first 25 pred values: tensor([0.1029, 0.1241, 0.1272, 0.1552, 0.2225, 0.2145, 0.2864, 0.3226, 0.3291, 0.3571, 0.3276, 0.4224, 0.4455, 0.5241,
2:         0.5205, 0.5455, 0.5874, 0.6209, 0.6111, 0.6691, 0.6781, 0.7503, 0.7168, 0.7055, 0.7346], device='cuda:0',
2:        grad_fn=<SliceBackward0>)
3: [DEBUG] TRAIN INPUT BATCH
3: Epoch 8, first input batch shapes / sample data:
3:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([-0.0694, -0.0464, -0.0296, -0.0193, -0.0135, -0.0102, -0.0121, -0.0150, -0.0148, -0.0101, -0.0055, -0.0022,
3:         -0.0061, -0.0165, -0.0324, -0.0563, -0.0815, -0.1102, -0.1565, -0.1239, -0.0942, -0.0692, -0.0456, -0.0276,
3:         -0.0189], device='cuda:0')
3:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
3:        device='cuda:0')
3:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., -0., -0., -0., -0., -0., -0., -0.],
3:        device='cuda:0')
3:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([-0.0204, -0.0302, -0.0598, -0.1048, -0.1081,  0.0147,  0.0663,  0.0751,  0.1979,  0.3383,  0.3350,  0.1880,
3:         -0.0236, -0.2649, -0.4075, -0.4338, -0.2529, -0.0478, -0.0368, -0.0269, -0.0949, -0.1607, -0.1180,  0.0389,
3:          0.1003], device='cuda:0')
3:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
3:      first 25 values: tensor([-1.9915, -1.9041, -1.8350, -1.7575, -1.6765, -1.5954, -1.4719, -1.3327, -1.1829, -1.0022, -0.8229, -0.6896,
3:         -0.6319, -0.6376, -0.6860, -0.7520, -0.7721, -0.7231, -0.5985, -0.3939, -0.1823,  0.0247,  0.2292,  0.3472,
3:          0.3283], device='cuda:0')
3:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
3:      first 25 values: tensor([-0.2491, -0.2410, -0.2351, -0.2398, -0.1977, -0.1756, -0.1277, -0.0062,  0.0896, -0.2410, -0.2433, -0.2456,
3:         -0.1499, -0.1779, -0.1464, -0.0961, -0.1055, -0.1230, -0.2480, -0.2118, -0.2164, -0.2001, -0.1545, -0.1405,
3:         -0.1604], device='cuda:0')
3:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
3:      first 25 values: tensor([-0.0678, -0.3744, -0.3451, -0.2856,  0.0255,  0.2677,  0.3975,  0.4800,  0.4564,  0.2465, -0.2564, -0.5094,
3:         -0.2482,  0.0139,  0.1515,  0.2082,  0.2153,  0.1693,  0.1764,  0.3420,  0.5611,  0.7592,  0.8300,  0.7878,
3:          0.7832], device='cuda:0')
3: [DEBUG] TRAIN TARGET BATCH
3: Epoch 8, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2429, 2187])
3:     First 25 batch values:
3: tensor([0.9529, 0.9154, 0.9216, 1.0016, 1.0343, 1.0361, 1.0128, 0.8981, 0.6435, 0.3141, 0.0724, 0.0302, 0.1517, 0.4058,
3:         0.5119, 0.4874, 0.4631, 0.4644, 0.4411, 0.4900, 0.5370, 0.4727, 0.3869, 0.4771, 0.4594])
3: [DEBUG] TRAIN PREDICTIONS BATCH
3: Epoch 8, first predictions sample:
3:   └─ Predictions for 'velocity_u' shape: torch.Size([27053, 972])
3:      first 25 pred values: tensor([-0.4222, -0.4399, -0.4536, -0.4611, -0.4654, -0.4683, -0.4693, -0.4682, -0.4674, -0.4679, -0.4766, -0.4899,
3:         -0.5090, -0.5276, -0.5419, -0.5512, -0.5613, -0.5771, -0.3781, -0.4053, -0.4290, -0.4457, -0.4622, -0.4774,
3:         -0.4909], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'velocity_v' shape: torch.Size([26245, 972])
3:      first 25 pred values: tensor([0.8099, 0.8485, 0.8889, 0.9278, 0.9579, 0.9820, 1.0048, 1.0210, 1.0298, 1.0313, 1.0275, 1.0188, 1.0050, 0.9872,
3:         0.9675, 0.9395, 0.9067, 0.8769, 0.8219, 0.8644, 0.9067, 0.9427, 0.9662, 0.9857, 1.0001], device='cuda:0',
3:        grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'specific_humidity' shape: torch.Size([26347, 972])
3:      first 25 pred values: tensor([0.5995, 0.6238, 0.6608, 0.6836, 0.6799, 0.6312, 0.5518, 0.4585, 0.3768, 0.3203, 0.2972, 0.3119, 0.3302, 0.3403,
3:         0.3167, 0.2490, 0.1536, 0.0479, 0.5552, 0.5778, 0.6112, 0.6268, 0.5997, 0.5277, 0.4298], device='cuda:0',
3:        grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'velocity_z' shape: torch.Size([25351, 972])
3:      first 25 pred values: tensor([-0.1482, -0.0852, -0.0218,  0.0278,  0.0378,  0.0106, -0.0225, -0.0143,  0.0556,  0.1459,  0.2447,  0.3391,
3:          0.4151,  0.4735,  0.5200,  0.5436,  0.5427,  0.5121, -0.1573, -0.1056, -0.0417, -0.0033,  0.0018, -0.0139,
3:         -0.0362], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'temperature' shape: torch.Size([11711, 2187])
3:      first 25 pred values: tensor([0.3688, 0.4822, 0.5787, 0.6583, 0.7220, 0.7735, 0.8104, 0.8355, 0.8469, 0.8481, 0.8566, 0.8894, 0.9646, 1.0771,
3:         1.1990, 1.3014, 1.3617, 1.3822, 1.3783, 1.3658, 1.3678, 1.3742, 1.3861, 1.3981, 1.4020], device='cuda:0',
3:        grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'total_precip' shape: torch.Size([11237, 243])
3:      first 25 pred values: tensor([-0.2202, -0.2124, -0.2126, -0.2090, -0.2057, -0.2085, -0.2094, -0.2091, -0.2107, -0.2238, -0.2196, -0.2176,
3:         -0.2116, -0.2124, -0.2149, -0.2130, -0.2107, -0.2130, -0.2322, -0.2308, -0.2248, -0.2189, -0.2154, -0.2177,
3:         -0.2192], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 't2m' shape: torch.Size([2429, 2187])
3:      first 25 pred values: tensor([0.8313, 0.8659, 0.8048, 0.8215, 0.8178, 0.8023, 0.8274, 0.7253, 0.7048, 0.6664, 0.5933, 0.6411, 0.5687, 0.5611,
3:         0.5112, 0.4417, 0.3848, 0.3263, 0.2139, 0.2790, 0.1953, 0.1058, 0.1138, 0.0469, 0.0062], device='cuda:0',
3:        grad_fn=<SliceBackward0>)
0: epoch: 8 [1/5 (20%)]	Loss: 0.36641 : 0.07780 :: 0.07068 (1.37 s/sec)
0: epoch: 8 [2/5 (40%)]	Loss: 0.36352 : 0.09287 :: 0.06800 (8.12 s/sec)
0: epoch: 8 [3/5 (60%)]	Loss: 0.34716 : 0.08632 :: 0.07057 (8.14 s/sec)
0: epoch: 8 [4/5 (80%)]	Loss: 0.36498 : 0.13171 :: 0.06660 (8.14 s/sec)
0: validation loss for strategy=BERT at epoch 8 : 0.08742426335811615
0: validation loss for velocity_u : 0.0035123589914292097
0: validation loss for velocity_v : 0.004853786434978247
0: validation loss for specific_humidity : 0.006498994305729866
0: validation loss for velocity_z : 0.10837142169475555
0: validation loss for temperature : 0.022698286920785904
0: validation loss for total_precip : 0.3026323914527893
0: validation loss for t2m : 0.16340267658233643
0: 9 : 17:09:24 :: batch_size = 96, lr = 1.6825304701668386e-05
2: 9 : 17:09:24 :: batch_size = 96, lr = 1.6825304701668386e-05
3: 9 : 17:09:24 :: batch_size = 96, lr = 1.6825304701668386e-05
1: 9 : 17:09:24 :: batch_size = 96, lr = 1.6825304701668386e-05
0: [DEBUG] TRAIN INPUT BATCH
0: Epoch 9, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([ 0.1194,  0.0792,  0.0433,  0.0101, -0.0273, -0.0704, -0.1131, -0.1505, -0.1820, -0.2041, -0.2112, -0.2091,
0:         -0.2101, -0.2139, -0.2117, -0.2071, -0.2089, -0.2129,  0.2087,  0.1718,  0.1388,  0.1111,  0.0820,  0.0475,
0:          0.0119], device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
0:        device='cuda:0')
0:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([0.5722, 0.5858, 0.5982, 0.5967, 0.5864, 0.5585, 0.5267, 0.4940, 0.4155, 0.3247, 0.2142, 0.1502, 0.1081, 0.1664,
0:         0.2452, 0.3594, 0.4779, 0.5895, 0.5646, 0.5709, 0.5769, 0.5714, 0.5596, 0.5345, 0.4938], device='cuda:0')
0:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.3798, -0.0957,  0.1464,  0.0558,  0.0558,  0.4018,  0.6715,  0.6560,  0.5764,  0.3774, -0.0260, -0.2029,
0:         -0.0360, -0.1288, -0.5666, -0.6937, -0.5279, -0.5113, -0.4196, -0.4428, -0.5235, -0.6075, -0.3842,  0.0790,
0:          0.3807], device='cuda:0')
0:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
0:        device='cuda:0')
0:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([-0.2525, -0.2559, -0.2559, -0.2375, -0.2260, -0.2283, -0.2110, -0.1833, -0.1430, -0.2559, -0.2583, -0.2583,
0:         -0.2444, -0.2340, -0.2283, -0.2156, -0.1983, -0.0796, -0.2548, -0.2513, -0.2444, -0.2410, -0.2375, -0.2248,
0:         -0.2133], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([-0.0160,  0.1048,  0.0267,  0.0335,  0.0099, -0.0519, -0.1085,  0.0801,  0.0148,  0.0152,  0.0177,  0.0259,
0:         -0.0032,  0.0358,  0.1320, -0.0190,  0.1112, -0.1117, -0.0267,  0.0376,  0.0843, -0.0802,  0.0105, -0.0054,
0:         -0.0302], device='cuda:0')
0: [DEBUG] TRAIN TARGET BATCH
0: Epoch 9, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2379, 2187])
0:     First 25 batch values:
0: tensor([-0.5572, -0.5594, -0.5422, -0.5190, -0.4946, -0.4641, -0.4380, -0.4077, -0.3688, -0.3495, -0.3399, -0.3364,
0:         -0.3347, -0.3152, -0.2800, -0.2589, -0.2731, -0.3131, -0.3006, -0.2716, -0.2016, -0.0893,  0.0156,  0.0638,
0:          0.0900])
0: [DEBUG] TRAIN PREDICTIONS BATCH
0: Epoch 9, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([25985, 972])
0:      first 25 pred values: tensor([0.7468, 0.6943, 0.6471, 0.6233, 0.6303, 0.6600, 0.6993, 0.7340, 0.7564, 0.7529, 0.7363, 0.7134, 0.6881, 0.6666,
0:         0.6510, 0.6296, 0.6073, 0.5855, 0.8150, 0.7877, 0.7576, 0.7365, 0.7352, 0.7484, 0.7690], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([27336, 972])
0:      first 25 pred values: tensor([-0.0954, -0.0869, -0.0927, -0.1194, -0.1602, -0.1993, -0.2370, -0.2665, -0.2983, -0.3337, -0.3691, -0.4010,
0:         -0.4174, -0.4186, -0.3980, -0.3708, -0.3378, -0.3073, -0.1241, -0.1186, -0.1313, -0.1647, -0.2079, -0.2415,
0:         -0.2627], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([26085, 972])
0:      first 25 pred values: tensor([ 0.7351,  0.8194,  0.8599,  0.8426,  0.7743,  0.6706,  0.5591,  0.4580,  0.3631,  0.2710,  0.1898,  0.1122,
0:          0.0471,  0.0043, -0.0051,  0.0264,  0.0733,  0.1368,  0.7660,  0.8789,  0.9508,  0.9435,  0.8740,  0.7618,
0:          0.6392], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([25863, 972])
0:      first 25 pred values: tensor([-0.8729, -0.8522, -0.7380, -0.4851, -0.1344,  0.1886,  0.5553,  0.7438,  0.6894,  0.6882,  0.6059,  0.3440,
0:          0.1671,  0.0610, -0.0111,  0.0651,  0.2024,  0.3128, -0.7399, -0.6213, -0.4130, -0.0817,  0.3094,  0.5947,
0:          0.8957], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([11573, 2187])
0:      first 25 pred values: tensor([0.2851, 0.3651, 0.4384, 0.5030, 0.5566, 0.6026, 0.6399, 0.6702, 0.6957, 0.7161, 0.7314, 0.7430, 0.7567, 0.7743,
0:         0.7985, 0.8269, 0.8560, 0.8839, 0.9109, 0.9353, 0.9593, 0.9783, 0.9922, 1.0015, 1.0046], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([10173, 243])
0:      first 25 pred values: tensor([-0.2577, -0.2596, -0.2562, -0.2556, -0.2551, -0.2551, -0.2566, -0.2588, -0.2568, -0.2548, -0.2595, -0.2580,
0:         -0.2558, -0.2546, -0.2538, -0.2556, -0.2543, -0.2557, -0.2565, -0.2588, -0.2544, -0.2572, -0.2555, -0.2532,
0:         -0.2538], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([2379, 2187])
0:      first 25 pred values: tensor([-0.4335, -0.4459, -0.4140, -0.3980, -0.3649, -0.3408, -0.3245, -0.2895, -0.2270, -0.2898, -0.2486, -0.2205,
0:         -0.1509, -0.1381, -0.0683, -0.0705, -0.0682, -0.0142, -0.0155,  0.0500,  0.1031,  0.1214,  0.1008,  0.1087,
0:          0.1517], device='cuda:0', grad_fn=<SliceBackward0>)
1: [DEBUG] TRAIN INPUT BATCH
1: Epoch 9, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([ 0.1194,  0.0792,  0.0433,  0.0101, -0.0273, -0.0704, -0.1131, -0.1505, -0.1820, -0.2041, -0.2112, -0.2091,
1:         -0.2101, -0.2139, -0.2117, -0.2071, -0.2089, -0.2129,  0.2087,  0.1718,  0.1388,  0.1111,  0.0820,  0.0475,
1:          0.0119], device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.3898, -0.3291, -0.2655, -0.2076, -0.1583, -0.1139, -0.0701, -0.0234,  0.0301,  0.0956,  0.1732,  0.2542,
1:          0.3236,  0.3663,  0.3771,  0.3618,  0.3299,  0.2840, -0.4272, -0.3767, -0.3255, -0.2771, -0.2300, -0.1839,
1:         -0.1414], device='cuda:0')
1:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([0.5722, 0.5858, 0.5982, 0.5967, 0.5864, 0.5585, 0.5267, 0.4940, 0.4155, 0.3247, 0.2142, 0.1502, 0.1081, 0.1664,
1:         0.2452, 0.3594, 0.4779, 0.5895, 0.5646, 0.5709, 0.5769, 0.5714, 0.5596, 0.5345, 0.4938], device='cuda:0')
1:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.3798, -0.0957,  0.1464,  0.0558,  0.0558,  0.4018,  0.6715,  0.6560,  0.5764,  0.3774, -0.0260, -0.2029,
1:         -0.0360, -0.1288, -0.5666, -0.6937, -0.5279, -0.5113, -0.4196, -0.4428, -0.5235, -0.6075, -0.3842,  0.0790,
1:          0.3807], device='cuda:0')
1:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-1.4596, -1.4911, -1.5137, -1.5187, -1.5191, -1.5230, -1.5122, -1.4726, -1.4129, -1.3385, -1.2472, -1.1495,
1:         -1.0616, -0.9754, -0.8838, -0.8111, -0.7842, -0.7886, -0.7820, -0.7520, -0.7093, -0.6544, -0.5947, -0.5622,
1:         -0.5794], device='cuda:0')
1:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
1:      first 25 values: tensor([-0.2525, -0.2559, -0.2559, -0.2375, -0.2260, -0.2283, -0.2110, -0.1833, -0.1430, -0.2559, -0.2583, -0.2583,
1:         -0.2444, -0.2340, -0.2283, -0.2156, -0.1983, -0.0796, -0.2548, -0.2513, -0.2444, -0.2410, -0.2375, -0.2248,
1:         -0.2133], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-0.4478, -0.4768, -0.4830, -0.5151, -0.5556, -0.6143, -0.6895, -0.7612, -0.7901, -0.7537, -0.5821, -0.4522,
1:         -0.3431, -0.3422, -0.3449, -0.3540, -0.3541, -0.3542, -0.3991, -0.4581, -0.5540, -0.6195, -0.6680, -0.6185,
1:         -0.5732], device='cuda:0')
1: [DEBUG] TRAIN TARGET BATCH
1: Epoch 9, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2435, 2187])
1:     First 25 batch values:
1: tensor([1.0191, 1.0732, 1.1513, 0.8816, 0.8082, 0.8988, 1.1783, 1.4197, 1.7606, 2.1015, 2.2459, 2.3061, 2.2134, 2.0883,
1:         1.9445, 1.8795, 1.8220, 1.7338, 1.6438, 1.5949, 1.6580, 1.5301, 1.3174, 1.0994, 1.0716])
1: [DEBUG] TRAIN PREDICTIONS BATCH
1: Epoch 9, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([26323, 972])
1:      first 25 pred values: tensor([0.6524, 0.5466, 0.4505, 0.3769, 0.3337, 0.3263, 0.3510, 0.3999, 0.4594, 0.5143, 0.5516, 0.5779, 0.5964, 0.6145,
1:         0.6436, 0.6828, 0.7283, 0.7657, 0.6299, 0.5169, 0.4193, 0.3417, 0.2928, 0.2745, 0.2882], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([25316, 972])
1:      first 25 pred values: tensor([-0.2200, -0.1800, -0.1186, -0.0454,  0.0279,  0.0938,  0.1444,  0.1782,  0.1984,  0.2087,  0.2167,  0.2282,
1:          0.2400,  0.2527,  0.2609,  0.2572,  0.2413,  0.2142, -0.2686, -0.2352, -0.1748, -0.0977, -0.0154,  0.0598,
1:          0.1197], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([25439, 972])
1:      first 25 pred values: tensor([-0.0592, -0.0737, -0.0851, -0.0810, -0.0762, -0.0589, -0.0449, -0.0349, -0.0061,  0.0380,  0.1094,  0.2003,
1:          0.2985,  0.3845,  0.4443,  0.4723,  0.4771,  0.4591, -0.1348, -0.1332, -0.1195, -0.0973, -0.0644, -0.0309,
1:         -0.0077], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([26125, 972])
1:      first 25 pred values: tensor([-0.7311, -0.5032, -0.3983, -0.3238, -0.0885,  0.5909,  1.4579,  1.8084,  1.7232,  1.3064,  0.1171, -1.8065,
1:         -3.5299, -4.1499, -3.5409, -2.6468, -3.0049, -4.2233, -0.4534, -0.4588, -0.6640, -0.6134, -0.2155,  0.6076,
1:          1.4083], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([11727, 2187])
1:      first 25 pred values: tensor([-0.0235, -0.0078,  0.0173,  0.0453,  0.0734,  0.0956,  0.1082,  0.1134,  0.1134,  0.1146,  0.1177,  0.1211,
1:          0.1216,  0.1179,  0.1078,  0.0937,  0.0752,  0.0568,  0.0404,  0.0322,  0.0343,  0.0474,  0.0682,  0.0910,
1:          0.1120], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([11047, 243])
1:      first 25 pred values: tensor([-0.2586, -0.2603, -0.2586, -0.2583, -0.2577, -0.2550, -0.2520, -0.2515, -0.2483, -0.2546, -0.2587, -0.2558,
1:         -0.2560, -0.2569, -0.2549, -0.2517, -0.2520, -0.2504, -0.2535, -0.2550, -0.2525, -0.2555, -0.2559, -0.2547,
1:         -0.2552], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([2435, 2187])
1:      first 25 pred values: tensor([1.3668, 1.3099, 1.3323, 1.3615, 1.3684, 1.3589, 1.4136, 1.3729, 1.3919, 1.4174, 1.4187, 1.3863, 1.3811, 1.3668,
1:         1.3849, 1.3104, 1.3512, 1.3764, 1.3614, 1.3228, 1.3414, 1.3582, 1.2850, 1.2789, 1.2052], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
3: [DEBUG] TRAIN INPUT BATCH
3: Epoch 9, first input batch shapes / sample data:
3:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([ 0.1194,  0.0792,  0.0433,  0.0101, -0.0273, -0.0704, -0.1131, -0.1505, -0.1820, -0.2041, -0.2112, -0.2091,
3:         -0.2101, -0.2139, -0.2117, -0.2071, -0.2089, -0.2129,  0.2087,  0.1718,  0.1388,  0.1111,  0.0820,  0.0475,
3:          0.0119], device='cuda:0')
3:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
3:        device='cuda:0')
3:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
3:        device='cuda:0')
3:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
3:      first 25 values: tensor([-0.3798, -0.0957,  0.1464,  0.0558,  0.0558,  0.4018,  0.6715,  0.6560,  0.5764,  0.3774, -0.0260, -0.2029,
3:         -0.0360, -0.1288, -0.5666, -0.6937, -0.5279, -0.5113, -0.4196, -0.4428, -0.5235, -0.6075, -0.3842,  0.0790,
3:          0.3807], device='cuda:0')
3:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
3:      first 25 values: tensor([-1.4596, -1.4911, -1.5137, -1.5187, -1.5191, -1.5230, -1.5122, -1.4726, -1.4129, -1.3385, -1.2472, -1.1495,
3:         -1.0616, -0.9754, -0.8838, -0.8111, -0.7842, -0.7886, -0.7820, -0.7520, -0.7093, -0.6544, -0.5947, -0.5622,
3:         -0.5794], device='cuda:0')
3:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
3:      first 25 values: tensor([-0.2525, -0.2559, -0.2559, -0.2375, -0.2260, -0.2283, -0.2110, -0.1833, -0.1430, -0.2559, -0.2583, -0.2583,
3:         -0.2444, -0.2340, -0.2283, -0.2156, -0.1983, -0.0796, -0.2548, -0.2513, -0.2444, -0.2410, -0.2375, -0.2248,
3:         -0.2133], device='cuda:0')
3:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
3:      first 25 values: tensor([-0.4478, -0.4768, -0.4830, -0.5151, -0.5556, -0.6143, -0.6895, -0.7612, -0.7901, -0.7537, -0.5821, -0.4522,
3:         -0.3431, -0.3422, -0.3449, -0.3540, -0.3541, -0.3542, -0.3991, -0.4581, -0.5540, -0.6195, -0.6680, -0.6185,
3:         -0.5732], device='cuda:0')
3: [DEBUG] TRAIN TARGET BATCH
3: Epoch 9, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2429, 2187])
3:     First 25 batch values:
3: tensor([-0.8377, -0.8347, -0.8211, -0.7737, -0.7715, -0.7916, -0.8329, -0.8693, -0.8976, -0.9391, -0.9874, -0.9661,
3:         -0.9135, -0.8045, -0.6922, -0.5839, -0.5207, -0.4705, -0.4483, -0.4103, -0.3591, -0.3379, -0.3023, -0.2466,
3:         -0.1831])
3: [DEBUG] TRAIN PREDICTIONS BATCH
3: Epoch 9, first predictions sample:
3:   └─ Predictions for 'velocity_u' shape: torch.Size([27053, 972])
3:      first 25 pred values: tensor([1.2344, 1.2455, 1.2418, 1.2284, 1.2094, 1.1980, 1.1958, 1.1944, 1.1965, 1.1934, 1.1902, 1.1911, 1.1974, 1.1950,
3:         1.1859, 1.1728, 1.1584, 1.1580, 1.1023, 1.1280, 1.1454, 1.1438, 1.1376, 1.1360, 1.1394], device='cuda:0',
3:        grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'velocity_v' shape: torch.Size([26245, 972])
3:      first 25 pred values: tensor([ 0.0366,  0.0007, -0.0304, -0.0550, -0.0653, -0.0590, -0.0439, -0.0124,  0.0278,  0.0716,  0.1122,  0.1510,
3:          0.1795,  0.1934,  0.2020,  0.2008,  0.1977,  0.1878,  0.0461,  0.0048, -0.0283, -0.0483, -0.0538, -0.0491,
3:         -0.0316], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'specific_humidity' shape: torch.Size([26347, 972])
3:      first 25 pred values: tensor([ 0.1720,  0.1837,  0.1638,  0.1236,  0.0772,  0.0347,  0.0103, -0.0017, -0.0010,  0.0026, -0.0081, -0.0374,
3:         -0.0805, -0.1312, -0.1722, -0.1920, -0.1898, -0.1762,  0.0562,  0.0835,  0.0795,  0.0432, -0.0028, -0.0584,
3:         -0.0905], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'velocity_z' shape: torch.Size([25351, 972])
3:      first 25 pred values: tensor([ 0.0494,  0.0861,  0.1653,  0.2250,  0.3508,  0.4105,  0.3628,  0.2657,  0.1227,  0.0832,  0.1491,  0.1540,
3:          0.0123, -0.2977, -0.6298, -0.7107, -0.4680, -0.1642,  0.5353,  0.3507,  0.1750,  0.0612,  0.1575,  0.2481,
3:          0.2576], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'temperature' shape: torch.Size([11711, 2187])
3:      first 25 pred values: tensor([0.6892, 0.6921, 0.6917, 0.6962, 0.7122, 0.7391, 0.7731, 0.8041, 0.8289, 0.8462, 0.8584, 0.8699, 0.8837, 0.9015,
3:         0.9212, 0.9422, 0.9627, 0.9799, 0.9948, 1.0069, 1.0149, 1.0178, 1.0153, 1.0059, 0.9908], device='cuda:0',
3:        grad_fn=<SliceBackward0>)
3:   └─ Predictions for 'total_precip' shape: torch.Size([11237, 243])
3:      first 25 pred values: tensor([ 0.0805,  0.0484, -0.0087, -0.0794, -0.1187, -0.1708, -0.2025, -0.2221, -0.2319, -0.0157, -0.0544, -0.0953,
3:         -0.1419, -0.1788, -0.2098, -0.2305, -0.2427, -0.2542, -0.1282, -0.1478, -0.1758, -0.2032, -0.2205, -0.2323,
3:         -0.2449], device='cuda:0', grad_fn=<SliceBackward0>)
3:   └─ Predictions for 't2m' shape: torch.Size([2429, 2187])
3:      first 25 pred values: tensor([-0.5714, -0.5531, -0.5854, -0.5741, -0.5488, -0.5545, -0.5266, -0.5722, -0.5190, -0.4830, -0.5062, -0.4767,
3:         -0.4450, -0.4378, -0.4004, -0.4066, -0.4125, -0.3906, -0.3711, -0.3171, -0.3022, -0.2457, -0.3116, -0.2723,
3:         -0.2724], device='cuda:0', grad_fn=<SliceBackward0>)
2: [DEBUG] TRAIN INPUT BATCH
2: Epoch 9, first input batch shapes / sample data:
2:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([ 0.1194,  0.0792,  0.0433,  0.0101, -0.0273, -0.0704, -0.1131, -0.1505, -0.1820, -0.2041, -0.2112, -0.2091,
2:         -0.2101, -0.2139, -0.2117, -0.2071, -0.2089, -0.2129,  0.2087,  0.1718,  0.1388,  0.1111,  0.0820,  0.0475,
2:          0.0119], device='cuda:0')
2:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
2:        device='cuda:0')
2:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([0.5722, 0.5858, 0.5982, 0.5967, 0.5864, 0.5585, 0.5267, 0.4940, 0.4155, 0.3247, 0.2142, 0.1502, 0.1081, 0.1664,
2:         0.2452, 0.3594, 0.4779, 0.5895, 0.5646, 0.5709, 0.5769, 0.5714, 0.5596, 0.5345, 0.4938], device='cuda:0')
2:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
2:      first 25 values: tensor([-0.3798, -0.0957,  0.1464,  0.0558,  0.0558,  0.4018,  0.6715,  0.6560,  0.5764,  0.3774, -0.0260, -0.2029,
2:         -0.0360, -0.1288, -0.5666, -0.6937, -0.5279, -0.5113, -0.4196, -0.4428, -0.5235, -0.6075, -0.3842,  0.0790,
2:          0.3807], device='cuda:0')
2:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
2:      first 25 values: tensor([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.],
2:        device='cuda:0')
2:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
2:      first 25 values: tensor([-0.2525, -0.2559, -0.2559, -0.2375, -0.2260, -0.2283, -0.2110, -0.1833, -0.1430, -0.2559, -0.2583, -0.2583,
2:         -0.2444, -0.2340, -0.2283, -0.2156, -0.1983, -0.0796, -0.2548, -0.2513, -0.2444, -0.2410, -0.2375, -0.2248,
2:         -0.2133], device='cuda:0')
2:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
2:      first 25 values: tensor([0., 0., 0., -0., -0., -0., -0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., -0., -0.],
2:        device='cuda:0')
2: [DEBUG] TRAIN TARGET BATCH
2: Epoch 9, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2428, 2187])
2:     First 25 batch values:
2: tensor([-0.3743, -0.3576, -0.3420, -0.3271, -0.3190, -0.3062, -0.2896, -0.2604, -0.2257, -0.2492, -0.2763, -0.3091,
2:         -0.3477, -0.3867, -0.4046, -0.3865, -0.2905, -0.2426, -0.2160, -0.1581, -0.1129, -0.0893, -0.0658, -0.0491,
2:          0.0334])
2: [DEBUG] TRAIN PREDICTIONS BATCH
2: Epoch 9, first predictions sample:
2:   └─ Predictions for 'velocity_u' shape: torch.Size([25476, 972])
2:      first 25 pred values: tensor([-0.1830, -0.1685, -0.1485, -0.1257, -0.1036, -0.0847, -0.0685, -0.0567, -0.0512, -0.0522, -0.0591, -0.0753,
2:         -0.0944, -0.1198, -0.1481, -0.1764, -0.2032, -0.2252, -0.1802, -0.1616, -0.1384, -0.1127, -0.0867, -0.0634,
2:         -0.0426], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'velocity_v' shape: torch.Size([26509, 972])
2:      first 25 pred values: tensor([-0.0914, -0.0819, -0.0773, -0.0776, -0.0792, -0.0831, -0.0884, -0.0985, -0.1125, -0.1284, -0.1475, -0.1682,
2:         -0.1882, -0.2130, -0.2334, -0.2535, -0.2626, -0.2624, -0.1023, -0.0780, -0.0596, -0.0496, -0.0461, -0.0451,
2:         -0.0460], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'specific_humidity' shape: torch.Size([26198, 972])
2:      first 25 pred values: tensor([-0.1767, -0.1306, -0.0790, -0.0309,  0.0150,  0.0554,  0.0923,  0.1178,  0.1462,  0.1935,  0.2592,  0.3514,
2:          0.4546,  0.5423,  0.6132,  0.6672,  0.7061,  0.7367, -0.1966, -0.1831, -0.1635, -0.1264, -0.0703, -0.0058,
2:          0.0575], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'velocity_z' shape: torch.Size([25990, 972])
2:      first 25 pred values: tensor([ 0.1355,  0.0693, -0.1085, -0.1071,  0.0172,  0.0246, -0.0528, -0.2163, -0.5265, -0.9539, -1.5575, -2.4334,
2:         -3.2339, -3.3893, -3.0879, -2.7237, -2.1001, -1.3205, -0.0059, -0.0151, -0.0653,  0.0658,  0.1446,  0.0356,
2:         -0.0645], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'temperature' shape: torch.Size([12092, 2187])
2:      first 25 pred values: tensor([-0.2599, -0.2376, -0.2136, -0.1891, -0.1576, -0.1192, -0.0723, -0.0241,  0.0237,  0.0696,  0.1142,  0.1588,
2:          0.2027,  0.2420,  0.2699,  0.2853,  0.2898,  0.2887,  0.2900,  0.2988,  0.3165,  0.3438,  0.3810,  0.4253,
2:          0.4761], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 'total_precip' shape: torch.Size([11306, 243])
2:      first 25 pred values: tensor([-0.2567, -0.2563, -0.2552, -0.2547, -0.2542, -0.2518, -0.2510, -0.2519, -0.2489, -0.2557, -0.2586, -0.2551,
2:         -0.2547, -0.2548, -0.2522, -0.2516, -0.2522, -0.2508, -0.2564, -0.2584, -0.2574, -0.2577, -0.2563, -0.2537,
2:         -0.2546], device='cuda:0', grad_fn=<SliceBackward0>)
2:   └─ Predictions for 't2m' shape: torch.Size([2428, 2187])
2:      first 25 pred values: tensor([-0.5492, -0.5383, -0.5080, -0.4942, -0.4635, -0.4191, -0.4378, -0.3751, -0.3098, -0.3028, -0.2920, -0.1833,
2:         -0.2076, -0.1800, -0.0824, -0.0607, -0.0540,  0.0379, -0.0062,  0.0399,  0.1455,  0.1770,  0.1441,  0.1539,
2:          0.2333], device='cuda:0', grad_fn=<SliceBackward0>)
0: epoch: 9 [1/5 (20%)]	Loss: 0.35874 : 0.09109 :: 0.06933 (1.34 s/sec)
0: epoch: 9 [2/5 (40%)]	Loss: 0.35393 : 0.06340 :: 0.06580 (8.16 s/sec)
0: epoch: 9 [3/5 (60%)]	Loss: 0.34878 : 0.07652 :: 0.07285 (8.14 s/sec)
0: epoch: 9 [4/5 (80%)]	Loss: 0.35130 : 0.10518 :: 0.06843 (8.13 s/sec)
