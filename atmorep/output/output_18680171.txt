0: Wandb run: atmorep-7gvsmux1-18680171
0: l50112:3290110:3290110 [0] NCCL INFO Bootstrap : Using ib0:10.128.11.170<0>
0: l50112:3290110:3290110 [0] NCCL INFO NET/Plugin: No plugin found (libnccl-net.so)
0: l50112:3290110:3290110 [0] NCCL INFO NET/Plugin: Plugin load returned 2 : libnccl-net.so: cannot open shared object file: No such file or directory : when loading libnccl-net.so
0: l50112:3290110:3290110 [0] NCCL INFO NET/Plugin: Using internal network plugin.
0: l50112:3290110:3290110 [0] NCCL INFO cudaDriverVersion 12060
0: NCCL version 2.21.5+cuda12.4
0: l50112:3290110:3290506 [0] NCCL INFO NET/IB : Using [0]mlx5_0:1/IB [1]mlx5_1:1/IB [RO]; OOB ib0:10.128.11.170<0>
0: l50112:3290110:3290506 [0] NCCL INFO Using non-device net plugin version 0
0: l50112:3290110:3290506 [0] NCCL INFO Using network IB
0: l50112:3290110:3290506 [0] NCCL INFO DMA-BUF is available on GPU device 0
0: l50112:3290110:3290506 [0] NCCL INFO ncclCommInitRank comm 0x55555f104420 rank 0 nranks 1 cudaDev 0 nvmlDev 0 busId 3000 commId 0x58ff37bd3aed3616 - Init START
0: l50112:3290110:3290506 [0] NCCL INFO Setting affinity for GPU 0 to ffff0000,00000000,00000000,00000000,ffff0000,00000000
0: l50112:3290110:3290506 [0] NCCL INFO comm 0x55555f104420 rank 0 nRanks 1 nNodes 1 localRanks 1 localRank 0 MNNVL 0
0: l50112:3290110:3290506 [0] NCCL INFO Channel 00/32 :    0
0: l50112:3290110:3290506 [0] NCCL INFO Channel 01/32 :    0
0: l50112:3290110:3290506 [0] NCCL INFO Channel 02/32 :    0
0: l50112:3290110:3290506 [0] NCCL INFO Channel 03/32 :    0
0: l50112:3290110:3290506 [0] NCCL INFO Channel 04/32 :    0
0: l50112:3290110:3290506 [0] NCCL INFO Channel 05/32 :    0
0: l50112:3290110:3290506 [0] NCCL INFO Channel 06/32 :    0
0: l50112:3290110:3290506 [0] NCCL INFO Channel 07/32 :    0
0: l50112:3290110:3290506 [0] NCCL INFO Channel 08/32 :    0
0: l50112:3290110:3290506 [0] NCCL INFO Channel 09/32 :    0
0: l50112:3290110:3290506 [0] NCCL INFO Channel 10/32 :    0
0: l50112:3290110:3290506 [0] NCCL INFO Channel 11/32 :    0
0: l50112:3290110:3290506 [0] NCCL INFO Channel 12/32 :    0
0: l50112:3290110:3290506 [0] NCCL INFO Channel 13/32 :    0
0: l50112:3290110:3290506 [0] NCCL INFO Channel 14/32 :    0
0: l50112:3290110:3290506 [0] NCCL INFO Channel 15/32 :    0
0: l50112:3290110:3290506 [0] NCCL INFO Channel 16/32 :    0
0: l50112:3290110:3290506 [0] NCCL INFO Channel 17/32 :    0
0: l50112:3290110:3290506 [0] NCCL INFO Channel 18/32 :    0
0: l50112:3290110:3290506 [0] NCCL INFO Channel 19/32 :    0
0: l50112:3290110:3290506 [0] NCCL INFO Channel 20/32 :    0
0: l50112:3290110:3290506 [0] NCCL INFO Channel 21/32 :    0
0: l50112:3290110:3290506 [0] NCCL INFO Channel 22/32 :    0
0: l50112:3290110:3290506 [0] NCCL INFO Channel 23/32 :    0
0: l50112:3290110:3290506 [0] NCCL INFO Channel 24/32 :    0
0: l50112:3290110:3290506 [0] NCCL INFO Channel 25/32 :    0
0: l50112:3290110:3290506 [0] NCCL INFO Channel 26/32 :    0
0: l50112:3290110:3290506 [0] NCCL INFO Channel 27/32 :    0
0: l50112:3290110:3290506 [0] NCCL INFO Channel 28/32 :    0
0: l50112:3290110:3290506 [0] NCCL INFO Channel 29/32 :    0
0: l50112:3290110:3290506 [0] NCCL INFO Channel 30/32 :    0
0: l50112:3290110:3290506 [0] NCCL INFO Channel 31/32 :    0
0: l50112:3290110:3290506 [0] NCCL INFO Trees [0] -1/-1/-1->0->-1 [1] -1/-1/-1->0->-1 [2] -1/-1/-1->0->-1 [3] -1/-1/-1->0->-1 [4] -1/-1/-1->0->-1 [5] -1/-1/-1->0->-1 [6] -1/-1/-1->0->-1 [7] -1/-1/-1->0->-1 [8] -1/-1/-1->0->-1 [9] -1/-1/-1->0->-1 [10] -1/-1/-1->0->-1 [11] -1/-1/-1->0->-1 [12] -1/-1/-1->0->-1 [13] -1/-1/-1->0->-1 [14] -1/-1/-1->0->-1 [15] -1/-1/-1->0->-1 [16] -1/-1/-1->0->-1 [17] -1/-1/-1->0->-1 [18] -1/-1/-1->0->-1 [19] -1/-1/-1->0->-1 [20] -1/-1/-1->0->-1 [21] -1/-1/-1->0->-1 [22] -1/-1/-1->0->-1 [23] -1/-1/-1->0->-1 [24] -1/-1/-1->0->-1 [25] -1/-1/-1->0->-1 [26] -1/-1/-1->0->-1 [27] -1/-1/-1->0->-1 [28] -1/-1/-1->0->-1 [29] -1/-1/-1->0->-1 [30] -1/-1/-1->0->-1 [31] -1/-1/-1->0->-1
0: l50112:3290110:3290506 [0] NCCL INFO P2P Chunksize set to 131072
0: l50112:3290110:3290506 [0] NCCL INFO Connected all rings
0: l50112:3290110:3290506 [0] NCCL INFO Connected all trees
0: l50112:3290110:3290506 [0] NCCL INFO 32 coll channels, 32 collnet channels, 0 nvls channels, 32 p2p channels, 32 p2p channels per peer
0: l50112:3290110:3290506 [0] NCCL INFO TUNER/Plugin: Plugin load returned 11 : libnccl-net.so: cannot open shared object file: No such file or directory : when loading libnccl-tuner.so
0: l50112:3290110:3290506 [0] NCCL INFO TUNER/Plugin: Using internal tuner plugin.
0: l50112:3290110:3290506 [0] NCCL INFO ncclCommInitRank comm 0x55555f104420 rank 0 nranks 1 cudaDev 0 nvmlDev 0 busId 3000 commId 0x58ff37bd3aed3616 - Init COMPLETE
0: Running Evaluate.evaluate with mode = forecast
0: Available keys in the Zarr dataset: ['data', 'data_sfc', 'lats', 'lons', 'time']
0: self.ds['data'] : (105192, 7, 5, 721, 1440) :: (105192,)
0: self.lats : (721,)
0: self.lons : (1440,)
0: Available keys in the Zarr dataset: ['data', 'data_sfc', 'lats', 'lons', 'time']
0: self.ds['data'] : (105192, 7, 5, 721, 1440) :: (105192,)
0: self.lats : (721,)
0: self.lons : (1440,)
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: Loaded model id = hjbmsjft.
0: with_ddp : True
0: num_accs_per_task : 4
0: par_rank : 0
0: par_size : 1
0: fields : [['velocity_u', [1, 1024, ['velocity_v', 'temperature'], 0, ['j8dwr5qj', -2]], [96, 105, 114, 123, 137], [12, 3, 6], [3, 18, 18], [0.5, 0.9, 0.2, 0.05]], ['velocity_v', [1, 1024, ['velocity_u', 'temperature'], 0, ['0tlnm5up', -2]], [96, 105, 114, 123, 137], [12, 3, 6], [3, 18, 18], [0.5, 0.9, 0.2, 0.05]], ['specific_humidity', [1, 1024, ['velocity_u', 'velocity_v', 'temperature'], 0, ['v63l01zu', -2]], [96, 105, 114, 123, 137], [12, 3, 6], [3, 18, 18], [0.5, 0.9, 0.2, 0.05]], ['velocity_z', [1, 1024, ['velocity_u', 'velocity_v', 'temperature'], 0, ['9l1errbo', -2]], [96, 105, 114, 123, 137], [12, 3, 6], [3, 18, 18], [0.5, 0.9, 0.2, 0.05]], ['temperature', [1, 1024, ['velocity_u', 'velocity_v', 'specific_humidity'], 0, ['7ojls62c', -2]], [96, 105, 114, 123, 137], [12, 2, 4], [3, 27, 27], [0.5, 0.9, 0.2, 0.05], 'Local'], ['total_precip', [1, 1024, ['velocity_u', 'velocity_v', 'velocity_z', 'specific_humidity'], 0], [0], [12, 6, 12], [3, 9, 9], [0.25, 0.9, 0.1, 0.05]], ['t2m', [1, 1024, ['velocity_u', '
0: velocity_v', 'velocity_z', 'specific_humidity'], 0], [0], [12, 2, 4], [3, 27, 27], [0.5, 0.9, 0.2, 0.05], 'Local']]
0: fields_prediction : [['velocity_u', 0.125], ['velocity_v', 0.125], ['specific_humidity', 0.05], ['velocity_z', 0.01], ['temperature', 0.1], ['total_precip', 0.01], ['t2m', 0.58]]
0: fields_targets : []
0: years_train : [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]
0: years_val : [2021]
0: month : None
0: geo_range_sampling : [[0.0, 360.0], [0.0, 360.0]]
0: time_sampling : 1
0: torch_seed : 5521420987310380410
0: batch_size_validation : 1
0: batch_size : 96
0: num_epochs : 128
0: num_samples_per_epoch : 480
0: num_samples_validate : 128
0: num_loader_workers : 5
0: size_token_info : 8
0: size_token_info_net : 16
0: grad_checkpointing : True
0: with_cls : False
0: with_mixed_precision : True
0: with_layernorm : True
0: coupling_num_heads_per_field : 1
0: dropout_rate : 0.05
0: with_qk_lnorm : True
0: encoder_num_layers : 6
0: encoder_num_heads : 16
0: encoder_num_mlp_layers : 2
0: encoder_att_type : dense
0: decoder_num_layers : 6
0: decoder_num_heads : 16
0: decoder_num_mlp_layers : 2
0: decoder_self_att : False
0: decoder_cross_att_ratio : 0.5
0: decoder_cross_att_rate : 1.0
0: decoder_att_type : dense
0: net_tail_num_nets : 16
0: net_tail_num_layers : 0
0: losses : ['mse_ensemble', 'stats']
0: optimizer_zero : False
0: lr_start : 1e-05
0: lr_max : 2e-05
0: lr_min : 1e-05
0: weight_decay : 0.025
0: lr_decay_rate : 1.025
0: lr_start_epochs : 3
0: model_log_frequency : 256
0: BERT_strategy : forecast
0: forecast_num_tokens : 2
0: BERT_fields_synced : False
0: BERT_mr_max : 2
0: log_test_num_ranks : 4
0: save_grads : False
0: profile : False
0: test_initial : False
0: attention : False
0: rng_seed : None
0: with_wandb : True
0: slurm_job_id : 18680171
0: wandb_id : 7gvsmux1
0: file_path : /work/ab1412/atmorep/data/era5_y2010_2020_res25_with_t2m.zarr
0: n_size : [36, 13.5, 27.0]
0: model_id : hjbmsjft
0: with_pytest : True
0: lat_sampling_weighted : False
0: it == 0 and starting val norms printouts
0: [DEBUG] PREDICTIONS VALIDATION BATCH
0: Normalised validation prediction values for 't2m' with shape: torch.Size([16, 2187])
0:          min = -0.364, max = 0.583, mean = 0.098
0:          sample (first 20): tensor([0.2539, 0.2219, 0.2449, 0.2304, 0.1624, 0.1968, 0.2525, 0.2273, 0.2117, 0.2090, 0.2606, 0.2090, 0.2222, 0.2614,
0:         0.2118, 0.1838, 0.2298, 0.2078, 0.1870, 0.1872])
0: validation loss for strategy=forecast at epoch 0 : 0.26747968792915344
0: validation loss for velocity_u : 0.033129528164863586
0: validation loss for velocity_v : 0.06878841668367386
0: validation loss for specific_humidity : 0.025355610996484756
0: validation loss for velocity_z : 0.4159001111984253
0: validation loss for temperature : 0.06624041497707367
0: validation loss for total_precip : 0.6944760084152222
0: validation loss for t2m : 0.5684669613838196
0: ============================= test session starts ==============================
0: platform linux -- Python 3.10.10, pytest-8.3.4, pluggy-1.5.0
0: rootdir: /work/ab1412
0: collected 3 items
0: 
0: atmorep/tests/validation_test.py Sample 34, Level 96: Timestamp 2021-11-05 17:00:00, Shape (54, 108)
0: Sample 58, Level 96: Timestamp 2021-07-05 15:00:00, Shape (54, 108)
0: Sample 65, Level 96: Timestamp 2021-04-24 13:00:00, Shape (54, 108)
0: Sample 32, Level 96: Timestamp 2021-10-20 03:00:00, Shape (54, 108)
0: Sample 88, Level 96: Timestamp 2021-08-06 08:00:00, Shape (54, 108)
0: .Field: velocity_u, levels: [ 96 105 114 123 137], level: 96, level_idx: 0, samples: [7, 38, 105, 16, 101, 122, 55, 75, 24, 53, 40, 90, 88, 1, 120, 48, 60, 79, 86, 121, 93, 89, 68, 110, 22, 83, 72, 78, 10, 123, 95, 28, 44, 27, 102, 35, 118, 17, 114, 92, 50, 33, 84, 15, 100, 70, 21, 87, 3, 5]
0: Field: velocity_u, levels: [ 96 105 114 123 137], level: 105, level_idx: 1, samples: [7, 38, 105, 16, 101, 122, 55, 75, 24, 53, 40, 90, 88, 1, 120, 48, 60, 79, 86, 121, 93, 89, 68, 110, 22, 83, 72, 78, 10, 123, 95, 28, 44, 27, 102, 35, 118, 17, 114, 92, 50, 33, 84, 15, 100, 70, 21, 87, 3, 5]
0: Field: velocity_u, levels: [ 96 105 114 123 137], level: 114, level_idx: 2, samples: [7, 38, 105, 16, 101, 122, 55, 75, 24, 53, 40, 90, 88, 1, 120, 48, 60, 79, 86, 121, 93, 89, 68, 110, 22, 83, 72, 78, 10, 123, 95, 28, 44, 27, 102, 35, 118, 17, 114, 92, 50, 33, 84, 15, 100, 70, 21, 87, 3, 5]
0: Field: velocity_u, levels: [ 96 105 114 123 137], level: 123, level_idx: 3, samples: [7, 38, 105, 16, 101, 122, 55, 75, 24, 53, 40, 90, 88, 1, 120, 48, 60, 79, 86, 121, 93, 89, 68, 110, 22, 83, 72, 78, 10, 123, 95, 28, 44, 27, 102, 35, 118, 17, 114, 92, 50, 33, 84, 15, 100, 70, 21, 87, 3, 5]
0: Field: velocity_u, levels: [ 96 105 114 123 137], level: 137, level_idx: 4, samples: [7, 38, 105, 16, 101, 122, 55, 75, 24, 53, 40, 90, 88, 1, 120, 48, 60, 79, 86, 121, 93, 89, 68, 110, 22, 83, 72, 78, 10, 123, 95, 28, 44, 27, 102, 35, 118, 17, 114, 92, 50, 33, 84, 15, 100, 70, 21, 87, 3, 5]
0: ..
0: 
0: ============================== 3 passed in 14.30s ==============================
0: ============================= test session starts ==============================
0: platform linux -- Python 3.10.10, pytest-8.3.4, pluggy-1.5.0
0: rootdir: /work/ab1412
0: collected 3 items
0: 
0: atmorep/tests/validation_test.py Sample 45, Level 96: Timestamp 2021-09-21 06:00:00, Shape (54, 108)
0: Sample 28, Level 96: Timestamp 2021-06-21 18:00:00, Shape (54, 108)
0: Sample 74, Level 96: Timestamp 2021-10-29 10:00:00, Shape (54, 108)
0: Sample 127, Level 96: Timestamp 2021-03-03 14:00:00, Shape (54, 108)
0: Sample 96, Level 96: Timestamp 2021-09-06 23:00:00, Shape (54, 108)
0: .Field: velocity_v, levels: [ 96 105 114 123 137], level: 96, level_idx: 0, samples: [0, 117, 122, 1, 66, 88, 90, 35, 100, 105, 28, 58, 104, 80, 83, 10, 82, 74, 48, 24, 59, 89, 69, 2, 54, 20, 22, 53, 19, 45, 41, 87, 110, 70, 123, 94, 3, 65, 62, 26, 56, 44, 6, 46, 13, 73, 51, 11, 49, 126]
0: Field: velocity_v, levels: [ 96 105 114 123 137], level: 105, level_idx: 1, samples: [0, 117, 122, 1, 66, 88, 90, 35, 100, 105, 28, 58, 104, 80, 83, 10, 82, 74, 48, 24, 59, 89, 69, 2, 54, 20, 22, 53, 19, 45, 41, 87, 110, 70, 123, 94, 3, 65, 62, 26, 56, 44, 6, 46, 13, 73, 51, 11, 49, 126]
0: Field: velocity_v, levels: [ 96 105 114 123 137], level: 114, level_idx: 2, samples: [0, 117, 122, 1, 66, 88, 90, 35, 100, 105, 28, 58, 104, 80, 83, 10, 82, 74, 48, 24, 59, 89, 69, 2, 54, 20, 22, 53, 19, 45, 41, 87, 110, 70, 123, 94, 3, 65, 62, 26, 56, 44, 6, 46, 13, 73, 51, 11, 49, 126]
0: Field: velocity_v, levels: [ 96 105 114 123 137], level: 123, level_idx: 3, samples: [0, 117, 122, 1, 66, 88, 90, 35, 100, 105, 28, 58, 104, 80, 83, 10, 82, 74, 48, 24, 59, 89, 69, 2, 54, 20, 22, 53, 19, 45, 41, 87, 110, 70, 123, 94, 3, 65, 62, 26, 56, 44, 6, 46, 13, 73, 51, 11, 49, 126]
0: Field: velocity_v, levels: [ 96 105 114 123 137], level: 137, level_idx: 4, samples: [0, 117, 122, 1, 66, 88, 90, 35, 100, 105, 28, 58, 104, 80, 83, 10, 82, 74, 48, 24, 59, 89, 69, 2, 54, 20, 22, 53, 19, 45, 41, 87, 110, 70, 123, 94, 3, 65, 62, 26, 56, 44, 6, 46, 13, 73, 51, 11, 49, 126]
0: ..
0: 
0: ============================== 3 passed in 3.06s ===============================
0: ============================= test session starts ==============================
0: platform linux -- Python 3.10.10, pytest-8.3.4, pluggy-1.5.0
0: rootdir: /work/ab1412
0: collected 3 items
0: 
0: atmorep/tests/validation_test.py Sample 21, Level 96: Timestamp 2021-09-30 07:00:00, Shape (54, 108)
0: Sample 80, Level 96: Timestamp 2021-09-21 01:00:00, Shape (54, 108)
0: Sample 119, Level 96: Timestamp 2021-10-20 14:00:00, Shape (54, 108)
0: Sample 74, Level 96: Timestamp 2021-10-29 10:00:00, Shape (54, 108)
0: Sample 49, Level 96: Timestamp 2021-06-21 17:00:00, Shape (54, 108)
0: .Field: specific_humidity, levels: [ 96 105 114 123 137], level: 96, level_idx: 0, samples: [21, 36, 119, 42, 39, 70, 93, 68, 117, 6, 100, 48, 50, 23, 114, 64, 27, 85, 107, 83, 104, 29, 53, 58, 46, 109, 95, 25, 120, 17, 121, 2, 35, 43, 47, 9, 127, 79, 90, 26, 14, 81, 113, 15, 89, 5, 30, 84, 123, 94]
0: Field: specific_humidity, levels: [ 96 105 114 123 137], level: 105, level_idx: 1, samples: [21, 36, 119, 42, 39, 70, 93, 68, 117, 6, 100, 48, 50, 23, 114, 64, 27, 85, 107, 83, 104, 29, 53, 58, 46, 109, 95, 25, 120, 17, 121, 2, 35, 43, 47, 9, 127, 79, 90, 26, 14, 81, 113, 15, 89, 5, 30, 84, 123, 94]
0: Field: specific_humidity, levels: [ 96 105 114 123 137], level: 114, level_idx: 2, samples: [21, 36, 119, 42, 39, 70, 93, 68, 117, 6, 100, 48, 50, 23, 114, 64, 27, 85, 107, 83, 104, 29, 53, 58, 46, 109, 95, 25, 120, 17, 121, 2, 35, 43, 47, 9, 127, 79, 90, 26, 14, 81, 113, 15, 89, 5, 30, 84, 123, 94]
0: Field: specific_humidity, levels: [ 96 105 114 123 137], level: 123, level_idx: 3, samples: [21, 36, 119, 42, 39, 70, 93, 68, 117, 6, 100, 48, 50, 23, 114, 64, 27, 85, 107, 83, 104, 29, 53, 58, 46, 109, 95, 25, 120, 17, 121, 2, 35, 43, 47, 9, 127, 79, 90, 26, 14, 81, 113, 15, 89, 5, 30, 84, 123, 94]
0: Field: specific_humidity, levels: [ 96 105 114 123 137], level: 137, level_idx: 4, samples: [21, 36, 119, 42, 39, 70, 93, 68, 117, 6, 100, 48, 50, 23, 114, 64, 27, 85, 107, 83, 104, 29, 53, 58, 46, 109, 95, 25, 120, 17, 121, 2, 35, 43, 47, 9, 127, 79, 90, 26, 14, 81, 113, 15, 89, 5, 30, 84, 123, 94]
0: ..
0: 
0: ============================== 3 passed in 2.29s ===============================
0: ============================= test session starts ==============================
0: platform linux -- Python 3.10.10, pytest-8.3.4, pluggy-1.5.0
0: rootdir: /work/ab1412
0: collected 3 items
0: 
0: atmorep/tests/validation_test.py Sample 57, Level 96: Timestamp 2021-11-07 16:00:00, Shape (54, 108)
0: Sample 42, Level 96: Timestamp 2021-06-02 19:00:00, Shape (54, 108)
0: Sample 71, Level 96: Timestamp 2021-03-02 05:00:00, Shape (54, 108)
0: Sample 96, Level 96: Timestamp 2021-09-06 23:00:00, Shape (54, 108)
0: Sample 82, Level 96: Timestamp 2021-08-19 13:00:00, Shape (54, 108)
0: .Field: velocity_z, levels: [ 96 105 114 123 137], level: 96, level_idx: 0, samples: [41, 22, 87, 113, 105, 21, 35, 92, 53, 14, 33, 57, 37, 27, 56, 46, 11, 13, 0, 124, 64, 109, 83, 69, 63, 23, 99, 71, 98, 48, 7, 100, 79, 20, 117, 116, 61, 114, 16, 67, 44, 68, 74, 77, 73, 85, 17, 126, 88, 2]
0: Field: velocity_z, levels: [ 96 105 114 123 137], level: 105, level_idx: 1, samples: [41, 22, 87, 113, 105, 21, 35, 92, 53, 14, 33, 57, 37, 27, 56, 46, 11, 13, 0, 124, 64, 109, 83, 69, 63, 23, 99, 71, 98, 48, 7, 100, 79, 20, 117, 116, 61, 114, 16, 67, 44, 68, 74, 77, 73, 85, 17, 126, 88, 2]
0: Field: velocity_z, levels: [ 96 105 114 123 137], level: 114, level_idx: 2, samples: [41, 22, 87, 113, 105, 21, 35, 92, 53, 14, 33, 57, 37, 27, 56, 46, 11, 13, 0, 124, 64, 109, 83, 69, 63, 23, 99, 71, 98, 48, 7, 100, 79, 20, 117, 116, 61, 114, 16, 67, 44, 68, 74, 77, 73, 85, 17, 126, 88, 2]
0: Field: velocity_z, levels: [ 96 105 114 123 137], level: 123, level_idx: 3, samples: [41, 22, 87, 113, 105, 21, 35, 92, 53, 14, 33, 57, 37, 27, 56, 46, 11, 13, 0, 124, 64, 109, 83, 69, 63, 23, 99, 71, 98, 48, 7, 100, 79, 20, 117, 116, 61, 114, 16, 67, 44, 68, 74, 77, 73, 85, 17, 126, 88, 2]
0: Field: velocity_z, levels: [ 96 105 114 123 137], level: 137, level_idx: 4, samples: [41, 22, 87, 113, 105, 21, 35, 92, 53, 14, 33, 57, 37, 27, 56, 46, 11, 13, 0, 124, 64, 109, 83, 69, 63, 23, 99, 71, 98, 48, 7, 100, 79, 20, 117, 116, 61, 114, 16, 67, 44, 68, 74, 77, 73, 85, 17, 126, 88, 2]
0: ..
0: 
0: ============================== 3 passed in 1.96s ===============================
0: ============================= test session starts ==============================
0: platform linux -- Python 3.10.10, pytest-8.3.4, pluggy-1.5.0
0: rootdir: /work/ab1412
0: collected 3 items
0: 
0: atmorep/tests/validation_test.py Sample 120, Level 96: Timestamp 2021-12-02 09:00:00, Shape (54, 108)
0: Sample 50, Level 96: Timestamp 2021-10-24 09:00:00, Shape (54, 108)
0: Sample 118, Level 96: Timestamp 2021-10-23 05:00:00, Shape (54, 108)
0: Sample 82, Level 96: Timestamp 2021-08-19 13:00:00, Shape (54, 108)
0: Sample 39, Level 96: Timestamp 2021-09-01 23:00:00, Shape (54, 108)
0: .Field: temperature, levels: [ 96 105 114 123 137], level: 96, level_idx: 0, samples: [127, 22, 101, 15, 94, 12, 75, 104, 120, 9, 77, 13, 24, 3, 98, 1, 97, 26, 51, 117, 53, 108, 72, 25, 82, 103, 121, 32, 71, 23, 93, 105, 40, 6, 49, 27, 41, 86, 38, 69, 96, 29, 18, 84, 14, 34, 88, 8, 74, 99]
0: Field: temperature, levels: [ 96 105 114 123 137], level: 105, level_idx: 1, samples: [127, 22, 101, 15, 94, 12, 75, 104, 120, 9, 77, 13, 24, 3, 98, 1, 97, 26, 51, 117, 53, 108, 72, 25, 82, 103, 121, 32, 71, 23, 93, 105, 40, 6, 49, 27, 41, 86, 38, 69, 96, 29, 18, 84, 14, 34, 88, 8, 74, 99]
0: Field: temperature, levels: [ 96 105 114 123 137], level: 114, level_idx: 2, samples: [127, 22, 101, 15, 94, 12, 75, 104, 120, 9, 77, 13, 24, 3, 98, 1, 97, 26, 51, 117, 53, 108, 72, 25, 82, 103, 121, 32, 71, 23, 93, 105, 40, 6, 49, 27, 41, 86, 38, 69, 96, 29, 18, 84, 14, 34, 88, 8, 74, 99]
0: Field: temperature, levels: [ 96 105 114 123 137], level: 123, level_idx: 3, samples: [127, 22, 101, 15, 94, 12, 75, 104, 120, 9, 77, 13, 24, 3, 98, 1, 97, 26, 51, 117, 53, 108, 72, 25, 82, 103, 121, 32, 71, 23, 93, 105, 40, 6, 49, 27, 41, 86, 38, 69, 96, 29, 18, 84, 14, 34, 88, 8, 74, 99]
0: Field: temperature, levels: [ 96 105 114 123 137], level: 137, level_idx: 4, samples: [127, 22, 101, 15, 94, 12, 75, 104, 120, 9, 77, 13, 24, 3, 98, 1, 97, 26, 51, 117, 53, 108, 72, 25, 82, 103, 121, 32, 71, 23, 93, 105, 40, 6, 49, 27, 41, 86, 38, 69, 96, 29, 18, 84, 14, 34, 88, 8, 74, 99]
0: ..
0: 
0: ============================== 3 passed in 1.68s ===============================
0: ============================= test session starts ==============================
0: platform linux -- Python 3.10.10, pytest-8.3.4, pluggy-1.5.0
0: rootdir: /work/ab1412
0: collected 3 items
0: 
0: atmorep/tests/validation_test.py Sample 56, Level 96: Timestamp 2021-01-03 03:00:00, Shape (54, 108)
0: Sample 93, Level 96: Timestamp 2021-06-02 19:00:00, Shape (54, 108)
0: Sample 54, Level 96: Timestamp 2021-02-09 11:00:00, Shape (54, 108)
0: Sample 0, Level 96: Timestamp 2021-04-18 13:00:00, Shape (54, 108)
0: Sample 96, Level 96: Timestamp 2021-09-06 23:00:00, Shape (54, 108)
0: .Field: total_precip, levels: [ 96 105 114 123 137], level: 96, level_idx: 0, samples: [86, 126, 90, 35, 4, 37, 72, 75, 46, 53, 47, 55, 92, 16, 41, 78, 112, 50, 25, 122, 117, 87, 95, 57, 65, 115, 118, 26, 125, 52, 45, 19, 109, 107, 121, 54, 79, 68, 104, 33, 69, 70, 97, 66, 111, 42, 17, 36, 24, 120]
0: Field: total_precip, levels: [ 96 105 114 123 137], level: 105, level_idx: 1, samples: [86, 126, 90, 35, 4, 37, 72, 75, 46, 53, 47, 55, 92, 16, 41, 78, 112, 50, 25, 122, 117, 87, 95, 57, 65, 115, 118, 26, 125, 52, 45, 19, 109, 107, 121, 54, 79, 68, 104, 33, 69, 70, 97, 66, 111, 42, 17, 36, 24, 120]
0: F
0: 
0: =================================== FAILURES ===================================
0: _______________________________ test_coordinates _______________________________
0: 
0: field = 'total_precip', model_id = '7gvsmux1', BERT = False, epoch = 0
0: 
0:     def test_coordinates(field, model_id, BERT, epoch = 0):
0:         """
0:         Check that coordinates match between target and prediction.
0:         Check also that latitude and longitudes are in geographical coordinates
0:         50 random samples.
0:         """
0:     
0:         store_t = zarr.ZipStore(atmorep_target().format(model_id, model_id, str(epoch).zfill(5)))
0:         target = zarr.group(store_t)
0:     
0:         store_p = zarr.ZipStore(atmorep_pred().format(model_id, model_id, str(epoch).zfill(5)))
0:         pred = zarr.group(store_p)
0:     
0:         nsamples = min(len(target[field]), 50)
0:         samples = rnd.sample(range(len(target[field])), nsamples)
0:         #levels = [int(f.split("=")[1]) for f in target[f"{field}/sample=00000"]] if BERT else target[f"{field}/sample=00000"].ml[:]
0:         ##### new levels for surface fields - added this test ####
0:         if 'ml' in target[f"{field}/sample=00000"]:
0:             levels = target[f"{field}/sample=00000"].ml[:]
0:         else:
0:             levels = [0]  # For surface fields
0:         #####
0:         get_data = get_BERT if BERT else get_forecast
0:     
0:         for level in levels:
0:             ### also added this
0:             if len(levels) == 1:
0:                 level_idx = 0
0:             else:
0:                 level_idx = level if BERT else np.where(np.array(levels) == level)[0].tolist()[0]
0:     
0:             print(f"Field: {field}, levels: {levels}, level: {level}, level_idx: {level_idx}, samples: {samples}")
0:     
0:             ####
0:             for s in samples:
0: >               _, datetime_target, lats_target, lons_target = get_data(target,field, s, level_idx)
0: 
0: atmorep/tests/validation_test.py:177: 
0: _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
0: atmorep/tests/test_utils.py:37: in get_forecast
0:     data = atmorep_sample.data[level_idx, 0]
0: pyenv/lib/python3.10/site-packages/zarr/core.py:797: in __getitem__
0:     result = self.get_basic_selection(pure_selection, fields=fields)
0: pyenv/lib/python3.10/site-packages/zarr/core.py:923: in get_basic_selection
0:     return self._get_basic_selection_nd(selection=selection, out=out, fields=fields)
0: pyenv/lib/python3.10/site-packages/zarr/core.py:963: in _get_basic_selection_nd
0:     indexer = BasicIndexer(selection, self)
0: pyenv/lib/python3.10/site-packages/zarr/indexing.py:336: in __init__
0:     dim_indexer = IntDimIndexer(dim_sel, dim_len, dim_chunk_len)
0: pyenv/lib/python3.10/site-packages/zarr/indexing.py:150: in __init__
0:     dim_sel = normalize_integer_selection(dim_sel, dim_len)
0: _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
0: 
0: dim_sel = 1, dim_len = 1
0: 
0:     def normalize_integer_selection(dim_sel, dim_len):
0:         # normalize type to int
0:         dim_sel = int(dim_sel)
0:     
0:         # handle wraparound
0:         if dim_sel < 0:
0:             dim_sel = dim_len + dim_sel
0:     
0:         # handle out of bounds
0:         if dim_sel >= dim_len or dim_sel < 0:
0: >           raise BoundsCheckError(dim_len)
0: E           zarr.errors.BoundsCheckError: index out of bounds for dimension with length 1
0: 
0: pyenv/lib/python3.10/site-packages/zarr/indexing.py:125: BoundsCheckError
0: =========================== short test summary info ============================
0: FAILED atmorep/tests/validation_test.py::test_coordinates - zarr.errors.Bound...
0: !!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!
0: ========================= 1 failed, 1 passed in 0.78s ==========================
0: ============================= test session starts ==============================
0: platform linux -- Python 3.10.10, pytest-8.3.4, pluggy-1.5.0
0: rootdir: /work/ab1412
0: collected 3 items
0: 
0: atmorep/tests/validation_test.py Sample 25, Level 96: Timestamp 2021-07-20 00:00:00, Shape (54, 108)
0: Sample 20, Level 96: Timestamp 2021-06-22 07:00:00, Shape (54, 108)
0: Sample 88, Level 96: Timestamp 2021-08-06 08:00:00, Shape (54, 108)
0: Sample 39, Level 96: Timestamp 2021-09-01 23:00:00, Shape (54, 108)
0: Sample 52, Level 96: Timestamp 2021-07-02 05:00:00, Shape (54, 108)
0: .Field: t2m, levels: [ 96 105 114 123 137], level: 96, level_idx: 0, samples: [37, 112, 23, 97, 30, 55, 48, 40, 65, 125, 109, 16, 60, 43, 88, 86, 94, 49, 27, 114, 36, 33, 90, 5, 93, 101, 39, 11, 119, 58, 25, 78, 104, 95, 17, 15, 47, 50, 89, 20, 68, 18, 84, 7, 107, 64, 21, 118, 117, 99]
0: Field: t2m, levels: [ 96 105 114 123 137], level: 105, level_idx: 1, samples: [37, 112, 23, 97, 30, 55, 48, 40, 65, 125, 109, 16, 60, 43, 88, 86, 94, 49, 27, 114, 36, 33, 90, 5, 93, 101, 39, 11, 119, 58, 25, 78, 104, 95, 17, 15, 47, 50, 89, 20, 68, 18, 84, 7, 107, 64, 21, 118, 117, 99]
0: F
0: 
0: =================================== FAILURES ===================================
0: _______________________________ test_coordinates _______________________________
0: 
0: field = 't2m', model_id = '7gvsmux1', BERT = False, epoch = 0
0: 
0:     def test_coordinates(field, model_id, BERT, epoch = 0):
0:         """
0:         Check that coordinates match between target and prediction.
0:         Check also that latitude and longitudes are in geographical coordinates
0:         50 random samples.
0:         """
0:     
0:         store_t = zarr.ZipStore(atmorep_target().format(model_id, model_id, str(epoch).zfill(5)))
0:         target = zarr.group(store_t)
0:     
0:         store_p = zarr.ZipStore(atmorep_pred().format(model_id, model_id, str(epoch).zfill(5)))
0:         pred = zarr.group(store_p)
0:     
0:         nsamples = min(len(target[field]), 50)
0:         samples = rnd.sample(range(len(target[field])), nsamples)
0:         #levels = [int(f.split("=")[1]) for f in target[f"{field}/sample=00000"]] if BERT else target[f"{field}/sample=00000"].ml[:]
0:         ##### new levels for surface fields - added this test ####
0:         if 'ml' in target[f"{field}/sample=00000"]:
0:             levels = target[f"{field}/sample=00000"].ml[:]
0:         else:
0:             levels = [0]  # For surface fields
0:         #####
0:         get_data = get_BERT if BERT else get_forecast
0:     
0:         for level in levels:
0:             ### also added this
0:             if len(levels) == 1:
0:                 level_idx = 0
0:             else:
0:                 level_idx = level if BERT else np.where(np.array(levels) == level)[0].tolist()[0]
0:     
0:             print(f"Field: {field}, levels: {levels}, level: {level}, level_idx: {level_idx}, samples: {samples}")
0:     
0:             ####
0:             for s in samples:
0: >               _, datetime_target, lats_target, lons_target = get_data(target,field, s, level_idx)
0: 
0: atmorep/tests/validation_test.py:177: 
0: _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
0: atmorep/tests/test_utils.py:37: in get_forecast
0:     data = atmorep_sample.data[level_idx, 0]
0: pyenv/lib/python3.10/site-packages/zarr/core.py:797: in __getitem__
0:     result = self.get_basic_selection(pure_selection, fields=fields)
0: pyenv/lib/python3.10/site-packages/zarr/core.py:923: in get_basic_selection
0:     return self._get_basic_selection_nd(selection=selection, out=out, fields=fields)
0: pyenv/lib/python3.10/site-packages/zarr/core.py:963: in _get_basic_selection_nd
0:     indexer = BasicIndexer(selection, self)
0: pyenv/lib/python3.10/site-packages/zarr/indexing.py:336: in __init__
0:     dim_indexer = IntDimIndexer(dim_sel, dim_len, dim_chunk_len)
0: pyenv/lib/python3.10/site-packages/zarr/indexing.py:150: in __init__
0:     dim_sel = normalize_integer_selection(dim_sel, dim_len)
0: _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
0: 
0: dim_sel = 1, dim_len = 1
0: 
0:     def normalize_integer_selection(dim_sel, dim_len):
0:         # normalize type to int
0:         dim_sel = int(dim_sel)
0:     
0:         # handle wraparound
0:         if dim_sel < 0:
0:             dim_sel = dim_len + dim_sel
0:     
0:         # handle out of bounds
0:         if dim_sel >= dim_len or dim_sel < 0:
0: >           raise BoundsCheckError(dim_len)
0: E           zarr.errors.BoundsCheckError: index out of bounds for dimension with length 1
0: 
0: pyenv/lib/python3.10/site-packages/zarr/indexing.py:125: BoundsCheckError
0: =========================== short test summary info ============================
0: FAILED atmorep/tests/validation_test.py::test_coordinates - zarr.errors.Bound...
0: !!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!
0: ========================= 1 failed, 1 passed in 0.40s ==========================
0: time 348.3976411819458
0: [1;34mwandb[0m:
0: [1;34mwandb[0m: You can sync this run to the cloud by running:
0: [1;34mwandb[0m: [1mwandb sync /work/ab1412/atmorep/wandb/offline-run-20250728_135836-7gvsmux1[0m
0: [1;34mwandb[0m: Find logs at: [1;35mwandb/offline-run-20250728_135836-7gvsmux1/logs[0m
0: l50112:3290110:3290509 [0] NCCL INFO [Service thread] Connection closed by localRank 0
0: l50112:3290110:3291146 [0] NCCL INFO comm 0x55555f104420 rank 0 nranks 1 cudaDev 0 busId 3000 - Abort COMPLETE
