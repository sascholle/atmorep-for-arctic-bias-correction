0: Wandb run: atmorep-p4qadjd8-18349908
0: l50133:404896:404896 [0] NCCL INFO Bootstrap : Using ib0:10.128.11.184<0>
0: l50133:404896:404896 [0] NCCL INFO NET/Plugin: No plugin found (libnccl-net.so)
0: l50133:404896:404896 [0] NCCL INFO NET/Plugin: Plugin load returned 2 : libnccl-net.so: cannot open shared object file: No such file or directory : when loading libnccl-net.so
0: l50133:404896:404896 [0] NCCL INFO NET/Plugin: Using internal network plugin.
0: l50133:404896:404896 [0] NCCL INFO cudaDriverVersion 12050
0: NCCL version 2.21.5+cuda12.4
1: l50148:1520888:1520888 [0] NCCL INFO cudaDriverVersion 12050
1: l50148:1520888:1520888 [0] NCCL INFO Bootstrap : Using ib0:10.128.11.194<0>
1: l50148:1520888:1520888 [0] NCCL INFO NET/Plugin: No plugin found (libnccl-net.so)
1: l50148:1520888:1520888 [0] NCCL INFO NET/Plugin: Plugin load returned 2 : libnccl-net.so: cannot open shared object file: No such file or directory : when loading libnccl-net.so
1: l50148:1520888:1520888 [0] NCCL INFO NET/Plugin: Using internal network plugin.
0: l50133:404896:405305 [0] NCCL INFO NET/IB : Using [0]mlx5_0:1/IB [1]mlx5_1:1/IB [RO]; OOB ib0:10.128.11.184<0>
0: l50133:404896:405305 [0] NCCL INFO Using non-device net plugin version 0
0: l50133:404896:405305 [0] NCCL INFO Using network IB
1: l50148:1520888:1521045 [0] NCCL INFO NET/IB : Using [0]mlx5_0:1/IB [1]mlx5_1:1/IB [RO]; OOB ib0:10.128.11.194<0>
1: l50148:1520888:1521045 [0] NCCL INFO Using non-device net plugin version 0
1: l50148:1520888:1521045 [0] NCCL INFO Using network IB
0: l50133:404896:405305 [0] NCCL INFO ncclCommInitRank comm 0x55555f294060 rank 0 nranks 2 cudaDev 0 nvmlDev 0 busId 3000 commId 0x510276ca05e3decf - Init START
1: l50148:1520888:1521045 [0] NCCL INFO ncclCommInitRank comm 0x55555ee4d420 rank 1 nranks 2 cudaDev 0 nvmlDev 0 busId 3000 commId 0x510276ca05e3decf - Init START
1: l50148:1520888:1521045 [0] NCCL INFO Setting affinity for GPU 0 to ffff0000,00000000,00000000,00000000,ffff0000,00000000
0: l50133:404896:405305 [0] NCCL INFO Setting affinity for GPU 0 to ffff0000,00000000,00000000,00000000,ffff0000,00000000
0: l50133:404896:405305 [0] NCCL INFO comm 0x55555f294060 rank 0 nRanks 2 nNodes 2 localRanks 1 localRank 0 MNNVL 0
0: l50133:404896:405305 [0] NCCL INFO Channel 00/04 :    0   1
0: l50133:404896:405305 [0] NCCL INFO Channel 01/04 :    0   1
0: l50133:404896:405305 [0] NCCL INFO Channel 02/04 :    0   1
0: l50133:404896:405305 [0] NCCL INFO Channel 03/04 :    0   1
0: l50133:404896:405305 [0] NCCL INFO Trees [0] 1/-1/-1->0->-1 [1] 1/-1/-1->0->-1 [2] -1/-1/-1->0->1 [3] -1/-1/-1->0->1
0: l50133:404896:405305 [0] NCCL INFO P2P Chunksize set to 131072
1: l50148:1520888:1521045 [0] NCCL INFO comm 0x55555ee4d420 rank 1 nRanks 2 nNodes 2 localRanks 1 localRank 0 MNNVL 0
1: l50148:1520888:1521045 [0] NCCL INFO Trees [0] -1/-1/-1->1->0 [1] -1/-1/-1->1->0 [2] 0/-1/-1->1->-1 [3] 0/-1/-1->1->-1
1: l50148:1520888:1521045 [0] NCCL INFO P2P Chunksize set to 131072
0: l50133:404896:405305 [0] NCCL INFO Channel 00/0 : 1[0] -> 0[0] [receive] via NET/IB/0
1: l50148:1520888:1521045 [0] NCCL INFO Channel 00/0 : 0[0] -> 1[0] [receive] via NET/IB/0
0: l50133:404896:405305 [0] NCCL INFO Channel 01/0 : 1[0] -> 0[0] [receive] via NET/IB/1
1: l50148:1520888:1521045 [0] NCCL INFO Channel 01/0 : 0[0] -> 1[0] [receive] via NET/IB/1
1: l50148:1520888:1521045 [0] NCCL INFO Channel 02/0 : 0[0] -> 1[0] [receive] via NET/IB/0
0: l50133:404896:405305 [0] NCCL INFO Channel 02/0 : 1[0] -> 0[0] [receive] via NET/IB/0
1: l50148:1520888:1521045 [0] NCCL INFO Channel 03/0 : 0[0] -> 1[0] [receive] via NET/IB/1
1: l50148:1520888:1521045 [0] NCCL INFO Channel 00/0 : 1[0] -> 0[0] [send] via NET/IB/0
0: l50133:404896:405305 [0] NCCL INFO Channel 03/0 : 1[0] -> 0[0] [receive] via NET/IB/1
1: l50148:1520888:1521045 [0] NCCL INFO Channel 01/0 : 1[0] -> 0[0] [send] via NET/IB/1
1: l50148:1520888:1521045 [0] NCCL INFO Channel 02/0 : 1[0] -> 0[0] [send] via NET/IB/0
0: l50133:404896:405305 [0] NCCL INFO Channel 00/0 : 0[0] -> 1[0] [send] via NET/IB/0
1: l50148:1520888:1521045 [0] NCCL INFO Channel 03/0 : 1[0] -> 0[0] [send] via NET/IB/1
0: l50133:404896:405305 [0] NCCL INFO Channel 01/0 : 0[0] -> 1[0] [send] via NET/IB/1
0: l50133:404896:405305 [0] NCCL INFO Channel 02/0 : 0[0] -> 1[0] [send] via NET/IB/0
0: l50133:404896:405305 [0] NCCL INFO Channel 03/0 : 0[0] -> 1[0] [send] via NET/IB/1
0: l50133:404896:405308 [0] NCCL INFO NCCL_IB_TIMEOUT set by environment to 250.
0: l50133:404896:405308 [0] NCCL INFO NCCL_IB_RETRY_CNT set by environment to 50.
1: l50148:1520888:1521048 [0] NCCL INFO NCCL_IB_TIMEOUT set by environment to 250.
1: l50148:1520888:1521048 [0] NCCL INFO NCCL_IB_RETRY_CNT set by environment to 50.
0: l50133:404896:405305 [0] NCCL INFO Connected all rings
0: l50133:404896:405305 [0] NCCL INFO Connected all trees
1: l50148:1520888:1521045 [0] NCCL INFO Connected all rings
1: l50148:1520888:1521045 [0] NCCL INFO Connected all trees
1: l50148:1520888:1521045 [0] NCCL INFO threadThresholds 8/8/64 | 16/8/64 | 512 | 512
1: l50148:1520888:1521045 [0] NCCL INFO 4 coll channels, 4 collnet channels, 0 nvls channels, 4 p2p channels, 2 p2p channels per peer
0: l50133:404896:405305 [0] NCCL INFO threadThresholds 8/8/64 | 16/8/64 | 512 | 512
0: l50133:404896:405305 [0] NCCL INFO 4 coll channels, 4 collnet channels, 0 nvls channels, 4 p2p channels, 2 p2p channels per peer
0: l50133:404896:405305 [0] NCCL INFO TUNER/Plugin: Plugin load returned 11 : libnccl-net.so: cannot open shared object file: No such file or directory : when loading libnccl-tuner.so
0: l50133:404896:405305 [0] NCCL INFO TUNER/Plugin: Using internal tuner plugin.
0: l50133:404896:405305 [0] NCCL INFO ncclCommInitRank comm 0x55555f294060 rank 0 nranks 2 cudaDev 0 nvmlDev 0 busId 3000 commId 0x510276ca05e3decf - Init COMPLETE
1: l50148:1520888:1521045 [0] NCCL INFO TUNER/Plugin: Plugin load returned 11 : libnccl-net.so: cannot open shared object file: No such file or directory : when loading libnccl-tuner.so
1: l50148:1520888:1521045 [0] NCCL INFO TUNER/Plugin: Using internal tuner plugin.
1: l50148:1520888:1521045 [0] NCCL INFO ncclCommInitRank comm 0x55555ee4d420 rank 1 nranks 2 cudaDev 0 nvmlDev 0 busId 3000 commId 0x510276ca05e3decf - Init COMPLETE
0: with_ddp : True
0: num_accs_per_task : 1
0: par_rank : 0
0: par_size : 2
0: fields : [['velocity_u', [1, 1024, ['velocity_v', 'temperature'], 0, ['j8dwr5qj', -2]], [96, 105, 114, 123, 137], [12, 3, 6], [3, 18, 18], [0.5, 0.9, 0.2, 0.05]], ['velocity_v', [1, 1024, ['velocity_u', 'temperature'], 0, ['0tlnm5up', -2]], [96, 105, 114, 123, 137], [12, 3, 6], [3, 18, 18], [0.5, 0.9, 0.2, 0.05]], ['specific_humidity', [1, 1024, ['velocity_u', 'velocity_v', 'temperature'], 0, ['v63l01zu', -2]], [96, 105, 114, 123, 137], [12, 3, 6], [3, 18, 18], [0.5, 0.9, 0.2, 0.05]], ['velocity_z', [1, 1024, ['velocity_u', 'velocity_v', 'temperature'], 0, ['9l1errbo', -2]], [96, 105, 114, 123, 137], [12, 3, 6], [3, 18, 18], [0.5, 0.9, 0.2, 0.05]], ['temperature', [1, 1024, ['velocity_u', 'velocity_v', 'specific_humidity'], 0, ['7ojls62c', -2]], [96, 105, 114, 123, 137], [12, 2, 4], [3, 27, 27], [0.5, 0.9, 0.2, 0.05], 'Local'], ['total_precip', [1, 1024, ['velocity_u', 'velocity_v', 'velocity_z', 'specific_humidity'], 0], [0], [12, 6, 12], [3, 9, 9], [0.25, 0.9, 0.1, 0.05]], ['t2m', [1, 1024, ['velocity_u', '
0: velocity_v', 'velocity_z', 'specific_humidity'], 0], [0], [12, 2, 4], [3, 27, 27], [0.5, 0.9, 0.2, 0.05], 'Local']]
0: fields_prediction : [['velocity_u', 0.25], ['velocity_v', 0.25], ['specific_humidity', 0.15], ['velocity_z', 0.025], ['temperature', 0.2], ['total_precip', 0.025], ['t2m', 0.1]]
0: fields_targets : []
0: years_train : [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]
0: years_val : [2021]
0: month : None
0: geo_range_sampling : [[0.0, 360.0], [0.0, 360.0]]
0: time_sampling : 1
0: torch_seed : 5521420987310380410
0: batch_size_validation : 1
0: batch_size : 96
0: num_epochs : 128
0: num_samples_per_epoch : 480
0: num_samples_validate : 128
0: num_loader_workers : 5
0: size_token_info : 8
0: size_token_info_net : 16
0: grad_checkpointing : True
0: with_cls : False
0: with_mixed_precision : True
0: with_layernorm : True
0: coupling_num_heads_per_field : 1
0: dropout_rate : 0.05
0: with_qk_lnorm : True
0: encoder_num_layers : 6
0: encoder_num_heads : 16
0: encoder_num_mlp_layers : 2
0: encoder_att_type : dense
0: decoder_num_layers : 6
0: decoder_num_heads : 16
0: decoder_num_mlp_layers : 2
0: decoder_self_att : False
0: decoder_cross_att_ratio : 0.5
0: decoder_cross_att_rate : 1.0
0: decoder_att_type : dense
0: net_tail_num_nets : 16
0: net_tail_num_layers : 0
0: losses : ['mse_ensemble']
0: optimizer_zero : False
0: lr_start : 1e-05
0: lr_max : 2e-05
0: lr_min : 1e-05
0: weight_decay : 0.025
0: lr_decay_rate : 1.025
0: lr_start_epochs : 3
0: model_log_frequency : 256
0: BERT_strategy : forecast
0: forecast_num_tokens : 2
0: BERT_fields_synced : False
0: BERT_mr_max : 2
0: log_test_num_ranks : 0
0: save_grads : False
0: profile : False
0: test_initial : False
0: attention : False
0: rng_seed : None
0: with_wandb : True
0: slurm_job_id : 18349908
0: wandb_id : p4qadjd8
0: file_path : /work/ab1412/atmorep/data/era5_y2010_2020_res25_with_t2m.zarr
0: n_size : [36, 13.5, 27.0]
0: model_id : wc5e2i3t
0: years_test : [2021]
0: Available keys in the Zarr dataset: ['data', 'data_sfc', 'lats', 'lons', 'time']
1: Available keys in the Zarr dataset: ['data', 'data_sfc', 'lats', 'lons', 'time']
1: self.ds['data'] : (105192, 7, 5, 721, 1440) :: (105192,)
1: self.lats : (721,)
1: self.lons : (1440,)
0: self.ds['data'] : (105192, 7, 5, 721, 1440) :: (105192,)
0: self.lats : (721,)
0: self.lons : (1440,)
0: Available keys in the Zarr dataset: ['data', 'data_sfc', 'lats', 'lons', 'time']
0: self.ds['data'] : (105192, 7, 5, 721, 1440) :: (105192,)
0: self.lats : (721,)
0: self.lons : (1440,)
1: Available keys in the Zarr dataset: ['data', 'data_sfc', 'lats', 'lons', 'time']
1: self.ds['data'] : (105192, 7, 5, 721, 1440) :: (105192,)
1: self.lats : (721,)
1: self.lons : (1440,)
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: Loaded AtmoRep: ignoring 208 elements: ['embeds_token_info.6.weight', 'embeds_token_info.6.bias', 'embeds.6.weight', 'embeds.6.bias', 'encoders.6.embed.weight', 'encoders.6.embed.bias', 'encoders.6.heads.0.proj_out.weight', 'encoders.6.heads.0.proj_heads.weight', 'encoders.6.heads.0.proj_heads_other.0.weight', 'encoders.6.heads.0.proj_heads_other.1.weight', 'encoders.6.heads.0.proj_heads_other.2.weight', 'encoders.6.heads.0.proj_heads_other.3.weight', 'encoders.6.heads.0.proj_heads_other.4.weight', 'encoders.6.heads.1.proj_out.weight', 'encoders.6.heads.1.proj_heads.weight', 'encoders.6.heads.1.proj_heads_other.0.weight', 'encoders.6.heads.1.proj_heads_other.1.weight', 'encoders.6.heads.1.proj_heads_other.2.weight', 'encoders.6.heads.1.proj_heads_other.3.weight', 'encoders.6.heads.1.proj_heads_other.4.weight', 'encoders.6.heads.2.proj_out.weight', 'encoders.6.heads.2.proj_heads.weight', 'encoders.6.heads.2.proj_heads_other.0.weight', 'encoders.6.heads.2.proj_heads_other.1.weight', 'encoders.6.heads.2.proj_hea
0: ds_other.2.weight', 'encoders.6.heads.2.proj_heads_other.3.weight', 'encoders.6.heads.2.proj_heads_other.4.weight', 'encoders.6.heads.3.proj_out.weight', 'encoders.6.heads.3.proj_heads.weight', 'encoders.6.heads.3.proj_heads_other.0.weight', 'encoders.6.heads.3.proj_heads_other.1.weight', 'encoders.6.heads.3.proj_heads_other.2.weight', 'encoders.6.heads.3.proj_heads_other.3.weight', 'encoders.6.heads.3.proj_heads_other.4.weight', 'encoders.6.heads.4.proj_out.weight', 'encoders.6.heads.4.proj_heads.weight', 'encoders.6.heads.4.proj_heads_other.0.weight', 'encoders.6.heads.4.proj_heads_other.1.weight', 'encoders.6.heads.4.proj_heads_other.2.weight', 'encoders.6.heads.4.proj_heads_other.3.weight', 'encoders.6.heads.4.proj_heads_other.4.weight', 'encoders.6.heads.5.proj_out.weight', 'encoders.6.heads.5.proj_heads.weight', 'encoders.6.heads.5.proj_heads_other.0.weight', 'encoders.6.heads.5.proj_heads_other.1.weight', 'encoders.6.heads.5.proj_heads_other.2.weight', 'encoders.6.heads.5.proj_heads_other.3.weight', 'e
0: ncoders.6.heads.5.proj_heads_other.4.weight', 'encoders.6.mlps.0.blocks.0.weight', 'encoders.6.mlps.0.blocks.0.bias', 'encoders.6.mlps.0.blocks.3.weight', 'encoders.6.mlps.0.blocks.3.bias', 'encoders.6.mlps.1.blocks.0.weight', 'encoders.6.mlps.1.blocks.0.bias', 'encoders.6.mlps.1.blocks.3.weight', 'encoders.6.mlps.1.blocks.3.bias', 'encoders.6.mlps.2.blocks.0.weight', 'encoders.6.mlps.2.blocks.0.bias', 'encoders.6.mlps.2.blocks.3.weight', 'encoders.6.mlps.2.blocks.3.bias', 'encoders.6.mlps.3.blocks.0.weight', 'encoders.6.mlps.3.blocks.0.bias', 'encoders.6.mlps.3.blocks.3.weight', 'encoders.6.mlps.3.blocks.3.bias', 'encoders.6.mlps.4.blocks.0.weight', 'encoders.6.mlps.4.blocks.0.bias', 'encoders.6.mlps.4.blocks.3.weight', 'encoders.6.mlps.4.blocks.3.bias', 'encoders.6.mlps.5.blocks.0.weight', 'encoders.6.mlps.5.blocks.0.bias', 'encoders.6.mlps.5.blocks.3.weight', 'encoders.6.mlps.5.blocks.3.bias', 'decoders.6.blocks.0.proj_heads.weight', 'decoders.6.blocks.0.proj_heads_o_q.weight', 'decoders.6.blocks.0.proj_he
0: ads_o_kv.weight', 'decoders.6.blocks.0.ln_q.weight', 'decoders.6.blocks.0.ln_q.bias', 'decoders.6.blocks.0.ln_k.weight', 'decoders.6.blocks.0.ln_k.bias', 'decoders.6.blocks.0.proj_out.weight', 'decoders.6.blocks.1.blocks.0.weight', 'decoders.6.blocks.1.blocks.0.bias', 'decoders.6.blocks.1.blocks.3.weight', 'decoders.6.blocks.1.blocks.3.bias', 'decoders.6.blocks.2.proj_heads.weight', 'decoders.6.blocks.2.proj_heads_o_q.weight', 'decoders.6.blocks.2.proj_heads_o_kv.weight', 'decoders.6.blocks.2.ln_q.weight', 'decoders.6.blocks.2.ln_q.bias', 'decoders.6.blocks.2.ln_k.weight', 'decoders.6.blocks.2.ln_k.bias', 'decoders.6.blocks.2.proj_out.weight', 'decoders.6.blocks.3.blocks.0.weight', 'decoders.6.blocks.3.blocks.0.bias', 'decoders.6.blocks.3.blocks.3.weight', 'decoders.6.blocks.3.blocks.3.bias', 'decoders.6.blocks.4.proj_heads.weight', 'decoders.6.blocks.4.proj_heads_o_q.weight', 'decoders.6.blocks.4.proj_heads_o_kv.weight', 'decoders.6.blocks.4.ln_q.weight', 'decoders.6.blocks.4.ln_q.bias', 'decoders.6.blocks.4
0: .ln_k.weight', 'decoders.6.blocks.4.ln_k.bias', 'decoders.6.blocks.4.proj_out.weight', 'decoders.6.blocks.5.blocks.0.weight', 'decoders.6.blocks.5.blocks.0.bias', 'decoders.6.blocks.5.blocks.3.weight', 'decoders.6.blocks.5.blocks.3.bias', 'decoders.6.blocks.6.proj_heads.weight', 'decoders.6.blocks.6.proj_heads_o_q.weight', 'decoders.6.blocks.6.proj_heads_o_kv.weight', 'decoders.6.blocks.6.ln_q.weight', 'decoders.6.blocks.6.ln_q.bias', 'decoders.6.blocks.6.ln_k.weight', 'decoders.6.blocks.6.ln_k.bias', 'decoders.6.blocks.6.proj_out.weight', 'decoders.6.blocks.7.blocks.0.weight', 'decoders.6.blocks.7.blocks.0.bias', 'decoders.6.blocks.7.blocks.3.weight', 'decoders.6.blocks.7.blocks.3.bias', 'decoders.6.blocks.8.proj_heads.weight', 'decoders.6.blocks.8.proj_heads_o_q.weight', 'decoders.6.blocks.8.proj_heads_o_kv.weight', 'decoders.6.blocks.8.ln_q.weight', 'decoders.6.blocks.8.ln_q.bias', 'decoders.6.blocks.8.ln_k.weight', 'decoders.6.blocks.8.ln_k.bias', 'decoders.6.blocks.8.proj_out.weight', 'decoders.6.blocks.
0: 9.blocks.0.weight', 'decoders.6.blocks.9.blocks.0.bias', 'decoders.6.blocks.9.blocks.3.weight', 'decoders.6.blocks.9.blocks.3.bias', 'decoders.6.blocks.10.proj_heads.weight', 'decoders.6.blocks.10.proj_heads_o_q.weight', 'decoders.6.blocks.10.proj_heads_o_kv.weight', 'decoders.6.blocks.10.ln_q.weight', 'decoders.6.blocks.10.ln_q.bias', 'decoders.6.blocks.10.ln_k.weight', 'decoders.6.blocks.10.ln_k.bias', 'decoders.6.blocks.10.proj_out.weight', 'decoders.6.blocks.11.blocks.0.weight', 'decoders.6.blocks.11.blocks.0.bias', 'decoders.6.blocks.11.blocks.3.weight', 'decoders.6.blocks.11.blocks.3.bias', 'tails.6.tail_nets.0.0.weight', 'tails.6.tail_nets.0.0.bias', 'tails.6.tail_nets.0.1.weight', 'tails.6.tail_nets.0.1.bias', 'tails.6.tail_nets.1.0.weight', 'tails.6.tail_nets.1.0.bias', 'tails.6.tail_nets.1.1.weight', 'tails.6.tail_nets.1.1.bias', 'tails.6.tail_nets.2.0.weight', 'tails.6.tail_nets.2.0.bias', 'tails.6.tail_nets.2.1.weight', 'tails.6.tail_nets.2.1.bias', 'tails.6.tail_nets.3.0.weight', 'tails.6.tail_ne
0: ts.3.0.bias', 'tails.6.tail_nets.3.1.weight', 'tails.6.tail_nets.3.1.bias', 'tails.6.tail_nets.4.0.weight', 'tails.6.tail_nets.4.0.bias', 'tails.6.tail_nets.4.1.weight', 'tails.6.tail_nets.4.1.bias', 'tails.6.tail_nets.5.0.weight', 'tails.6.tail_nets.5.0.bias', 'tails.6.tail_nets.5.1.weight', 'tails.6.tail_nets.5.1.bias', 'tails.6.tail_nets.6.0.weight', 'tails.6.tail_nets.6.0.bias', 'tails.6.tail_nets.6.1.weight', 'tails.6.tail_nets.6.1.bias', 'tails.6.tail_nets.7.0.weight', 'tails.6.tail_nets.7.0.bias', 'tails.6.tail_nets.7.1.weight', 'tails.6.tail_nets.7.1.bias', 'tails.6.tail_nets.8.0.weight', 'tails.6.tail_nets.8.0.bias', 'tails.6.tail_nets.8.1.weight', 'tails.6.tail_nets.8.1.bias', 'tails.6.tail_nets.9.0.weight', 'tails.6.tail_nets.9.0.bias', 'tails.6.tail_nets.9.1.weight', 'tails.6.tail_nets.9.1.bias', 'tails.6.tail_nets.10.0.weight', 'tails.6.tail_nets.10.0.bias', 'tails.6.tail_nets.10.1.weight', 'tails.6.tail_nets.10.1.bias', 'tails.6.tail_nets.11.0.weight', 'tails.6.tail_nets.11.0.bias', 'tails.6.tai
0: l_nets.11.1.weight', 'tails.6.tail_nets.11.1.bias', 'tails.6.tail_nets.12.0.weight', 'tails.6.tail_nets.12.0.bias', 'tails.6.tail_nets.12.1.weight', 'tails.6.tail_nets.12.1.bias', 'tails.6.tail_nets.13.0.weight', 'tails.6.tail_nets.13.0.bias', 'tails.6.tail_nets.13.1.weight', 'tails.6.tail_nets.13.1.bias', 'tails.6.tail_nets.14.0.weight', 'tails.6.tail_nets.14.0.bias', 'tails.6.tail_nets.14.1.weight', 'tails.6.tail_nets.14.1.bias', 'tails.6.tail_nets.15.0.weight', 'tails.6.tail_nets.15.0.bias', 'tails.6.tail_nets.15.1.weight', 'tails.6.tail_nets.15.1.bias']
1: Loaded AtmoRep: ignoring 208 elements: ['embeds_token_info.6.weight', 'embeds_token_info.6.bias', 'embeds.6.weight', 'embeds.6.bias', 'encoders.6.embed.weight', 'encoders.6.embed.bias', 'encoders.6.heads.0.proj_out.weight', 'encoders.6.heads.0.proj_heads.weight', 'encoders.6.heads.0.proj_heads_other.0.weight', 'encoders.6.heads.0.proj_heads_other.1.weight', 'encoders.6.heads.0.proj_heads_other.2.weight', 'encoders.6.heads.0.proj_heads_other.3.weight', 'encoders.6.heads.0.proj_heads_other.4.weight', 'encoders.6.heads.1.proj_out.weight', 'encoders.6.heads.1.proj_heads.weight', 'encoders.6.heads.1.proj_heads_other.0.weight', 'encoders.6.heads.1.proj_heads_other.1.weight', 'encoders.6.heads.1.proj_heads_other.2.weight', 'encoders.6.heads.1.proj_heads_other.3.weight', 'encoders.6.heads.1.proj_heads_other.4.weight', 'encoders.6.heads.2.proj_out.weight', 'encoders.6.heads.2.proj_heads.weight', 'encoders.6.heads.2.proj_heads_other.0.weight', 'encoders.6.heads.2.proj_heads_other.1.weight', 'encoders.6.heads.2.proj_hea
1: ds_other.2.weight', 'encoders.6.heads.2.proj_heads_other.3.weight', 'encoders.6.heads.2.proj_heads_other.4.weight', 'encoders.6.heads.3.proj_out.weight', 'encoders.6.heads.3.proj_heads.weight', 'encoders.6.heads.3.proj_heads_other.0.weight', 'encoders.6.heads.3.proj_heads_other.1.weight', 'encoders.6.heads.3.proj_heads_other.2.weight', 'encoders.6.heads.3.proj_heads_other.3.weight', 'encoders.6.heads.3.proj_heads_other.4.weight', 'encoders.6.heads.4.proj_out.weight', 'encoders.6.heads.4.proj_heads.weight', 'encoders.6.heads.4.proj_heads_other.0.weight', 'encoders.6.heads.4.proj_heads_other.1.weight', 'encoders.6.heads.4.proj_heads_other.2.weight', 'encoders.6.heads.4.proj_heads_other.3.weight', 'encoders.6.heads.4.proj_heads_other.4.weight', 'encoders.6.heads.5.proj_out.weight', 'encoders.6.heads.5.proj_heads.weight', 'encoders.6.heads.5.proj_heads_other.0.weight', 'encoders.6.heads.5.proj_heads_other.1.weight', 'encoders.6.heads.5.proj_heads_other.2.weight', 'encoders.6.heads.5.proj_heads_other.3.weight', 'e
1: ncoders.6.heads.5.proj_heads_other.4.weight', 'encoders.6.mlps.0.blocks.0.weight', 'encoders.6.mlps.0.blocks.0.bias', 'encoders.6.mlps.0.blocks.3.weight', 'encoders.6.mlps.0.blocks.3.bias', 'encoders.6.mlps.1.blocks.0.weight', 'encoders.6.mlps.1.blocks.0.bias', 'encoders.6.mlps.1.blocks.3.weight', 'encoders.6.mlps.1.blocks.3.bias', 'encoders.6.mlps.2.blocks.0.weight', 'encoders.6.mlps.2.blocks.0.bias', 'encoders.6.mlps.2.blocks.3.weight', 'encoders.6.mlps.2.blocks.3.bias', 'encoders.6.mlps.3.blocks.0.weight', 'encoders.6.mlps.3.blocks.0.bias', 'encoders.6.mlps.3.blocks.3.weight', 'encoders.6.mlps.3.blocks.3.bias', 'encoders.6.mlps.4.blocks.0.weight', 'encoders.6.mlps.4.blocks.0.bias', 'encoders.6.mlps.4.blocks.3.weight', 'encoders.6.mlps.4.blocks.3.bias', 'encoders.6.mlps.5.blocks.0.weight', 'encoders.6.mlps.5.blocks.0.bias', 'encoders.6.mlps.5.blocks.3.weight', 'encoders.6.mlps.5.blocks.3.bias', 'decoders.6.blocks.0.proj_heads.weight', 'decoders.6.blocks.0.proj_heads_o_q.weight', 'decoders.6.blocks.0.proj_he
1: ads_o_kv.weight', 'decoders.6.blocks.0.ln_q.weight', 'decoders.6.blocks.0.ln_q.bias', 'decoders.6.blocks.0.ln_k.weight', 'decoders.6.blocks.0.ln_k.bias', 'decoders.6.blocks.0.proj_out.weight', 'decoders.6.blocks.1.blocks.0.weight', 'decoders.6.blocks.1.blocks.0.bias', 'decoders.6.blocks.1.blocks.3.weight', 'decoders.6.blocks.1.blocks.3.bias', 'decoders.6.blocks.2.proj_heads.weight', 'decoders.6.blocks.2.proj_heads_o_q.weight', 'decoders.6.blocks.2.proj_heads_o_kv.weight', 'decoders.6.blocks.2.ln_q.weight', 'decoders.6.blocks.2.ln_q.bias', 'decoders.6.blocks.2.ln_k.weight', 'decoders.6.blocks.2.ln_k.bias', 'decoders.6.blocks.2.proj_out.weight', 'decoders.6.blocks.3.blocks.0.weight', 'decoders.6.blocks.3.blocks.0.bias', 'decoders.6.blocks.3.blocks.3.weight', 'decoders.6.blocks.3.blocks.3.bias', 'decoders.6.blocks.4.proj_heads.weight', 'decoders.6.blocks.4.proj_heads_o_q.weight', 'decoders.6.blocks.4.proj_heads_o_kv.weight', 'decoders.6.blocks.4.ln_q.weight', 'decoders.6.blocks.4.ln_q.bias', 'decoders.6.blocks.4
1: .ln_k.weight', 'decoders.6.blocks.4.ln_k.bias', 'decoders.6.blocks.4.proj_out.weight', 'decoders.6.blocks.5.blocks.0.weight', 'decoders.6.blocks.5.blocks.0.bias', 'decoders.6.blocks.5.blocks.3.weight', 'decoders.6.blocks.5.blocks.3.bias', 'decoders.6.blocks.6.proj_heads.weight', 'decoders.6.blocks.6.proj_heads_o_q.weight', 'decoders.6.blocks.6.proj_heads_o_kv.weight', 'decoders.6.blocks.6.ln_q.weight', 'decoders.6.blocks.6.ln_q.bias', 'decoders.6.blocks.6.ln_k.weight', 'decoders.6.blocks.6.ln_k.bias', 'decoders.6.blocks.6.proj_out.weight', 'decoders.6.blocks.7.blocks.0.weight', 'decoders.6.blocks.7.blocks.0.bias', 'decoders.6.blocks.7.blocks.3.weight', 'decoders.6.blocks.7.blocks.3.bias', 'decoders.6.blocks.8.proj_heads.weight', 'decoders.6.blocks.8.proj_heads_o_q.weight', 'decoders.6.blocks.8.proj_heads_o_kv.weight', 'decoders.6.blocks.8.ln_q.weight', 'decoders.6.blocks.8.ln_q.bias', 'decoders.6.blocks.8.ln_k.weight', 'decoders.6.blocks.8.ln_k.bias', 'decoders.6.blocks.8.proj_out.weight', 'decoders.6.blocks.
1: 9.blocks.0.weight', 'decoders.6.blocks.9.blocks.0.bias', 'decoders.6.blocks.9.blocks.3.weight', 'decoders.6.blocks.9.blocks.3.bias', 'decoders.6.blocks.10.proj_heads.weight', 'decoders.6.blocks.10.proj_heads_o_q.weight', 'decoders.6.blocks.10.proj_heads_o_kv.weight', 'decoders.6.blocks.10.ln_q.weight', 'decoders.6.blocks.10.ln_q.bias', 'decoders.6.blocks.10.ln_k.weight', 'decoders.6.blocks.10.ln_k.bias', 'decoders.6.blocks.10.proj_out.weight', 'decoders.6.blocks.11.blocks.0.weight', 'decoders.6.blocks.11.blocks.0.bias', 'decoders.6.blocks.11.blocks.3.weight', 'decoders.6.blocks.11.blocks.3.bias', 'tails.6.tail_nets.0.0.weight', 'tails.6.tail_nets.0.0.bias', 'tails.6.tail_nets.0.1.weight', 'tails.6.tail_nets.0.1.bias', 'tails.6.tail_nets.1.0.weight', 'tails.6.tail_nets.1.0.bias', 'tails.6.tail_nets.1.1.weight', 'tails.6.tail_nets.1.1.bias', 'tails.6.tail_nets.2.0.weight', 'tails.6.tail_nets.2.0.bias', 'tails.6.tail_nets.2.1.weight', 'tails.6.tail_nets.2.1.bias', 'tails.6.tail_nets.3.0.weight', 'tails.6.tail_ne
1: ts.3.0.bias', 'tails.6.tail_nets.3.1.weight', 'tails.6.tail_nets.3.1.bias', 'tails.6.tail_nets.4.0.weight', 'tails.6.tail_nets.4.0.bias', 'tails.6.tail_nets.4.1.weight', 'tails.6.tail_nets.4.1.bias', 'tails.6.tail_nets.5.0.weight', 'tails.6.tail_nets.5.0.bias', 'tails.6.tail_nets.5.1.weight', 'tails.6.tail_nets.5.1.bias', 'tails.6.tail_nets.6.0.weight', 'tails.6.tail_nets.6.0.bias', 'tails.6.tail_nets.6.1.weight', 'tails.6.tail_nets.6.1.bias', 'tails.6.tail_nets.7.0.weight', 'tails.6.tail_nets.7.0.bias', 'tails.6.tail_nets.7.1.weight', 'tails.6.tail_nets.7.1.bias', 'tails.6.tail_nets.8.0.weight', 'tails.6.tail_nets.8.0.bias', 'tails.6.tail_nets.8.1.weight', 'tails.6.tail_nets.8.1.bias', 'tails.6.tail_nets.9.0.weight', 'tails.6.tail_nets.9.0.bias', 'tails.6.tail_nets.9.1.weight', 'tails.6.tail_nets.9.1.bias', 'tails.6.tail_nets.10.0.weight', 'tails.6.tail_nets.10.0.bias', 'tails.6.tail_nets.10.1.weight', 'tails.6.tail_nets.10.1.bias', 'tails.6.tail_nets.11.0.weight', 'tails.6.tail_nets.11.0.bias', 'tails.6.tai
1: l_nets.11.1.weight', 'tails.6.tail_nets.11.1.bias', 'tails.6.tail_nets.12.0.weight', 'tails.6.tail_nets.12.0.bias', 'tails.6.tail_nets.12.1.weight', 'tails.6.tail_nets.12.1.bias', 'tails.6.tail_nets.13.0.weight', 'tails.6.tail_nets.13.0.bias', 'tails.6.tail_nets.13.1.weight', 'tails.6.tail_nets.13.1.bias', 'tails.6.tail_nets.14.0.weight', 'tails.6.tail_nets.14.0.bias', 'tails.6.tail_nets.14.1.weight', 'tails.6.tail_nets.14.1.bias', 'tails.6.tail_nets.15.0.weight', 'tails.6.tail_nets.15.0.bias', 'tails.6.tail_nets.15.1.weight', 'tails.6.tail_nets.15.1.bias']
1: Loaded model id = wc5e2i3t.
1: Loaded run 'wc5e2i3t' at epoch -2.
0: Loaded model id = wc5e2i3t.
0: Loaded run 'wc5e2i3t' at epoch -2.
1: -1 : 14:35:36 :: batch_size = 96, lr = 1e-05
0: Number of trainable parameters: 886,234,640
0: -1 : 14:35:36 :: batch_size = 96, lr = 1e-05
1: [DEBUG] INPUT BATCH
1: Epoch -1, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0: [DEBUG] INPUT BATCH
0: Epoch -1, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([0.2133, 0.2162, 0.2169, 0.2154, 0.2127, 0.2093, 0.2058, 0.2018, 0.1977, 0.1939, 0.1905, 0.1871, 0.1836, 0.1801,
0:         0.1765, 0.1727, 0.1685, 0.1640, 0.3068, 0.3116, 0.3145, 0.3154, 0.3148, 0.3129, 0.3101], device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([0.3816, 0.4139, 0.4441, 0.4714, 0.4964, 0.5192, 0.5392, 0.5565, 0.5715, 0.5852, 0.5978, 0.6095, 0.6212, 0.6327,
0:         0.6446, 0.6564, 0.6679, 0.6778, 0.3979, 0.4324, 0.4662, 0.4979, 0.5270, 0.5528, 0.5752], device='cuda:0')
0:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.5834, -0.5909, -0.5968, -0.6006, -0.6039, -0.6065, -0.6081, -0.6087, -0.6087, -0.6086, -0.6076, -0.6069,
0:         -0.6042, -0.6033, -0.6005, -0.6005, -0.5994, -0.6003, -0.4826, -0.4915, -0.4977, -0.5041, -0.5073, -0.5096,
0:         -0.5129], device='cuda:0')
0:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([0.1275, 0.2403, 0.3423, 0.4183, 0.4638, 0.5007, 0.5376, 0.5680, 0.5897, 0.6114, 0.6331, 0.6548, 0.6743, 0.6982,
0:         0.7156, 0.7221, 0.7243, 0.7286, 0.0841, 0.1861, 0.2881, 0.3857, 0.4704, 0.5506, 0.6244], device='cuda:0')
0:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([0.6222, 0.6291, 0.6369, 0.6457, 0.6546, 0.6634, 0.6719, 0.6801, 0.6878, 0.6945, 0.7009, 0.7070, 0.7139, 0.7213,
0:         0.7296, 0.7393, 0.7493, 0.7597, 0.7709, 0.7835, 0.7964, 0.8097, 0.8230, 0.8365, 0.8506], device='cuda:0')
0:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([-0.2456, -0.2322, -0.2188, -0.2099, -0.2032, -0.1898, -0.1832, -0.1720, -0.1854, -0.2434, -0.2411, -0.2367,
0:         -0.2344, -0.2322, -0.2278, -0.2255, -0.2255, -0.2278, -0.2344, -0.2434, -0.2434, -0.2411, -0.2367, -0.2367,
0:         -0.2389], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([ 0.1831,  0.0825, -0.0349, -0.1005, -0.1930, -0.2804, -0.3575, -0.4006, -0.4129, -0.4096, -0.3860, -0.3409,
0:         -0.2736, -0.1827, -0.0952, -0.0288,  0.0087,  0.0153, -0.0152, -0.0369, -0.0996, -0.1317, -0.1911, -0.2287,
0:         -0.2456], device='cuda:0')
0: [DEBUG] TARGET BATCH
0: Epoch -1, batch 0 - Sparse-masked 'total_precip' shape target data: torch.Size([13824, 243])
1:      first 25 values: tensor([0.2133, 0.2162, 0.2169, 0.2154, 0.2127, 0.2093, 0.2058, 0.2018, 0.1977, 0.1939, 0.1905, 0.1871, 0.1836, 0.1801,
1:         0.1765, 0.1727, 0.1685, 0.1640, 0.3068, 0.3116, 0.3145, 0.3154, 0.3148, 0.3129, 0.3101], device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([0.3816, 0.4139, 0.4441, 0.4714, 0.4964, 0.5192, 0.5392, 0.5565, 0.5715, 0.5852, 0.5978, 0.6095, 0.6212, 0.6327,
1:         0.6446, 0.6564, 0.6679, 0.6778, 0.3979, 0.4324, 0.4662, 0.4979, 0.5270, 0.5528, 0.5752], device='cuda:0')
1:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.5834, -0.5909, -0.5968, -0.6006, -0.6039, -0.6065, -0.6081, -0.6087, -0.6087, -0.6086, -0.6076, -0.6069,
1:         -0.6042, -0.6033, -0.6005, -0.6005, -0.5994, -0.6003, -0.4826, -0.4915, -0.4977, -0.5041, -0.5073, -0.5096,
1:         -0.5129], device='cuda:0')
1:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([0.1275, 0.2403, 0.3423, 0.4183, 0.4638, 0.5007, 0.5376, 0.5680, 0.5897, 0.6114, 0.6331, 0.6548, 0.6743, 0.6982,
1:         0.7156, 0.7221, 0.7243, 0.7286, 0.0841, 0.1861, 0.2881, 0.3857, 0.4704, 0.5506, 0.6244], device='cuda:0')
1:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([0.6222, 0.6291, 0.6369, 0.6457, 0.6546, 0.6634, 0.6719, 0.6801, 0.6878, 0.6945, 0.7009, 0.7070, 0.7139, 0.7213,
1:         0.7296, 0.7393, 0.7493, 0.7597, 0.7709, 0.7835, 0.7964, 0.8097, 0.8230, 0.8365, 0.8506], device='cuda:0')
1:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
1:      first 25 values: tensor([-0.2456, -0.2322, -0.2188, -0.2099, -0.2032, -0.1898, -0.1832, -0.1720, -0.1854, -0.2434, -0.2411, -0.2367,
1:         -0.2344, -0.2322, -0.2278, -0.2255, -0.2255, -0.2278, -0.2344, -0.2434, -0.2434, -0.2411, -0.2367, -0.2367,
1:         -0.2389], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([ 0.1831,  0.0825, -0.0349, -0.1005, -0.1930, -0.2804, -0.3575, -0.4006, -0.4129, -0.4096, -0.3860, -0.3409,
1:         -0.2736, -0.1827, -0.0952, -0.0288,  0.0087,  0.0153, -0.0152, -0.0369, -0.0996, -0.1317, -0.1911, -0.2287,
1:         -0.2456], device='cuda:0')
1: [DEBUG] TARGET BATCH
1: Epoch -1, batch 0 - Sparse-masked 'total_precip' shape target data: torch.Size([13824, 243])
0: [DEBUG] First 243 batch values:
0: tensor([-0.2389, -0.2434, -0.2434, -0.2434, -0.2344, -0.2367, -0.2389, -0.2389, -0.2389, -0.2389, -0.2434, -0.2411,
0:         -0.2144, -0.2010, -0.2032, -0.2188, -0.2300, -0.2300, -0.2434, -0.2434, -0.2434, -0.2055, -0.1430, -0.1475,
0:         -0.1787, -0.2077, -0.2367, -0.2456, -0.2456, -0.2434, -0.2367, -0.2278, -0.1675, -0.0984, -0.1430, -0.1854,
0:         -0.2434, -0.2411, -0.2300, -0.2099, -0.1876, -0.1430, -0.1006, -0.1006, -0.1163, -0.2367, -0.2389, -0.2322,
0:         -0.2166, -0.2099, -0.1720, -0.1252, -0.1274, -0.1363, -0.2255, -0.2255, -0.2166, -0.2144, -0.2121, -0.1809,
0:         -0.1854, -0.1787, -0.1876, -0.2166, -0.2099, -0.2032, -0.2121, -0.2144, -0.2211, -0.2255, -0.2233, -0.2211,
0:         -0.2188, -0.2121, -0.2144, -0.2233, -0.2322, -0.2367, -0.2367, -0.2367, -0.2389, -0.2389, -0.2434, -0.2434,
0:         -0.2389, -0.2344, -0.2255, -0.2233, -0.2367, -0.2389, -0.2389, -0.2434, -0.2411, -0.2144, -0.2099, -0.2032,
0:         -0.2077, -0.2300, -0.2344, -0.2411, -0.2434, -0.2411, -0.1988, -0.1252, -0.1252, -0.1475, -0.1988, -0.2367,
0:         -0.2411, -0.2434, -0.2411, -0.2255, -0.2010, -0.1631, -0.1229, -0.1720, -0.2077, -0.2389, -0.2344, -0.2010,
0:         -0.1854, -0.1832, -0.1586, -0.1430, -0.1564, -0.1720, -0.2077, -0.2278, -0.2233, -0.2077, -0.1965, -0.1698,
0:         -0.1475, -0.1497, -0.1497, -0.1898, -0.2099, -0.2055, -0.2055, -0.2032, -0.1854, -0.1943, -0.1988, -0.1988,
0:         -0.2077, -0.2099, -0.2055, -0.2032, -0.2099, -0.2233, -0.2300, -0.2322, -0.2322, -0.2211, -0.2233, -0.2255,
0:         -0.2255, -0.2322, -0.2322, -0.2211, -0.2211, -0.2188, -0.2389, -0.2411, -0.2411, -0.2411, -0.2278, -0.2233,
0:         -0.2255, -0.2077, -0.2188, -0.2389, -0.2434, -0.2411, -0.2121, -0.1854, -0.1943, -0.2055, -0.2344, -0.2389,
0:         -0.2411, -0.2434, -0.2389, -0.2010, -0.1386, -0.1252, -0.1207, -0.1898, -0.2367, -0.2411, -0.2411, -0.2389,
0:         -0.1876, -0.0984, -0.1140, -0.1519, -0.1854, -0.2099, -0.2367, -0.2344, -0.2144, -0.1988, -0.1832, -0.1519,
0:         -0.1118, -0.1341, -0.1542, -0.2166, -0.2211, -0.2077, -0.1943, -0.1943, -0.1809, -0.1564, -0.1742, -0.1854,
0:         -0.2055, -0.2099, -0.2077, -0.2077, -0.2077, -0.2010, -0.2121, -0.2144, -0.2233, -0.2144, -0.2211, -0.2211,
0:         -0.2255, -0.2255, -0.2300, -0.2367, -0.2367, -0.2389, -0.2278, -0.2322, -0.2344, -0.2367, -0.2389, -0.2389,
0:         -0.2166, -0.2144, -0.2166])
0: [DEBUG] PREDICTIONS TRAIN BATCH
0: Epoch -1, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([17280, 972])
0:      first 25 pred values: tensor([-0.6987, -0.7103, -0.7136, -0.7141, -0.7183, -0.7225, -0.7313, -0.7373, -0.7428, -0.7464, -0.7495, -0.7519,
0:         -0.7525, -0.7537, -0.7481, -0.7431, -0.7362, -0.7296, -0.5711, -0.5818, -0.5861, -0.5898, -0.5943, -0.6001,
0:         -0.6078], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([17280, 972])
0:      first 25 pred values: tensor([0.5818, 0.6008, 0.6089, 0.6138, 0.6197, 0.6360, 0.6580, 0.6848, 0.7111, 0.7349, 0.7532, 0.7704, 0.7765, 0.7848,
0:         0.7902, 0.7970, 0.8109, 0.8297, 0.5356, 0.5498, 0.5563, 0.5639, 0.5751, 0.5948, 0.6187], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([17280, 972])
1: [DEBUG] First 243 batch values:
1: tensor([-0.2389, -0.2434, -0.2434, -0.2434, -0.2344, -0.2367, -0.2389, -0.2389, -0.2389, -0.2389, -0.2434, -0.2411,
1:         -0.2144, -0.2010, -0.2032, -0.2188, -0.2300, -0.2300, -0.2434, -0.2434, -0.2434, -0.2055, -0.1430, -0.1475,
1:         -0.1787, -0.2077, -0.2367, -0.2456, -0.2456, -0.2434, -0.2367, -0.2278, -0.1675, -0.0984, -0.1430, -0.1854,
1:         -0.2434, -0.2411, -0.2300, -0.2099, -0.1876, -0.1430, -0.1006, -0.1006, -0.1163, -0.2367, -0.2389, -0.2322,
1:         -0.2166, -0.2099, -0.1720, -0.1252, -0.1274, -0.1363, -0.2255, -0.2255, -0.2166, -0.2144, -0.2121, -0.1809,
1:         -0.1854, -0.1787, -0.1876, -0.2166, -0.2099, -0.2032, -0.2121, -0.2144, -0.2211, -0.2255, -0.2233, -0.2211,
1:         -0.2188, -0.2121, -0.2144, -0.2233, -0.2322, -0.2367, -0.2367, -0.2367, -0.2389, -0.2389, -0.2434, -0.2434,
1:         -0.2389, -0.2344, -0.2255, -0.2233, -0.2367, -0.2389, -0.2389, -0.2434, -0.2411, -0.2144, -0.2099, -0.2032,
1:         -0.2077, -0.2300, -0.2344, -0.2411, -0.2434, -0.2411, -0.1988, -0.1252, -0.1252, -0.1475, -0.1988, -0.2367,
1:         -0.2411, -0.2434, -0.2411, -0.2255, -0.2010, -0.1631, -0.1229, -0.1720, -0.2077, -0.2389, -0.2344, -0.2010,
1:         -0.1854, -0.1832, -0.1586, -0.1430, -0.1564, -0.1720, -0.2077, -0.2278, -0.2233, -0.2077, -0.1965, -0.1698,
1:         -0.1475, -0.1497, -0.1497, -0.1898, -0.2099, -0.2055, -0.2055, -0.2032, -0.1854, -0.1943, -0.1988, -0.1988,
1:         -0.2077, -0.2099, -0.2055, -0.2032, -0.2099, -0.2233, -0.2300, -0.2322, -0.2322, -0.2211, -0.2233, -0.2255,
1:         -0.2255, -0.2322, -0.2322, -0.2211, -0.2211, -0.2188, -0.2389, -0.2411, -0.2411, -0.2411, -0.2278, -0.2233,
1:         -0.2255, -0.2077, -0.2188, -0.2389, -0.2434, -0.2411, -0.2121, -0.1854, -0.1943, -0.2055, -0.2344, -0.2389,
1:         -0.2411, -0.2434, -0.2389, -0.2010, -0.1386, -0.1252, -0.1207, -0.1898, -0.2367, -0.2411, -0.2411, -0.2389,
1:         -0.1876, -0.0984, -0.1140, -0.1519, -0.1854, -0.2099, -0.2367, -0.2344, -0.2144, -0.1988, -0.1832, -0.1519,
1:         -0.1118, -0.1341, -0.1542, -0.2166, -0.2211, -0.2077, -0.1943, -0.1943, -0.1809, -0.1564, -0.1742, -0.1854,
1:         -0.2055, -0.2099, -0.2077, -0.2077, -0.2077, -0.2010, -0.2121, -0.2144, -0.2233, -0.2144, -0.2211, -0.2211,
1:         -0.2255, -0.2255, -0.2300, -0.2367, -0.2367, -0.2389, -0.2278, -0.2322, -0.2344, -0.2367, -0.2389, -0.2389,
1:         -0.2166, -0.2144, -0.2166])
1: [DEBUG] PREDICTIONS TRAIN BATCH
1: Epoch -1, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([17280, 972])
0:      first 25 pred values: tensor([-0.5562, -0.5530, -0.5522, -0.5509, -0.5523, -0.5536, -0.5547, -0.5563, -0.5567, -0.5557, -0.5551, -0.5541,
0:         -0.5547, -0.5535, -0.5524, -0.5509, -0.5485, -0.5465, -0.5616, -0.5519, -0.5424, -0.5332, -0.5286, -0.5220,
0:         -0.5182], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([17280, 972])
1:      first 25 pred values: tensor([-0.6899, -0.7055, -0.7135, -0.7169, -0.7219, -0.7241, -0.7283, -0.7305, -0.7351, -0.7396, -0.7427, -0.7469,
1:         -0.7471, -0.7453, -0.7378, -0.7293, -0.7242, -0.7212, -0.5679, -0.5789, -0.5883, -0.5944, -0.5974, -0.6004,
1:         -0.6003], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([17280, 972])
1:      first 25 pred values: tensor([0.6401, 0.6524, 0.6565, 0.6568, 0.6613, 0.6761, 0.6909, 0.7094, 0.7283, 0.7438, 0.7554, 0.7692, 0.7738, 0.7778,
1:         0.7776, 0.7827, 0.7907, 0.8024, 0.5873, 0.5947, 0.5934, 0.5965, 0.6065, 0.6237, 0.6424], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([17280, 972])
1:      first 25 pred values: tensor([-0.5469, -0.5424, -0.5362, -0.5336, -0.5348, -0.5361, -0.5387, -0.5412, -0.5425, -0.5419, -0.5393, -0.5381,
1:         -0.5385, -0.5376, -0.5398, -0.5426, -0.5456, -0.5497, -0.5640, -0.5532, -0.5421, -0.5332, -0.5273, -0.5214,
1:         -0.5172], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([17280, 972])
0:      first 25 pred values: tensor([-0.0215, -0.0035,  0.0136,  0.0511,  0.0852,  0.1234,  0.1674,  0.1938,  0.2482,  0.3003,  0.3203,  0.3860,
0:          0.4615,  0.4938,  0.5181,  0.5514,  0.5918,  0.5981,  0.0420,  0.0278,  0.0032,  0.0104,  0.0079,  0.0131,
0:          0.0360], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([7680, 2187])
1:      first 25 pred values: tensor([0.1379, 0.1617, 0.1752, 0.1975, 0.2255, 0.2576, 0.2884, 0.3050, 0.3405, 0.3738, 0.3746, 0.4146, 0.4697, 0.4963,
1:         0.5108, 0.5317, 0.5803, 0.5841, 0.1184, 0.0959, 0.0682, 0.0776, 0.0904, 0.1082, 0.1337], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([7680, 2187])
1:      first 25 pred values: tensor([1.0273, 1.0272, 1.0318, 1.0339, 1.0398, 1.0482, 1.0561, 1.0611, 1.0602, 1.0540, 1.0463, 1.0404, 1.0397, 1.0411,
1:         1.0425, 1.0413, 1.0348, 1.0268, 1.0211, 1.0173, 1.0167, 1.0159, 1.0138, 1.0110, 1.0075], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([13824, 243])
1:      first 25 pred values: tensor([-0.2078, -0.2074, -0.2057, -0.1988, -0.1947, -0.1964, -0.1959, -0.2024, -0.1993, -0.2068, -0.1999, -0.1968,
1:         -0.1893, -0.1797, -0.1813, -0.1772, -0.1788, -0.1872, -0.2050, -0.1968, -0.1883, -0.1770, -0.1708, -0.1615,
1:         -0.1613], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([1536, 2187])
0:      first 25 pred values: tensor([1.0002, 1.0102, 1.0220, 1.0286, 1.0333, 1.0361, 1.0376, 1.0379, 1.0377, 1.0365, 1.0349, 1.0343, 1.0372, 1.0389,
0:         1.0402, 1.0375, 1.0307, 1.0218, 1.0146, 1.0104, 1.0093, 1.0096, 1.0083, 1.0050, 1.0002], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([13824, 243])
1:      first 25 pred values: tensor([-0.1977,  0.0098, -0.0404, -0.3282, -0.0951, -0.2363, -0.0030, -0.3255,  0.0505, -0.0479,  0.1847,  0.0316,
1:          0.0664, -0.1060, -0.0411,  0.0953,  0.0175,  0.1129,  0.1437, -0.2594,  0.0263,  0.0876,  0.1041, -0.0072,
1:          0.0602], device='cuda:0', grad_fn=<SliceBackward0>)
0:      first 25 pred values: tensor([-0.2160, -0.2133, -0.2124, -0.2080, -0.2031, -0.2057, -0.2056, -0.2112, -0.2071, -0.2143, -0.2103, -0.2004,
0:         -0.1975, -0.1857, -0.1890, -0.1854, -0.1889, -0.1993, -0.2066, -0.2018, -0.1916, -0.1796, -0.1726, -0.1699,
0:         -0.1683], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([1536, 2187])
0:      first 25 pred values: tensor([-0.2242,  0.0059, -0.0611, -0.3711, -0.1193, -0.2059,  0.0217, -0.2826,  0.0251, -0.0810,  0.1934,  0.0224,
0:          0.0823, -0.1121, -0.0372,  0.0693,  0.0138,  0.0348,  0.1039, -0.2379, -0.0171,  0.0149,  0.1382, -0.0319,
0:         -0.0027], device='cuda:0', grad_fn=<SliceBackward0>)
0: epoch: -1 [1/5 (20%)]	Loss: 0.25373 : 0.37551 :: 0.14588 (1.54 s/sec)
0: epoch: -1 [2/5 (40%)]	Loss: 0.22627 : 0.31188 :: 0.14094 (10.58 s/sec)
0: epoch: -1 [3/5 (60%)]	Loss: 0.24778 : 0.37769 :: 0.14437 (9.16 s/sec)
0: epoch: -1 [4/5 (80%)]	Loss: 0.58979 : 1.98959 :: 0.09697 (10.49 s/sec)
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_idp4qadjd8_epoch-1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_embeds_token_info_idp4qadjd8_epoch-1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_encoder_velocity_u_idp4qadjd8_epoch-1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_encoder_velocity_v_idp4qadjd8_epoch-1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_encoder_specific_humidity_idp4qadjd8_epoch-1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_encoder_velocity_z_idp4qadjd8_epoch-1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_encoder_temperature_idp4qadjd8_epoch-1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_encoder_total_precip_idp4qadjd8_epoch-1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_encoder_t2m_idp4qadjd8_epoch-1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_decoder_velocity_u_idp4qadjd8_epoch-1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_decoder_velocity_v_idp4qadjd8_epoch-1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_decoder_specific_humidity_idp4qadjd8_epoch-1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_decoder_velocity_z_idp4qadjd8_epoch-1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_decoder_temperature_idp4qadjd8_epoch-1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_decoder_total_precip_idp4qadjd8_epoch-1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_decoder_t2m_idp4qadjd8_epoch-1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_tail_velocity_u_idp4qadjd8_epoch-1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_tail_velocity_v_idp4qadjd8_epoch-1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_tail_specific_humidity_idp4qadjd8_epoch-1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_tail_velocity_z_idp4qadjd8_epoch-1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_tail_temperature_idp4qadjd8_epoch-1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_tail_total_precip_idp4qadjd8_epoch-1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_tail_t2m_idp4qadjd8_epoch-1.mod
0: validation loss for strategy=forecast at epoch -1 : 1.7133530378341675
0: validation loss for velocity_u : 0.086412712931633
0: validation loss for velocity_v : 0.3138347268104553
0: validation loss for specific_humidity : 0.029705926775932312
0: validation loss for velocity_z : 0.5940728187561035
0: validation loss for temperature : 0.09327441453933716
0: validation loss for total_precip : 9.822334289550781
0: validation loss for t2m : 1.0538349151611328
1: 0 : 14:42:24 :: batch_size = 96, lr = 1e-05
0: 0 : 14:42:24 :: batch_size = 96, lr = 1e-05
1: [DEBUG] INPUT BATCH
1: Epoch 0, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-1.0892, -1.0920, -1.0946, -1.0967, -1.0985, -1.0996, -1.1002, -1.1000, -1.0991, -1.0975, -1.0950, -1.0919,
1:         -1.0883, -1.0845, -1.0809, -1.0773, -1.0734, -1.0693, -1.0540, -1.0576, -1.0609, -1.0637, -1.0659, -1.0678,
1:         -1.0687], device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.0260, -0.0430, -0.0597, -0.0769, -0.0943, -0.1121, -0.1303, -0.1481, -0.1657, -0.1824, -0.1986, -0.2139,
1:         -0.2281, -0.2413, -0.2528, -0.2629, -0.2717, -0.2794, -0.0174, -0.0333, -0.0490, -0.0647, -0.0804, -0.0964,
1:         -0.1125], device='cuda:0')
1:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.4450, -0.4250, -0.4080, -0.3908, -0.3741, -0.3626, -0.3538, -0.3466, -0.3314, -0.3221, -0.3190, -0.3178,
1:         -0.3151, -0.3069, -0.3042, -0.3039, -0.3039, -0.3025, -0.5538, -0.5444, -0.5274, -0.5110, -0.4975, -0.4800,
1:         -0.4664], device='cuda:0')
1:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([ 0.0428,  0.0196, -0.0002, -0.0168, -0.0344, -0.0532, -0.0675, -0.0675, -0.0521, -0.0311, -0.0179, -0.0157,
1:         -0.0157, -0.0090,  0.0020,  0.0075, -0.0002, -0.0113,  0.1377,  0.1201,  0.1002,  0.0781,  0.0539,  0.0285,
1:          0.0064], device='cuda:0')
1:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-0.7328, -0.7240, -0.7167, -0.7105, -0.7049, -0.6994, -0.6939, -0.6885, -0.6828, -0.6774, -0.6715, -0.6659,
1:         -0.6603, -0.6549, -0.6498, -0.6451, -0.6404, -0.6357, -0.6310, -0.6258, -0.6206, -0.6150, -0.6093, -0.6032,
1:         -0.5972], device='cuda:0')
1:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
1:      first 25 values: tensor([-0.2354, -0.2389, -0.2389, -0.2389, -0.2389, -0.2378, -0.2366, -0.2366, -0.2366, -0.2401, -0.2401, -0.2401,
1:         -0.2401, -0.2401, -0.2401, -0.2401, -0.2413, -0.2413, -0.2413, -0.2413, -0.2413, -0.2413, -0.2413, -0.2413,
1:         -0.2413], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-0.9805, -0.9399, -0.8925, -0.8770, -0.8116, -0.7871, -0.7560, -0.7252, -0.7147, -0.7022, -0.6597, -0.6246,
1:         -0.5827, -0.5239, -0.4682, -0.4177, -0.3840, -0.3593, -0.3422, -0.3256, -0.3193, -0.3474, -0.3832, -0.4635,
1:         -0.5047], device='cuda:0')
1: [DEBUG] TARGET BATCH
1: Epoch 0, batch 0 - Sparse-masked 'total_precip' shape target data: torch.Size([13824, 243])
1: [DEBUG] First 243 batch values:
1: tensor([-0.1957, -0.2062, -0.2167, -0.2261, -0.2296, -0.2331, -0.2354, -0.2366, -0.2378, -0.1980, -0.2027, -0.2109,
1:         -0.2179, -0.2214, -0.2261, -0.2296, -0.2319, -0.2343, -0.2027, -0.2062, -0.2109, -0.2121, -0.2144, -0.2167,
1:         -0.2191, -0.2214, -0.2226, -0.2237, -0.2237, -0.2226, -0.2226, -0.2226, -0.2214, -0.2202, -0.2191, -0.2191,
1:         -0.2331, -0.2331, -0.2319, -0.2319, -0.2331, -0.2331, -0.2296, -0.2261, -0.2249, -0.2378, -0.2378, -0.2378,
1:         -0.2378, -0.2389, -0.2401, -0.2378, -0.2378, -0.2378, -0.2401, -0.2378, -0.2378, -0.2378, -0.2389, -0.2413,
1:         -0.2413, -0.2401, -0.2401, -0.2401, -0.2389, -0.2389, -0.2389, -0.2389, -0.2413, -0.2413, -0.2401, -0.2389,
1:         -0.2401, -0.2401, -0.2401, -0.2401, -0.2401, -0.2413, -0.2413, -0.2413, -0.2401, -0.2062, -0.2109, -0.2202,
1:         -0.2226, -0.2296, -0.2319, -0.2343, -0.2343, -0.2366, -0.2109, -0.2109, -0.2132, -0.2156, -0.2179, -0.2249,
1:         -0.2273, -0.2296, -0.2296, -0.2156, -0.2156, -0.2156, -0.2132, -0.2132, -0.2132, -0.2156, -0.2156, -0.2132,
1:         -0.2296, -0.2273, -0.2249, -0.2226, -0.2226, -0.2226, -0.2179, -0.2132, -0.2085, -0.2366, -0.2343, -0.2343,
1:         -0.2319, -0.2319, -0.2319, -0.2273, -0.2226, -0.2156, -0.2389, -0.2366, -0.2366, -0.2366, -0.2366, -0.2366,
1:         -0.2366, -0.2366, -0.2366, -0.2389, -0.2389, -0.2389, -0.2389, -0.2389, -0.2389, -0.2389, -0.2389, -0.2389,
1:         -0.2413, -0.2413, -0.2413, -0.2413, -0.2413, -0.2413, -0.2413, -0.2413, -0.2413, -0.2413, -0.2413, -0.2413,
1:         -0.2413, -0.2413, -0.2413, -0.2413, -0.2413, -0.2413, -0.2156, -0.2167, -0.2237, -0.2226, -0.2284, -0.2308,
1:         -0.2319, -0.2331, -0.2343, -0.2214, -0.2179, -0.2156, -0.2121, -0.2144, -0.2202, -0.2214, -0.2237, -0.2237,
1:         -0.2284, -0.2249, -0.2202, -0.2179, -0.2167, -0.2144, -0.2121, -0.2085, -0.2015, -0.2343, -0.2319, -0.2308,
1:         -0.2284, -0.2273, -0.2249, -0.2191, -0.2144, -0.2050, -0.2389, -0.2366, -0.2343, -0.2331, -0.2319, -0.2308,
1:         -0.2284, -0.2261, -0.2191, -0.2413, -0.2389, -0.2366, -0.2366, -0.2378, -0.2378, -0.2354, -0.2354, -0.2354,
1:         -0.2413, -0.2401, -0.2389, -0.2389, -0.2389, -0.2389, -0.2389, -0.2389, -0.2389, -0.2413, -0.2401, -0.2401,
1:         -0.2401, -0.2401, -0.2401, -0.2401, -0.2401, -0.2401, -0.2413, -0.2413, -0.2413, -0.2413, -0.2413, -0.2413,
1:         -0.2413, -0.2413, -0.2401])
1: [DEBUG] PREDICTIONS TRAIN BATCH
1: Epoch 0, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([17280, 972])
1:      first 25 pred values: tensor([-1.2436, -1.2482, -1.2579, -1.2697, -1.2765, -1.2856, -1.2937, -1.3021, -1.3096, -1.3151, -1.3147, -1.3102,
1:         -1.3052, -1.2930, -1.2820, -1.2682, -1.2524, -1.2359, -1.3100, -1.3232, -1.3419, -1.3574, -1.3664, -1.3753,
1:         -1.3783], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([17280, 972])
1:      first 25 pred values: tensor([ 2.2149e-02,  2.8806e-02,  2.5507e-02,  1.7007e-02,  4.1266e-03,  1.4594e-03, -3.4969e-03,  3.2383e-05,
1:          9.0931e-03,  2.4015e-02,  3.7880e-02,  5.5602e-02,  7.0175e-02,  8.8918e-02,  1.0702e-01,  1.2924e-01,
1:          1.5657e-01,  1.9004e-01, -2.7933e-02, -2.6657e-02, -2.8965e-02, -3.6632e-02, -3.7170e-02, -3.3226e-02,
1:         -2.3931e-02], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([17280, 972])
1:      first 25 pred values: tensor([-0.6047, -0.5998, -0.5962, -0.5929, -0.5897, -0.5888, -0.5908, -0.5896, -0.5873, -0.5836, -0.5769, -0.5692,
1:         -0.5602, -0.5506, -0.5396, -0.5322, -0.5250, -0.5174, -0.5952, -0.5908, -0.5809, -0.5747, -0.5698, -0.5644,
1:         -0.5592], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([17280, 972])
1:      first 25 pred values: tensor([0.3282, 0.3489, 0.3840, 0.4122, 0.4851, 0.5238, 0.5253, 0.5227, 0.5472, 0.5300, 0.4613, 0.4664, 0.4716, 0.4184,
1:         0.3944, 0.3890, 0.4372, 0.4805, 0.4518, 0.4769, 0.5053, 0.5268, 0.5945, 0.6168, 0.6161], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([7680, 2187])
1:      first 25 pred values: tensor([-1.0487, -1.0559, -1.0514, -1.0390, -1.0206, -1.0011, -0.9853, -0.9741, -0.9667, -0.9593, -0.9510, -0.9379,
1:         -0.9212, -0.9061, -0.8937, -0.8840, -0.8753, -0.8647, -0.8509, -0.8376, -0.8245, -0.8149, -0.8047, -0.7936,
1:         -0.7798], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([13824, 243])
1:      first 25 pred values: tensor([-0.0061, -0.0345, -0.0583, -0.0848, -0.0985, -0.1327, -0.1398, -0.1474, -0.1553, -0.0651, -0.0930, -0.1185,
1:         -0.1287, -0.1396, -0.1499, -0.1606, -0.1583, -0.1736, -0.1401, -0.1480, -0.1525, -0.1569, -0.1631, -0.1635,
1:         -0.1719], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([1536, 2187])
1:      first 25 pred values: tensor([-0.2360, -0.0858, -0.0258, -0.3608, -0.1645, -0.1762, -0.0771, -0.2725,  0.0693, -0.0913,  0.1942,  0.0308,
1:          0.1367, -0.1566,  0.0080,  0.0398,  0.0445,  0.0716,  0.0965, -0.1389,  0.0116,  0.0962,  0.0833,  0.0516,
1:          0.0080], device='cuda:0', grad_fn=<SliceBackward0>)
0: [DEBUG] INPUT BATCH
0: Epoch 0, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-1.0892, -1.0920, -1.0946, -1.0967, -1.0985, -1.0996, -1.1002, -1.1000, -1.0991, -1.0975, -1.0950, -1.0919,
0:         -1.0883, -1.0845, -1.0809, -1.0773, -1.0734, -1.0693, -1.0540, -1.0576, -1.0609, -1.0637, -1.0659, -1.0678,
0:         -1.0687], device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.0260, -0.0430, -0.0597, -0.0769, -0.0943, -0.1121, -0.1303, -0.1481, -0.1657, -0.1824, -0.1986, -0.2139,
0:         -0.2281, -0.2413, -0.2528, -0.2629, -0.2717, -0.2794, -0.0174, -0.0333, -0.0490, -0.0647, -0.0804, -0.0964,
0:         -0.1125], device='cuda:0')
0:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.4450, -0.4250, -0.4080, -0.3908, -0.3741, -0.3626, -0.3538, -0.3466, -0.3314, -0.3221, -0.3190, -0.3178,
0:         -0.3151, -0.3069, -0.3042, -0.3039, -0.3039, -0.3025, -0.5538, -0.5444, -0.5274, -0.5110, -0.4975, -0.4800,
0:         -0.4664], device='cuda:0')
0:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([ 0.0428,  0.0196, -0.0002, -0.0168, -0.0344, -0.0532, -0.0675, -0.0675, -0.0521, -0.0311, -0.0179, -0.0157,
0:         -0.0157, -0.0090,  0.0020,  0.0075, -0.0002, -0.0113,  0.1377,  0.1201,  0.1002,  0.0781,  0.0539,  0.0285,
0:          0.0064], device='cuda:0')
0:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([-0.7328, -0.7240, -0.7167, -0.7105, -0.7049, -0.6994, -0.6939, -0.6885, -0.6828, -0.6774, -0.6715, -0.6659,
0:         -0.6603, -0.6549, -0.6498, -0.6451, -0.6404, -0.6357, -0.6310, -0.6258, -0.6206, -0.6150, -0.6093, -0.6032,
0:         -0.5972], device='cuda:0')
0:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([-0.2354, -0.2389, -0.2389, -0.2389, -0.2389, -0.2378, -0.2366, -0.2366, -0.2366, -0.2401, -0.2401, -0.2401,
0:         -0.2401, -0.2401, -0.2401, -0.2401, -0.2413, -0.2413, -0.2413, -0.2413, -0.2413, -0.2413, -0.2413, -0.2413,
0:         -0.2413], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([-0.9805, -0.9399, -0.8925, -0.8770, -0.8116, -0.7871, -0.7560, -0.7252, -0.7147, -0.7022, -0.6597, -0.6246,
0:         -0.5827, -0.5239, -0.4682, -0.4177, -0.3840, -0.3593, -0.3422, -0.3256, -0.3193, -0.3474, -0.3832, -0.4635,
0:         -0.5047], device='cuda:0')
0: [DEBUG] TARGET BATCH
0: Epoch 0, batch 0 - Sparse-masked 'total_precip' shape target data: torch.Size([13824, 243])
0: [DEBUG] First 243 batch values:
0: tensor([-0.1957, -0.2062, -0.2167, -0.2261, -0.2296, -0.2331, -0.2354, -0.2366, -0.2378, -0.1980, -0.2027, -0.2109,
0:         -0.2179, -0.2214, -0.2261, -0.2296, -0.2319, -0.2343, -0.2027, -0.2062, -0.2109, -0.2121, -0.2144, -0.2167,
0:         -0.2191, -0.2214, -0.2226, -0.2237, -0.2237, -0.2226, -0.2226, -0.2226, -0.2214, -0.2202, -0.2191, -0.2191,
0:         -0.2331, -0.2331, -0.2319, -0.2319, -0.2331, -0.2331, -0.2296, -0.2261, -0.2249, -0.2378, -0.2378, -0.2378,
0:         -0.2378, -0.2389, -0.2401, -0.2378, -0.2378, -0.2378, -0.2401, -0.2378, -0.2378, -0.2378, -0.2389, -0.2413,
0:         -0.2413, -0.2401, -0.2401, -0.2401, -0.2389, -0.2389, -0.2389, -0.2389, -0.2413, -0.2413, -0.2401, -0.2389,
0:         -0.2401, -0.2401, -0.2401, -0.2401, -0.2401, -0.2413, -0.2413, -0.2413, -0.2401, -0.2062, -0.2109, -0.2202,
0:         -0.2226, -0.2296, -0.2319, -0.2343, -0.2343, -0.2366, -0.2109, -0.2109, -0.2132, -0.2156, -0.2179, -0.2249,
0:         -0.2273, -0.2296, -0.2296, -0.2156, -0.2156, -0.2156, -0.2132, -0.2132, -0.2132, -0.2156, -0.2156, -0.2132,
0:         -0.2296, -0.2273, -0.2249, -0.2226, -0.2226, -0.2226, -0.2179, -0.2132, -0.2085, -0.2366, -0.2343, -0.2343,
0:         -0.2319, -0.2319, -0.2319, -0.2273, -0.2226, -0.2156, -0.2389, -0.2366, -0.2366, -0.2366, -0.2366, -0.2366,
0:         -0.2366, -0.2366, -0.2366, -0.2389, -0.2389, -0.2389, -0.2389, -0.2389, -0.2389, -0.2389, -0.2389, -0.2389,
0:         -0.2413, -0.2413, -0.2413, -0.2413, -0.2413, -0.2413, -0.2413, -0.2413, -0.2413, -0.2413, -0.2413, -0.2413,
0:         -0.2413, -0.2413, -0.2413, -0.2413, -0.2413, -0.2413, -0.2156, -0.2167, -0.2237, -0.2226, -0.2284, -0.2308,
0:         -0.2319, -0.2331, -0.2343, -0.2214, -0.2179, -0.2156, -0.2121, -0.2144, -0.2202, -0.2214, -0.2237, -0.2237,
0:         -0.2284, -0.2249, -0.2202, -0.2179, -0.2167, -0.2144, -0.2121, -0.2085, -0.2015, -0.2343, -0.2319, -0.2308,
0:         -0.2284, -0.2273, -0.2249, -0.2191, -0.2144, -0.2050, -0.2389, -0.2366, -0.2343, -0.2331, -0.2319, -0.2308,
0:         -0.2284, -0.2261, -0.2191, -0.2413, -0.2389, -0.2366, -0.2366, -0.2378, -0.2378, -0.2354, -0.2354, -0.2354,
0:         -0.2413, -0.2401, -0.2389, -0.2389, -0.2389, -0.2389, -0.2389, -0.2389, -0.2389, -0.2413, -0.2401, -0.2401,
0:         -0.2401, -0.2401, -0.2401, -0.2401, -0.2401, -0.2401, -0.2413, -0.2413, -0.2413, -0.2413, -0.2413, -0.2413,
0:         -0.2413, -0.2413, -0.2401])
0: [DEBUG] PREDICTIONS TRAIN BATCH
0: Epoch 0, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([17280, 972])
0:      first 25 pred values: tensor([-1.2360, -1.2538, -1.2728, -1.2853, -1.2847, -1.2792, -1.2746, -1.2750, -1.2769, -1.2812, -1.2813, -1.2779,
0:         -1.2731, -1.2624, -1.2508, -1.2379, -1.2184, -1.1975, -1.3074, -1.3319, -1.3594, -1.3717, -1.3732, -1.3679,
0:         -1.3584], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([17280, 972])
0:      first 25 pred values: tensor([-0.0528, -0.0403, -0.0304, -0.0257, -0.0245, -0.0195, -0.0242, -0.0213, -0.0089,  0.0101,  0.0338,  0.0589,
0:          0.0803,  0.0964,  0.1098,  0.1242,  0.1439,  0.1735, -0.0916, -0.0885, -0.0806, -0.0721, -0.0611, -0.0531,
0:         -0.0431], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([17280, 972])
0:      first 25 pred values: tensor([-0.6440, -0.6356, -0.6302, -0.6241, -0.6192, -0.6163, -0.6129, -0.6093, -0.6035, -0.5956, -0.5865, -0.5784,
0:         -0.5694, -0.5640, -0.5538, -0.5434, -0.5317, -0.5199, -0.6363, -0.6272, -0.6147, -0.6064, -0.5989, -0.5887,
0:         -0.5825], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([17280, 972])
0:      first 25 pred values: tensor([0.4128, 0.4493, 0.4939, 0.5498, 0.6287, 0.6481, 0.6345, 0.6080, 0.5876, 0.5809, 0.5456, 0.5233, 0.5100, 0.4637,
0:         0.4196, 0.3965, 0.4034, 0.3846, 0.5480, 0.5766, 0.6026, 0.6183, 0.6677, 0.6820, 0.6806], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([7680, 2187])
0:      first 25 pred values: tensor([-1.0611, -1.0664, -1.0625, -1.0525, -1.0359, -1.0205, -1.0054, -0.9935, -0.9853, -0.9781, -0.9698, -0.9557,
0:         -0.9370, -0.9180, -0.9028, -0.8926, -0.8860, -0.8790, -0.8661, -0.8496, -0.8328, -0.8206, -0.8097, -0.8011,
0:         -0.7888], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([13824, 243])
0:      first 25 pred values: tensor([-0.0484, -0.0660, -0.0921, -0.0954, -0.0921, -0.1055, -0.0926, -0.0863, -0.0886, -0.1097, -0.1277, -0.1465,
0:         -0.1652, -0.1698, -0.1613, -0.1684, -0.1511, -0.1537, -0.1575, -0.1647, -0.1744, -0.1917, -0.2029, -0.2034,
0:         -0.2096], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([1536, 2187])
0:      first 25 pred values: tensor([-0.3275, -0.0643, -0.0791, -0.4024, -0.1046, -0.2015,  0.0048, -0.2566,  0.0785, -0.0534,  0.2399,  0.0486,
0:          0.1363, -0.1773,  0.0022, -0.0171,  0.0157,  0.1000,  0.0936, -0.1462,  0.0019,  0.1172,  0.1110,  0.0200,
0:          0.0015], device='cuda:0', grad_fn=<SliceBackward0>)
0: epoch: 0 [1/5 (20%)]	Loss: 0.46620 : 1.45842 :: 0.09365 (1.62 s/sec)
0: epoch: 0 [2/5 (40%)]	Loss: 0.53071 : 1.75486 :: 0.09513 (10.52 s/sec)
0: epoch: 0 [3/5 (60%)]	Loss: 0.44721 : 1.30525 :: 0.09202 (10.33 s/sec)
0: epoch: 0 [4/5 (80%)]	Loss: 0.22192 : 0.38112 :: 0.07477 (10.48 s/sec)
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_idp4qadjd8_epoch0.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_embeds_token_info_idp4qadjd8_epoch0.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_encoder_velocity_u_idp4qadjd8_epoch0.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_encoder_velocity_v_idp4qadjd8_epoch0.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_encoder_specific_humidity_idp4qadjd8_epoch0.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_encoder_velocity_z_idp4qadjd8_epoch0.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_encoder_temperature_idp4qadjd8_epoch0.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_encoder_total_precip_idp4qadjd8_epoch0.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_encoder_t2m_idp4qadjd8_epoch0.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_decoder_velocity_u_idp4qadjd8_epoch0.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_decoder_velocity_v_idp4qadjd8_epoch0.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_decoder_specific_humidity_idp4qadjd8_epoch0.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_decoder_velocity_z_idp4qadjd8_epoch0.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_decoder_temperature_idp4qadjd8_epoch0.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_decoder_total_precip_idp4qadjd8_epoch0.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_decoder_t2m_idp4qadjd8_epoch0.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_tail_velocity_u_idp4qadjd8_epoch0.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_tail_velocity_v_idp4qadjd8_epoch0.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_tail_specific_humidity_idp4qadjd8_epoch0.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_tail_velocity_z_idp4qadjd8_epoch0.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_tail_temperature_idp4qadjd8_epoch0.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_tail_total_precip_idp4qadjd8_epoch0.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_tail_t2m_idp4qadjd8_epoch0.mod
0: validation loss for strategy=forecast at epoch 0 : 0.3652397394180298
0: validation loss for velocity_u : 0.051905643194913864
0: validation loss for velocity_v : 0.08900471031665802
0: validation loss for specific_humidity : 0.030019864439964294
0: validation loss for velocity_z : 0.4923679828643799
0: validation loss for temperature : 0.08688781410455704
0: validation loss for total_precip : 0.7795414328575134
0: validation loss for t2m : 1.0269509553909302
0: 1 : 14:49:32 :: batch_size = 96, lr = 1.5000000000000002e-05
1: 1 : 14:49:46 :: batch_size = 96, lr = 1.5000000000000002e-05
0: [DEBUG] INPUT BATCH
0: Epoch 1, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([0.6983, 0.7299, 0.7227, 0.6837, 0.6316, 0.5731, 0.5067, 0.4463, 0.4114, 0.4055, 0.4218, 0.4562, 0.5068, 0.5713,
0:         0.6480, 0.7285, 0.7932, 0.8311, 0.7644, 0.7678, 0.7371, 0.6826, 0.6194, 0.5501, 0.4781], device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.8211, -0.8123, -0.7903, -0.7520, -0.7010, -0.6367, -0.5390, -0.3904, -0.1996,  0.0095,  0.2079,  0.3627,
0:          0.4591,  0.5078,  0.5261,  0.5276,  0.5210,  0.5084, -0.8493, -0.8275, -0.7929, -0.7508, -0.7054, -0.6439,
0:         -0.5341], device='cuda:0')
0:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.2400, -0.2799, -0.3110, -0.3229, -0.3494, -0.3924, -0.4389, -0.4111, -0.2133, -0.0392,  0.1494,  0.2300,
0:          0.2648,  0.2418,  0.1934,  0.1065,  0.0488,  0.0227, -0.1677, -0.2130, -0.2492, -0.2945, -0.3649, -0.4251,
0:         -0.3964], device='cuda:0')
0:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([ 1.2359,  1.8254,  1.7332,  1.2981,  0.7622,  0.2971,  0.1878,  0.3764,  0.5779,  0.8587,  1.1031,  1.0130,
0:          0.8330,  0.6036,  0.1042, -0.1980, -0.2580, -0.5045,  1.2574,  1.5832,  1.4396,  1.0002,  0.4750,  0.1428,
0:          0.2135], device='cuda:0')
0:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([-1.0398, -0.9513, -0.8659, -0.8114, -0.8009, -0.8295, -0.8909, -0.9759, -1.0754, -1.1761, -1.2561, -1.3122,
0:         -1.3483, -1.3586, -1.3494, -1.3267, -1.2813, -1.2253, -1.1683, -1.0885, -1.0131, -0.9793, -0.9612, -0.9420,
0:         -0.9429], device='cuda:0')
0:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([-0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461,
0:         -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461,
0:         -0.2461], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([ 0.3757,  0.3597,  0.3427,  0.3144,  0.2717,  0.2281,  0.1831,  0.1429,  0.1440,  0.1349,  0.1349,  0.1144,
0:          0.1035,  0.0710,  0.0425,  0.0194,  0.0215,  0.0197,  0.0148,  0.0115, -0.0049, -0.0263, -0.0202, -0.0025,
0:          0.0240], device='cuda:0')
0: [DEBUG] TARGET BATCH
0: Epoch 1, batch 0 - Sparse-masked 'total_precip' shape target data: torch.Size([13824, 243])
0: [DEBUG] First 243 batch values:
0: tensor([-0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461,
0:         -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461,
0:         -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461,
0:         -0.2369, -0.2438, -0.2438, -0.2461, -0.1998, -0.2091, -0.2392, -0.2392, -0.2392, -0.2091, -0.2253, -0.2160,
0:         -0.2461,  0.0131,  0.0201, -0.0795, -0.1535, -0.2230, -0.1906, -0.1906, -0.1813, -0.2183, -0.1373, -0.0193,
0:          0.0409,  0.2515,  0.0062, -0.2021, -0.2068, -0.2091, -0.1628,  0.0501,  0.2492,  0.3279,  0.0224, -0.0656,
0:         -0.1952, -0.1998, -0.1512, -0.0656,  0.0895,  0.0038, -0.0124, -0.1836, -0.1859, -0.2461, -0.2461, -0.2461,
0:         -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461,
0:         -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461,
0:         -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2415, -0.2461, -0.2461,
0:         -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2299, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461,
0:         -0.2461, -0.2461, -0.2461, -0.2299, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461,  0.0409,
0:         -0.2392, -0.2461, -0.2461, -0.2461, -0.2461, -0.2415, -0.2369, -0.2461, -0.1420, -0.1952, -0.2114, -0.2461,
0:         -0.2461, -0.2461, -0.2461, -0.2438, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461,
0:         -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461,
0:         -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461,
0:         -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461,
0:         -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461,
0:         -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461,
0:         -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461, -0.2461,
0:         -0.2461, -0.2461, -0.2461])
0: [DEBUG] PREDICTIONS TRAIN BATCH
0: Epoch 1, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([17280, 972])
0:      first 25 pred values: tensor([-0.0937, -0.1238, -0.1531, -0.1857, -0.2089, -0.2276, -0.2386, -0.2487, -0.2465, -0.2490, -0.2452, -0.2325,
0:         -0.2118, -0.1869, -0.1536, -0.1216, -0.0877, -0.0409, -0.0739, -0.1158, -0.1581, -0.1947, -0.2237, -0.2492,
0:         -0.2654], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([17280, 972])
0:      first 25 pred values: tensor([-0.4997, -0.4586, -0.4182, -0.3759, -0.3344, -0.2826, -0.2392, -0.1929, -0.1430, -0.0888, -0.0332,  0.0211,
0:          0.0644,  0.0963,  0.1069,  0.1039,  0.0805,  0.0434, -0.5521, -0.5004, -0.4491, -0.4009, -0.3437, -0.2873,
0:         -0.2257], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([17280, 972])
0:      first 25 pred values: tensor([ 0.0505, -0.0021, -0.0664, -0.1215, -0.1615, -0.1870, -0.1966, -0.1875, -0.1697, -0.1553, -0.1439, -0.1378,
0:         -0.1454, -0.1456, -0.1393, -0.1264, -0.0948, -0.0601,  0.0888,  0.0211, -0.0360, -0.0924, -0.1376, -0.1585,
0:         -0.1584], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([17280, 972])
0:      first 25 pred values: tensor([ 0.4328,  0.4316,  0.4479,  0.3829,  0.2625,  0.1261, -0.0145, -0.1461, -0.2670, -0.3824, -0.4431, -0.4999,
0:         -0.5960, -0.6295, -0.6099, -0.5715, -0.4897, -0.4118,  0.3826,  0.2832,  0.1742,  0.0136, -0.1797, -0.3804,
0:         -0.5503], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([7680, 2187])
0:      first 25 pred values: tensor([ 0.0987,  0.1371,  0.1769,  0.2139,  0.2428,  0.2605,  0.2623,  0.2489,  0.2186,  0.1733,  0.1113,  0.0384,
0:         -0.0425, -0.1286, -0.2129, -0.2823, -0.3322, -0.3637, -0.3837, -0.4060, -0.4281, -0.4506, -0.4586, -0.4522,
0:         -0.4350], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([13824, 243])
0:      first 25 pred values: tensor([-0.1833, -0.1820, -0.1868, -0.1926, -0.1897, -0.2039, -0.2074, -0.2232, -0.2221, -0.1718, -0.1738, -0.1881,
0:         -0.1954, -0.1929, -0.2066, -0.2148, -0.2202, -0.2290, -0.1581, -0.1699, -0.1694, -0.1801, -0.1804, -0.1944,
0:         -0.2062], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([1536, 2187])
0:      first 25 pred values: tensor([-0.2093, -0.1648, -0.0280, -0.1946, -0.0021, -0.2019,  0.0251, -0.2011,  0.1102, -0.0608,  0.0875,  0.1188,
0:          0.1716, -0.0487, -0.0300,  0.0533,  0.0482,  0.0693,  0.1891, -0.1751,  0.0581,  0.1526,  0.0727,  0.0054,
0:          0.0779], device='cuda:0', grad_fn=<SliceBackward0>)
1: [DEBUG] INPUT BATCH
1: Epoch 1, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([0.4195, 0.4409, 0.4532, 0.4594, 0.4609, 0.4580, 0.4512, 0.4409, 0.4284, 0.4166, 0.4076, 0.4015, 0.3980, 0.3965,
1:         0.3957, 0.3953, 0.3950, 0.3947, 0.3623, 0.3726, 0.3752, 0.3722, 0.3644, 0.3523, 0.3370], device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([0.6732, 0.6955, 0.7120, 0.7228, 0.7287, 0.7299, 0.7272, 0.7226, 0.7159, 0.7051, 0.6896, 0.6688, 0.6427, 0.6133,
1:         0.5809, 0.5469, 0.5106, 0.4720, 0.6863, 0.7011, 0.7107, 0.7159, 0.7176, 0.7176, 0.7159], device='cuda:0')
1:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.5602, -0.4955, -0.4405, -0.3979, -0.3674, -0.3525, -0.3477, -0.3483, -0.3501, -0.3526, -0.3562, -0.3611,
1:         -0.3668, -0.3727, -0.3794, -0.3877, -0.3949, -0.4028, -0.4914, -0.4303, -0.3876, -0.3683, -0.3459, -0.3466,
1:         -0.3469], device='cuda:0')
1:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([ 0.0860,  0.1465,  0.1644,  0.1241,  0.0546, -0.0530, -0.1987, -0.3377, -0.4655, -0.5709, -0.6000, -0.5821,
1:         -0.5260, -0.4207, -0.3108, -0.1830, -0.0530,  0.0613,  0.1330,  0.1241,  0.0748, -0.0396, -0.1898, -0.3534,
1:         -0.5260], device='cuda:0')
1:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([0.6822, 0.6509, 0.6162, 0.5821, 0.5505, 0.5252, 0.5080, 0.4992, 0.5015, 0.5124, 0.5285, 0.5514, 0.5770, 0.6022,
1:         0.6278, 0.6527, 0.6759, 0.6988, 0.7222, 0.7473, 0.7725, 0.7973, 0.8227, 0.8470, 0.8693], device='cuda:0')
1:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
1:      first 25 values: tensor([-0.2588, -0.2588, -0.2588, -0.2588, -0.2576, -0.2576, -0.2551, -0.2539, -0.2502, -0.2588, -0.2588, -0.2588,
1:         -0.2588, -0.2588, -0.2563, -0.2551, -0.2526, -0.2526, -0.2588, -0.2588, -0.2588, -0.2588, -0.2588, -0.2576,
1:         -0.2563], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([ 0.8653,  0.7189,  0.6067,  0.4932,  0.4010,  0.2669,  0.1259, -0.0246, -0.1035, -0.1085, -0.0753, -0.1430,
1:         -0.2419, -0.3641, -0.3831, -0.3631, -0.2175, -0.2550, -0.4571, -0.7133, -0.6961, -0.5719, -0.4827, -0.4288,
1:         -0.4167], device='cuda:0')
1: [DEBUG] TARGET BATCH
1: Epoch 1, batch 0 - Sparse-masked 'total_precip' shape target data: torch.Size([13824, 243])
1: [DEBUG] First 243 batch values:
1: tensor([-0.2502, -0.2316, -0.2353, -0.2378, -0.2477, -0.2341, -0.2118, -0.2440, -0.2204, -0.2452, -0.2365, -0.2477,
1:         -0.2241, -0.2118, -0.2254, -0.2105, -0.2353, -0.2068, -0.2019, -0.1375, -0.1214, -0.1040, -0.1560, -0.1734,
1:         -0.1944, -0.1895, -0.1585, -0.1114, -0.0099,  0.0421, -0.0223, -0.0743, -0.0768, -0.1015, -0.0929, -0.0669,
1:          0.0012, -0.0124,  0.0359,  0.0012, -0.0223, -0.0396, -0.0173, -0.0248,  0.0520,  0.0384,  0.0161,  0.0817,
1:          0.0384,  0.0545,  0.0681, -0.0483, -0.0136, -0.0991, -0.0149,  0.1982,  0.1090,  0.1957,  0.1610,  0.0372,
1:          0.0062, -0.0198, -0.0223, -0.1399, -0.1040, -0.1436, -0.1362, -0.1375, -0.1734, -0.1796, -0.1659, -0.1659,
1:         -0.1139, -0.2155, -0.2130, -0.2031, -0.2019, -0.2080, -0.2266, -0.2167, -0.2130, -0.2588, -0.2576, -0.2576,
1:         -0.2502, -0.2415, -0.2378, -0.2043, -0.2217, -0.2427, -0.2402, -0.2427, -0.2452, -0.2440, -0.2316, -0.2180,
1:         -0.1758, -0.1994, -0.1957, -0.2241, -0.2316, -0.2254, -0.2291, -0.2303, -0.2167, -0.1957, -0.1994, -0.1932,
1:         -0.2068, -0.2155, -0.1969, -0.1783, -0.1796, -0.1659, -0.1597, -0.1498, -0.1709, -0.1659, -0.1424, -0.1337,
1:         -0.0953, -0.0854, -0.0693, -0.0446, -0.0248, -0.0830, -0.1523, -0.0904, -0.0780, -0.0545, -0.0557, -0.0916,
1:         -0.1399,  0.0161,  0.0223,  0.1399,  0.0396,  0.2341,  0.1622,  0.1164,  0.0793, -0.0644, -0.0049,  0.0149,
1:         -0.1585, -0.1152, -0.0049, -0.0359,  0.0409,  0.1028, -0.0025,  0.0966, -0.0025, -0.1275, -0.1882, -0.1573,
1:         -0.1486, -0.0991, -0.0743, -0.1028, -0.0632, -0.0619, -0.2588, -0.2588, -0.2502, -0.2427, -0.2390, -0.2502,
1:         -0.2464, -0.2489, -0.2514, -0.2588, -0.2563, -0.2514, -0.2477, -0.2551, -0.2526, -0.2526, -0.2155, -0.2378,
1:         -0.2539, -0.2526, -0.2526, -0.2514, -0.2217, -0.2167, -0.2229, -0.1226, -0.1498, -0.2464, -0.2440, -0.2415,
1:         -0.2266, -0.1957, -0.1412, -0.1424, -0.0594, -0.0830, -0.2378, -0.2365, -0.2279, -0.2105, -0.1585, -0.1028,
1:         -0.0186, -0.1028, -0.1015, -0.2192, -0.2118, -0.2031, -0.1350, -0.0607,  0.0062,  0.0917, -0.0644, -0.0508,
1:         -0.1870, -0.1659, -0.0532,  0.0223,  0.0285,  0.0099,  0.0805,  0.0161, -0.0532, -0.0458,  0.0273,  0.0458,
1:          0.0817,  0.0421,  0.0310,  0.2873,  0.0842,  0.1177, -0.1090, -0.1053, -0.1263, -0.1201, -0.1375, -0.1127,
1:          0.0050, -0.0483, -0.0136])
1: [DEBUG] PREDICTIONS TRAIN BATCH
1: Epoch 1, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([17280, 972])
1:      first 25 pred values: tensor([0.7060, 0.7346, 0.7605, 0.7750, 0.7884, 0.7965, 0.7940, 0.7894, 0.7808, 0.7646, 0.7500, 0.7352, 0.7217, 0.7110,
1:         0.7078, 0.7081, 0.7245, 0.7502, 0.6696, 0.6974, 0.7224, 0.7476, 0.7725, 0.7897, 0.8039], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([17280, 972])
1:      first 25 pred values: tensor([-0.1345, -0.1635, -0.1912, -0.2212, -0.2610, -0.2992, -0.3442, -0.3881, -0.4206, -0.4419, -0.4549, -0.4598,
1:         -0.4658, -0.4693, -0.4744, -0.4794, -0.4895, -0.4976, -0.1261, -0.1534, -0.1785, -0.2147, -0.2486, -0.2948,
1:         -0.3424], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([17280, 972])
1:      first 25 pred values: tensor([-0.1305, -0.0853, -0.0467, -0.0074,  0.0359,  0.0761,  0.1224,  0.1780,  0.2483,  0.3284,  0.4174,  0.5210,
1:          0.6253,  0.7234,  0.8061,  0.8595,  0.8759,  0.8595, -0.2934, -0.2777, -0.2526, -0.2274, -0.2040, -0.1722,
1:         -0.1336], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([17280, 972])
1:      first 25 pred values: tensor([0.6211, 0.6557, 0.6433, 0.6329, 0.6287, 0.5954, 0.5402, 0.4827, 0.4717, 0.4649, 0.4100, 0.3864, 0.3940, 0.3184,
1:         0.2357, 0.2107, 0.1585, 0.1070, 0.4891, 0.5263, 0.5281, 0.5440, 0.5609, 0.5384, 0.5113], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([7680, 2187])
1:      first 25 pred values: tensor([-0.2757, -0.2869, -0.2973, -0.3012, -0.2999, -0.2968, -0.2921, -0.2879, -0.2829, -0.2761, -0.2705, -0.2607,
1:         -0.2506, -0.2393, -0.2321, -0.2230, -0.2160, -0.2058, -0.1926, -0.1795, -0.1656, -0.1590, -0.1526, -0.1527,
1:         -0.1514], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([13824, 243])
1:      first 25 pred values: tensor([-0.2120, -0.2204, -0.2202, -0.2258, -0.2226, -0.2330, -0.2383, -0.2416, -0.2494, -0.1977, -0.2022, -0.2095,
1:         -0.2141, -0.2092, -0.2230, -0.2220, -0.2287, -0.2388, -0.1761, -0.1814, -0.1872, -0.1877, -0.1936, -0.1947,
1:         -0.2022], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([1536, 2187])
1:      first 25 pred values: tensor([-0.2412, -0.2136,  0.0379, -0.1900,  0.0443, -0.1992,  0.0089, -0.2070,  0.0835, -0.0760,  0.0253,  0.1004,
1:          0.1673, -0.0500,  0.0809,  0.0585,  0.0850,  0.0529,  0.2205, -0.1813, -0.0094,  0.1668,  0.0552, -0.0030,
1:          0.0594], device='cuda:0', grad_fn=<SliceBackward0>)
0: epoch: 1 [1/5 (20%)]	Loss: 0.21462 : 0.33883 :: 0.06320 (1.40 s/sec)
0: epoch: 1 [2/5 (40%)]	Loss: 0.21722 : 0.33260 :: 0.06240 (10.42 s/sec)
0: epoch: 1 [3/5 (60%)]	Loss: 0.21606 : 0.34294 :: 0.06375 (10.49 s/sec)
0: epoch: 1 [4/5 (80%)]	Loss: 0.19579 : 0.33150 :: 0.06306 (10.49 s/sec)
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_idp4qadjd8_epoch1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_embeds_token_info_idp4qadjd8_epoch1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_encoder_velocity_u_idp4qadjd8_epoch1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_encoder_velocity_v_idp4qadjd8_epoch1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_encoder_specific_humidity_idp4qadjd8_epoch1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_encoder_velocity_z_idp4qadjd8_epoch1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_encoder_temperature_idp4qadjd8_epoch1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_encoder_total_precip_idp4qadjd8_epoch1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_encoder_t2m_idp4qadjd8_epoch1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_decoder_velocity_u_idp4qadjd8_epoch1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_decoder_velocity_v_idp4qadjd8_epoch1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_decoder_specific_humidity_idp4qadjd8_epoch1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_decoder_velocity_z_idp4qadjd8_epoch1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_decoder_temperature_idp4qadjd8_epoch1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_decoder_total_precip_idp4qadjd8_epoch1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_decoder_t2m_idp4qadjd8_epoch1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_tail_velocity_u_idp4qadjd8_epoch1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_tail_velocity_v_idp4qadjd8_epoch1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_tail_specific_humidity_idp4qadjd8_epoch1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_tail_velocity_z_idp4qadjd8_epoch1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_tail_temperature_idp4qadjd8_epoch1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_tail_total_precip_idp4qadjd8_epoch1.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_tail_t2m_idp4qadjd8_epoch1.mod
0: validation loss for strategy=forecast at epoch 1 : 0.3375192880630493
0: validation loss for velocity_u : 0.044217728078365326
0: validation loss for velocity_v : 0.08922724425792694
0: validation loss for specific_humidity : 0.022299230098724365
0: validation loss for velocity_z : 0.4119876027107239
0: validation loss for temperature : 0.08464483171701431
0: validation loss for total_precip : 0.6571410894393921
0: validation loss for t2m : 1.0531169176101685
0: 2 : 14:56:47 :: batch_size = 96, lr = 2e-05
1: 2 : 14:56:58 :: batch_size = 96, lr = 2e-05
0: [DEBUG] INPUT BATCH
0: Epoch 2, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.5321, -0.5318, -0.5326, -0.5354, -0.5423, -0.5544, -0.5706, -0.5871, -0.6016, -0.6136, -0.6238, -0.6325,
0:         -0.6397, -0.6463, -0.6527, -0.6590, -0.6637, -0.6662, -0.5732, -0.5681, -0.5627, -0.5599, -0.5625, -0.5719,
0:         -0.5860], device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.7236, -0.7625, -0.8025, -0.8401, -0.8695, -0.8863, -0.8904, -0.8878, -0.8859, -0.8880, -0.8930, -0.8975,
0:         -0.9003, -0.9022, -0.9039, -0.9050, -0.9044, -0.9018, -0.7760, -0.8095, -0.8424, -0.8708, -0.8902, -0.8990,
0:         -0.8996], device='cuda:0')
0:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.7646, -0.7570, -0.7547, -0.7525, -0.7486, -0.7451, -0.7383, -0.7330, -0.7334, -0.7315, -0.7269, -0.7234,
0:         -0.7166, -0.7103, -0.7055, -0.6999, -0.6960, -0.6931, -0.7601, -0.7529, -0.7488, -0.7467, -0.7425, -0.7384,
0:         -0.7360], device='cuda:0')
0:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([ 0.0536, -0.0922, -0.2412, -0.3837, -0.4974, -0.5294, -0.4433, -0.2578, -0.0259,  0.2004,  0.3705,  0.4334,
0:          0.3937,  0.3263,  0.3230,  0.3915,  0.4588,  0.4654, -0.1087, -0.2214, -0.3395, -0.4687, -0.5758, -0.5902,
0:         -0.4908], device='cuda:0')
0:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([ 0.3532,  0.3063,  0.2656,  0.2353,  0.2167,  0.2082,  0.2059,  0.2041,  0.1992,  0.1911,  0.1799,  0.1665,
0:          0.1504,  0.1329,  0.1163,  0.1016,  0.0880,  0.0722,  0.0542,  0.0353,  0.0162, -0.0032, -0.0237, -0.0450,
0:         -0.0675], device='cuda:0')
0:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([-0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2421, -0.2141, -0.2560, -0.2560, -0.2560,
0:         -0.2560, -0.2560, -0.2560, -0.2164, -0.1955, -0.1605, -0.2560, -0.2560, -0.2560, -0.2560, -0.2537, -0.2514,
0:         -0.1931], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([-0.2141, -0.2877, -0.2510, -0.2047, -0.0805,  0.0970,  0.1905,  0.3448,  0.4518,  0.5177,  0.6798,  0.8356,
0:          0.8673,  0.8649,  0.8018,  0.7289,  0.6890,  0.6659,  0.6092,  0.5511,  0.5062,  0.4567,  0.3938,  0.3436,
0:          0.3278], device='cuda:0')
0: [DEBUG] TARGET BATCH
0: Epoch 2, batch 0 - Sparse-masked 'total_precip' shape target data: torch.Size([13824, 243])
0: [DEBUG] First 243 batch values:
0: tensor([-0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2549, -0.2549, -0.2549, -0.2560, -0.2560, -0.2560,
0:         -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560,
0:         -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560,
0:         -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560,
0:         -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2549, -0.2560, -0.2560, -0.2560, -0.2549, -0.2560, -0.2560,
0:         -0.2549, -0.2549, -0.2525, -0.2560, -0.2560, -0.2549, -0.2537, -0.2525, -0.2537, -0.2549, -0.2537, -0.2514,
0:         -0.2549, -0.2525, -0.2525, -0.2502, -0.2490, -0.2525, -0.2549, -0.2525, -0.2514, -0.2560, -0.2560, -0.2560,
0:         -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560,
0:         -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560,
0:         -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560,
0:         -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560,
0:         -0.2560, -0.2549, -0.2560, -0.2560, -0.2560, -0.2560, -0.2549, -0.2549, -0.2549, -0.2549, -0.2549, -0.2549,
0:         -0.2560, -0.2549, -0.2549, -0.2537, -0.2537, -0.2537, -0.2549, -0.2537, -0.2525, -0.2549, -0.2537, -0.2525,
0:         -0.2537, -0.2537, -0.2525, -0.2537, -0.2525, -0.2514, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560,
0:         -0.2560, -0.2560, -0.2537, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2549, -0.2549,
0:         -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560,
0:         -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560,
0:         -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2549, -0.2560, -0.2560, -0.2560,
0:         -0.2560, -0.2560, -0.2560, -0.2549, -0.2549, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2560, -0.2549,
0:         -0.2537, -0.2537, -0.2549, -0.2549, -0.2549, -0.2549, -0.2560, -0.2549, -0.2549, -0.2537, -0.2537, -0.2537,
0:         -0.2549, -0.2525, -0.2525])
0: [DEBUG] PREDICTIONS TRAIN BATCH
0: Epoch 2, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([17280, 972])
0:      first 25 pred values: tensor([-0.4784, -0.5013, -0.5208, -0.5338, -0.5251, -0.5173, -0.5044, -0.4898, -0.4815, -0.4729, -0.4684, -0.4585,
0:         -0.4514, -0.4492, -0.4525, -0.4576, -0.4604, -0.4612, -0.4960, -0.5228, -0.5513, -0.5670, -0.5663, -0.5616,
0:         -0.5451], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([17280, 972])
0:      first 25 pred values: tensor([-0.3937, -0.4039, -0.4295, -0.4586, -0.4855, -0.5093, -0.5387, -0.5672, -0.5893, -0.6105, -0.6246, -0.6384,
0:         -0.6564, -0.6774, -0.6879, -0.6844, -0.6644, -0.6396, -0.3870, -0.3991, -0.4288, -0.4711, -0.5070, -0.5453,
0:         -0.5753], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([17280, 972])
0:      first 25 pred values: tensor([-0.0025,  0.0710,  0.1523,  0.2587,  0.3739,  0.4807,  0.5688,  0.6410,  0.7042,  0.7410,  0.7662,  0.7820,
0:          0.7874,  0.7920,  0.7800,  0.7600,  0.7325,  0.7103, -0.0075,  0.0575,  0.1589,  0.2683,  0.3829,  0.4901,
0:          0.5680], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([17280, 972])
0:      first 25 pred values: tensor([0.1045, 0.1493, 0.1738, 0.1844, 0.2227, 0.2043, 0.1450, 0.1200, 0.1516, 0.1751, 0.1713, 0.2088, 0.2650, 0.2590,
0:         0.2127, 0.2235, 0.2390, 0.1721, 0.1984, 0.2239, 0.1997, 0.1967, 0.2525, 0.2307, 0.1850], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([7680, 2187])
0:      first 25 pred values: tensor([0.5420, 0.5264, 0.5146, 0.4986, 0.4787, 0.4476, 0.4159, 0.3927, 0.3718, 0.3558, 0.3375, 0.3234, 0.3124, 0.3042,
0:         0.2871, 0.2741, 0.2547, 0.2424, 0.2359, 0.2269, 0.2186, 0.1979, 0.1751, 0.1427, 0.1068], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([13824, 243])
0:      first 25 pred values: tensor([-0.2340, -0.2384, -0.2428, -0.2488, -0.2502, -0.2526, -0.2542, -0.2513, -0.2457, -0.2351, -0.2412, -0.2472,
0:         -0.2504, -0.2552, -0.2569, -0.2553, -0.2509, -0.2446, -0.2402, -0.2428, -0.2459, -0.2518, -0.2563, -0.2549,
0:         -0.2522], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([1536, 2187])
0:      first 25 pred values: tensor([-0.0127, -0.1685,  0.0102, -0.2670,  0.0234, -0.0661,  0.0045, -0.1431,  0.0527,  0.0066,  0.0874,  0.1388,
0:          0.2644, -0.0402,  0.1003, -0.0014,  0.1895, -0.0245,  0.0502, -0.0480,  0.0052,  0.1336,  0.0338,  0.1508,
0:          0.0978], device='cuda:0', grad_fn=<SliceBackward0>)
1: [DEBUG] INPUT BATCH
1: Epoch 2, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([0.8880, 0.9608, 1.0321, 1.0925, 1.1344, 1.1541, 1.1519, 1.1304, 1.0939, 1.0464, 0.9921, 0.9353, 0.8784, 0.8240,
1:         0.7746, 0.7336, 0.7040, 0.6857, 0.9069, 0.9802, 1.0517, 1.1133, 1.1582, 1.1832, 1.1873], device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.7217, -0.5809, -0.4346, -0.2897, -0.1499, -0.0158,  0.1134,  0.2356,  0.3438,  0.4286,  0.4823,  0.5022,
1:          0.4907,  0.4535,  0.3968,  0.3282,  0.2560,  0.1882, -0.6590, -0.5436, -0.4195, -0.2912, -0.1616, -0.0331,
1:          0.0902], device='cuda:0')
1:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.4898, -0.4863, -0.4843, -0.4826, -0.4811, -0.4813, -0.4727, -0.4613, -0.4077, -0.3409, -0.2616, -0.1439,
1:         -0.0291,  0.0714,  0.1821,  0.2439,  0.2895,  0.3058, -0.5238, -0.5204, -0.5191, -0.5179, -0.5108, -0.5037,
1:         -0.4746], device='cuda:0')
1:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([ 2.0699e-01,  4.0359e-04, -3.0404e-01, -6.4545e-01, -9.3684e-01, -1.0847e+00, -1.0521e+00, -8.8465e-01,
1:         -6.7806e-01, -5.1280e-01, -4.1929e-01, -3.6710e-01, -2.9969e-01, -1.9748e-01, -8.4405e-02,  4.0359e-04,
1:          3.7371e-02,  6.7815e-02, -3.9456e-03, -1.4312e-01, -3.8232e-01, -6.9546e-01, -9.8903e-01, -1.1478e+00,
1:         -1.1282e+00], device='cuda:0')
1:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([1.1839, 1.1767, 1.1607, 1.1342, 1.0979, 1.0541, 1.0055, 0.9554, 0.9079, 0.8675, 0.8385, 0.8231, 0.8202, 0.8255,
1:         0.8345, 0.8447, 0.8567, 0.8714, 0.8882, 0.9042, 0.9174, 0.9272, 0.9349, 0.9409, 0.9446], device='cuda:0')
1:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
1:      first 25 values: tensor([-0.2467, -0.2467, -0.2467, -0.2467, -0.2456, -0.2444, -0.1494, -0.0215,  0.0328, -0.2467, -0.2467, -0.2467,
1:         -0.2467, -0.2467, -0.2467, -0.1720, -0.0725, -0.0725, -0.2467, -0.2467, -0.2467, -0.2467, -0.2467, -0.2467,
1:         -0.2467], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([2.8983, 2.9811, 2.9420, 2.9080, 2.8841, 2.8536, 2.8025, 2.7411, 2.6841, 2.6106, 2.5382, 2.4756, 2.4095, 2.3575,
1:         2.3083, 2.2908, 2.2796, 2.2576, 2.2666, 2.2721, 2.2721, 2.2697, 2.2685, 2.2640, 2.2406], device='cuda:0')
1: [DEBUG] TARGET BATCH
1: Epoch 2, batch 0 - Sparse-masked 'total_precip' shape target data: torch.Size([13824, 243])
1: [DEBUG] First 243 batch values:
1: tensor([-2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01,  5.2500e-01,  1.5536e+00,
1:          1.5536e+00, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.3426e-01,
1:         -2.3313e-01, -2.3313e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01,
1:         -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01,
1:         -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01,
1:         -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01,
1:         -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01,
1:         -2.4671e-01, -2.4444e-01, -2.4331e-01, -2.4444e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01,
1:         -2.4671e-01, -2.4331e-01, -2.3879e-01, -2.3539e-01, -2.3765e-01, -2.4331e-01, -2.4671e-01, -2.4671e-01,
1:         -2.4671e-01, -2.4218e-01, -2.3992e-01, -2.3539e-01, -2.3087e-01, -2.3652e-01, -2.4558e-01, -2.4671e-01,
1:         -2.4558e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01,
1:         -2.4671e-01, -2.0145e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01,
1:         -2.4671e-01, -2.4671e-01, -1.5166e-01, -2.4671e-01, -2.4558e-01, -2.4105e-01, -2.3765e-01, -2.4105e-01,
1:         -2.4558e-01, -2.4671e-01, -2.4671e-01, -1.2450e-01, -2.4671e-01, -2.4558e-01, -2.4444e-01, -2.4444e-01,
1:         -2.4444e-01, -2.4558e-01, -2.4671e-01, -2.4671e-01, -2.0484e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01,
1:         -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.0484e-01, -2.4671e-01, -2.4671e-01,
1:         -2.4671e-01, -2.4671e-01, -2.4558e-01, -2.4558e-01, -2.4558e-01, -2.4558e-01, -2.4444e-01, -2.4671e-01,
1:         -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4558e-01, -2.4444e-01, -2.4444e-01, -2.4558e-01,
1:         -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4444e-01, -2.4444e-01, -2.4444e-01,
1:         -2.4558e-01, -2.4671e-01, -2.4671e-01, -2.4558e-01, -2.4558e-01, -2.4558e-01, -2.4671e-01, -2.4671e-01,
1:         -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01,
1:         -2.4671e-01, -2.4671e-01, -2.9452e-02, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01,
1:         -2.4671e-01, -2.4671e-01, -2.4671e-01,  2.1496e-01, -2.4671e-01, -2.4218e-01, -2.2294e-01, -2.0937e-01,
1:         -2.2294e-01, -2.4218e-01, -1.3611e-02,  2.9869e-01,  5.3971e-01, -3.7373e-02,  1.0992e-03,  1.2444e-01,
1:          2.8285e-01, -1.4742e-02, -2.4218e-01, -8.8292e-02, -8.8292e-02, -8.8292e-02,  1.0407e-01,  1.6630e-01,
1:          4.5371e-01,  6.4494e-01,  3.0888e-01, -1.3469e-01,  1.9233e-01,  6.2797e-01,  6.2797e-01,  5.9063e-01,
1:          6.5286e-01,  8.9841e-01,  1.0070e+00,  3.6206e-01, -1.3355e-01,  1.9572e-01,  3.4395e-01,  3.4395e-01,
1:          7.2302e-01,  5.0803e-01,  5.1142e-01,  5.6687e-01,  2.3759e-01, -1.7542e-01,  3.0519e-02,  2.4861e-02,
1:         -2.4671e-01,  1.0860e-01, -2.0145e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01,  4.4938e-03,  1.7309e-01,
1:          1.7536e-01, -8.6029e-02, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4671e-01, -2.4444e-01,
1:         -2.4331e-01, -2.4218e-01, -2.3765e-01])
1: [DEBUG] PREDICTIONS TRAIN BATCH
1: Epoch 2, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([17280, 972])
1:      first 25 pred values: tensor([0.6878, 0.7024, 0.7201, 0.7271, 0.7374, 0.7379, 0.7391, 0.7446, 0.7527, 0.7554, 0.7496, 0.7385, 0.7206, 0.6999,
1:         0.6851, 0.6774, 0.6719, 0.6654, 0.6957, 0.6953, 0.7000, 0.7008, 0.7036, 0.6946, 0.6961], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([17280, 972])
1:      first 25 pred values: tensor([-0.1882, -0.1520, -0.1232, -0.0970, -0.0725, -0.0485, -0.0332, -0.0253, -0.0138, -0.0028,  0.0088,  0.0213,
1:          0.0225,  0.0172,  0.0081, -0.0028, -0.0108, -0.0214, -0.1938, -0.1560, -0.1266, -0.1108, -0.0903, -0.0776,
1:         -0.0643], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([17280, 972])
1:      first 25 pred values: tensor([-0.5012, -0.4920, -0.5078, -0.5199, -0.5263, -0.5332, -0.5429, -0.5499, -0.5514, -0.5627, -0.5734, -0.5805,
1:         -0.5866, -0.5848, -0.5853, -0.5779, -0.5692, -0.5527, -0.5256, -0.5314, -0.5328, -0.5444, -0.5537, -0.5503,
1:         -0.5605], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([17280, 972])
1:      first 25 pred values: tensor([-0.4482, -0.4836, -0.4154, -0.3638, -0.3130, -0.3006, -0.3157, -0.3364, -0.3341, -0.2978, -0.3155, -0.3611,
1:         -0.3415, -0.3388, -0.3331, -0.2232, -0.1167, -0.0983, -0.3462, -0.4292, -0.3889, -0.2952, -0.1621, -0.1377,
1:         -0.2167], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([7680, 2187])
1:      first 25 pred values: tensor([0.1003, 0.0905, 0.0873, 0.0830, 0.0827, 0.0793, 0.0773, 0.0782, 0.0761, 0.0700, 0.0551, 0.0466, 0.0436, 0.0441,
1:         0.0365, 0.0323, 0.0199, 0.0151, 0.0185, 0.0223, 0.0318, 0.0291, 0.0255, 0.0160, 0.0061], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([13824, 243])
1:      first 25 pred values: tensor([-0.2407, -0.2393, -0.2402, -0.2398, -0.2407, -0.2406, -0.2407, -0.2417, -0.2390, -0.2383, -0.2425, -0.2435,
1:         -0.2446, -0.2432, -0.2434, -0.2439, -0.2427, -0.2408, -0.2408, -0.2423, -0.2446, -0.2458, -0.2485, -0.2487,
1:         -0.2449], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([1536, 2187])
1:      first 25 pred values: tensor([-0.0895, -0.1814,  0.0385, -0.2169,  0.1670, -0.0964,  0.0923, -0.1541,  0.0833, -0.0066,  0.0055,  0.1731,
1:          0.2228, -0.0366,  0.0202, -0.0092,  0.1606,  0.0300,  0.1542, -0.0540,  0.0539,  0.1941, -0.0310,  0.1038,
1:          0.2536], device='cuda:0', grad_fn=<SliceBackward0>)
0: epoch: 2 [1/5 (20%)]	Loss: 0.22276 : 0.39340 :: 0.06096 (1.44 s/sec)
0: epoch: 2 [2/5 (40%)]	Loss: 0.23070 : 0.46707 :: 0.06262 (10.49 s/sec)
0: epoch: 2 [3/5 (60%)]	Loss: 0.19938 : 0.33737 :: 0.05993 (10.53 s/sec)
0: epoch: 2 [4/5 (80%)]	Loss: 0.18589 : 0.29106 :: 0.05688 (10.53 s/sec)
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_idp4qadjd8_epoch2.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_embeds_token_info_idp4qadjd8_epoch2.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_encoder_velocity_u_idp4qadjd8_epoch2.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_encoder_velocity_v_idp4qadjd8_epoch2.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_encoder_specific_humidity_idp4qadjd8_epoch2.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_encoder_velocity_z_idp4qadjd8_epoch2.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_encoder_temperature_idp4qadjd8_epoch2.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_encoder_total_precip_idp4qadjd8_epoch2.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_encoder_t2m_idp4qadjd8_epoch2.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_decoder_velocity_u_idp4qadjd8_epoch2.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_decoder_velocity_v_idp4qadjd8_epoch2.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_decoder_specific_humidity_idp4qadjd8_epoch2.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_decoder_velocity_z_idp4qadjd8_epoch2.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_decoder_temperature_idp4qadjd8_epoch2.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_decoder_total_precip_idp4qadjd8_epoch2.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_decoder_t2m_idp4qadjd8_epoch2.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_tail_velocity_u_idp4qadjd8_epoch2.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_tail_velocity_v_idp4qadjd8_epoch2.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_tail_specific_humidity_idp4qadjd8_epoch2.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_tail_velocity_z_idp4qadjd8_epoch2.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_tail_temperature_idp4qadjd8_epoch2.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_tail_total_precip_idp4qadjd8_epoch2.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_tail_t2m_idp4qadjd8_epoch2.mod
0: validation loss for strategy=forecast at epoch 2 : 0.3586759567260742
0: validation loss for velocity_u : 0.04283867031335831
0: validation loss for velocity_v : 0.0771346241235733
0: validation loss for specific_humidity : 0.024762704968452454
0: validation loss for velocity_z : 0.5081539750099182
0: validation loss for temperature : 0.07974833995103836
0: validation loss for total_precip : 0.771420955657959
0: validation loss for t2m : 1.0066725015640259
1: 3 : 15:03:50 :: batch_size = 96, lr = 1.9512195121951222e-05
0: 3 : 15:03:50 :: batch_size = 96, lr = 1.9512195121951222e-05
1: [DEBUG] INPUT BATCH
1: Epoch 3, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-1.0587, -1.0503, -1.0390, -1.0271, -1.0182, -1.0155, -1.0183, -1.0217, -1.0242, -1.0253, -1.0245, -1.0236,
1:         -1.0244, -1.0261, -1.0274, -1.0256, -1.0203, -1.0091, -1.0625, -1.0530, -1.0415, -1.0285, -1.0183, -1.0174,
1:         -1.0230], device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.3298, -0.3131, -0.2977, -0.2837, -0.2699, -0.2549, -0.2383, -0.2228, -0.2066, -0.1858, -0.1603, -0.1315,
1:         -0.1036, -0.0805, -0.0614, -0.0450, -0.0314, -0.0226, -0.3509, -0.3368, -0.3232, -0.3073, -0.2853, -0.2598,
1:         -0.2344], device='cuda:0')
1:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([0.4929, 0.4708, 0.4492, 0.4300, 0.3954, 0.3613, 0.3068, 0.2802, 0.2631, 0.2308, 0.1961, 0.1545, 0.1113, 0.0827,
1:         0.0567, 0.0373, 0.0239, 0.0161, 0.5191, 0.4922, 0.4717, 0.4466, 0.4019, 0.3446, 0.2836], device='cuda:0')
1:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.9509, -1.0071, -1.0891, -1.1598, -1.1699, -1.1070, -1.0340, -1.0127, -1.0003, -0.9352, -0.8106, -0.7095,
1:         -0.6096, -0.5018, -0.3704, -0.1986, -0.0380,  0.0777, -0.9285, -0.9835, -1.0947, -1.1261, -1.0868, -1.0003,
1:         -0.8622], device='cuda:0')
1:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-1.8665, -1.8010, -1.7182, -1.6255, -1.5079, -1.3750, -1.2617, -1.1887, -1.1601, -1.1398, -1.1226, -1.0930,
1:         -1.0656, -1.0597, -1.0695, -1.0924, -1.1163, -1.1509, -1.1828, -1.2032, -1.2053, -1.2049, -1.2190, -1.2404,
1:         -1.2703], device='cuda:0')
1:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
1:      first 25 values: tensor([-0.0115,  0.0184,  0.2190,  0.2514,  0.0558,  0.2900,  0.0994,  0.0608,  0.1143,  0.0047, -0.0451,  0.0109,
1:          0.1168,  0.1878,  0.3822,  0.2377,  0.3685,  0.3174, -0.1099, -0.0825,  0.0608,  0.1841,  0.2613,  0.3872,
1:          0.3187], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([0.6109, 0.5915, 0.6028, 0.6453, 0.7237, 0.7442, 0.8374, 1.0044, 1.0759, 1.1563, 1.1945, 1.2046, 1.2155, 1.2021,
1:         1.2537, 1.2365, 1.1492, 1.1251, 1.1317, 1.1058, 1.0633, 1.0495, 1.0493, 1.0629, 1.0718], device='cuda:0')
1: [DEBUG] TARGET BATCH
1: Epoch 3, batch 0 - Sparse-masked 'total_precip' shape target data: torch.Size([13824, 243])
1: [DEBUG] First 243 batch values:
1: tensor([ 0.1206, -0.0065, -0.1635, -0.2407, -0.2581, -0.2581, -0.2482, -0.2208, -0.2282,  0.0408,  0.0982,  0.0334,
1:         -0.0513, -0.0937, -0.1062, -0.2208, -0.2332, -0.2183, -0.0837, -0.0613, -0.0738, -0.1211, -0.1012, -0.1311,
1:         -0.1734, -0.1909, -0.2058, -0.1535, -0.1410, -0.1510, -0.1535, -0.1485, -0.1385, -0.1385, -0.1485, -0.1535,
1:         -0.1610, -0.1535, -0.1635, -0.1659, -0.1610, -0.1460, -0.1385, -0.1435, -0.1385, -0.1435, -0.1510, -0.1635,
1:         -0.1809, -0.1684, -0.1560, -0.1560, -0.1585, -0.1610, -0.1510, -0.1585, -0.1859, -0.2108, -0.1958, -0.1684,
1:         -0.1684, -0.1635, -0.1734, -0.1186, -0.1859, -0.2158, -0.2257, -0.2133, -0.1884, -0.1510, -0.1261, -0.1410,
1:         -0.0140, -0.1261, -0.1261, -0.0962, -0.1385, -0.1784, -0.0563,  0.1704, -0.0488, -0.0439, -0.1560, -0.2282,
1:         -0.2482, -0.2507, -0.2581, -0.2556, -0.2407, -0.2532,  0.0259,  0.0433,  0.0309, -0.0389, -0.1161, -0.0862,
1:         -0.2233, -0.2083, -0.2282, -0.0414, -0.0439, -0.0738, -0.1385, -0.1410, -0.1734, -0.1659, -0.1635, -0.1834,
1:         -0.1311, -0.1311, -0.1585, -0.1560, -0.1709, -0.1585, -0.1560, -0.1410, -0.1336, -0.1510, -0.1510, -0.1560,
1:         -0.1560, -0.1610, -0.1435, -0.1535, -0.1186, -0.1086, -0.1585, -0.1410, -0.1460, -0.1510, -0.1485, -0.1585,
1:         -0.1659, -0.1410, -0.1385, -0.1734, -0.1560, -0.1659, -0.1759, -0.1635, -0.1784, -0.2033, -0.2108, -0.2083,
1:         -0.2233, -0.2332, -0.2332, -0.2208, -0.2158, -0.2183, -0.2233, -0.2257, -0.2257, -0.1983, -0.2108, -0.2233,
1:         -0.1983, -0.1784, -0.2133, -0.2183, -0.2257, -0.2357, -0.2046, -0.2170, -0.2021, -0.1797, -0.1759, -0.1784,
1:         -0.2432, -0.2457, -0.2556, -0.0613, -0.0613, -0.0414, -0.0738, -0.1248, -0.1049, -0.1884, -0.2220, -0.2370,
1:          0.0757,  0.0583, -0.0090, -0.0675, -0.0638, -0.1136, -0.1635, -0.1772, -0.2083,  0.0097,  0.0408, -0.0152,
1:         -0.0389, -0.0464, -0.0887, -0.1012, -0.1174, -0.1834, -0.0414, -0.0202, -0.0464, -0.0663, -0.0775, -0.0900,
1:         -0.1012, -0.0812, -0.1398, -0.0576, -0.0837, -0.1111, -0.1360, -0.1522, -0.1398, -0.1659, -0.1248, -0.1373,
1:         -0.1099, -0.1336, -0.1585, -0.1946, -0.2033, -0.2008, -0.2183, -0.2095, -0.2046, -0.2033, -0.1385, -0.1485,
1:         -0.2170, -0.2120, -0.2295, -0.2357, -0.2432, -0.2382, -0.1934, -0.1610, -0.1423, -0.1360, -0.1784, -0.2307,
1:         -0.2507, -0.2494, -0.2444])
1: [DEBUG] PREDICTIONS TRAIN BATCH
1: Epoch 3, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([17280, 972])
1:      first 25 pred values: tensor([-0.4159, -0.4311, -0.4629, -0.4957, -0.5128, -0.5266, -0.5334, -0.5382, -0.5484, -0.5669, -0.5908, -0.6008,
1:         -0.5994, -0.6043, -0.6043, -0.6093, -0.6187, -0.6240, -0.4498, -0.4748, -0.5079, -0.5324, -0.5449, -0.5547,
1:         -0.5536], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([17280, 972])
1:      first 25 pred values: tensor([-0.1532, -0.1197, -0.0969, -0.0755, -0.0499, -0.0252,  0.0012,  0.0244,  0.0517,  0.0736,  0.0932,  0.1074,
1:          0.1125,  0.0989,  0.0862,  0.0762,  0.0820,  0.0917, -0.1349, -0.1029, -0.0808, -0.0702, -0.0520, -0.0343,
1:         -0.0043], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([17280, 972])
1:      first 25 pred values: tensor([ 0.5924,  0.5320,  0.4155,  0.2998,  0.1992,  0.1104,  0.0447, -0.0107, -0.0417, -0.0735, -0.0974, -0.1113,
1:         -0.1156, -0.1123, -0.1194, -0.1235, -0.1371, -0.1333,  0.4583,  0.3764,  0.2766,  0.1683,  0.0724,  0.0097,
1:         -0.0457], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([17280, 972])
1:      first 25 pred values: tensor([0.7005, 0.7041, 0.7624, 0.7640, 0.7429, 0.6988, 0.5872, 0.5064, 0.4713, 0.4358, 0.4371, 0.3711, 0.3126, 0.2704,
1:         0.1744, 0.1867, 0.2507, 0.2627, 0.7082, 0.6839, 0.7047, 0.6849, 0.6864, 0.6990, 0.6078], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([7680, 2187])
1:      first 25 pred values: tensor([-1.0379, -1.0662, -1.0708, -1.0581, -1.0381, -1.0240, -1.0202, -1.0163, -1.0248, -1.0334, -1.0448, -1.0430,
1:         -1.0290, -1.0046, -0.9827, -0.9400, -0.8908, -0.8273, -0.7647, -0.7273, -0.7030, -0.6981, -0.6925, -0.6828,
1:         -0.6661], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([13824, 243])
1:      first 25 pred values: tensor([ 0.0896,  0.0880,  0.0838,  0.0495,  0.0343,  0.0203,  0.0054, -0.0036,  0.0007,  0.1054,  0.0865,  0.0568,
1:          0.0419,  0.0420,  0.0228,  0.0208,  0.0219,  0.0200,  0.1007,  0.0822,  0.0642,  0.0516,  0.0318,  0.0473,
1:          0.0491], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([1536, 2187])
1:      first 25 pred values: tensor([-0.0659, -0.1656,  0.0972, -0.2209,  0.1041, -0.1437,  0.0757, -0.1871,  0.0850, -0.0122,  0.0063,  0.1617,
1:          0.1938,  0.0835,  0.0503,  0.0066,  0.1249,  0.0329,  0.1880, -0.0167,  0.0345,  0.2021, -0.0136,  0.1470,
1:          0.3303], device='cuda:0', grad_fn=<SliceBackward0>)
0: [DEBUG] INPUT BATCH
0: Epoch 3, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-1.0770, -1.0383, -1.0204, -1.0189, -1.0216, -1.0138, -1.0037, -1.0019, -1.0059, -1.0077, -1.0054, -1.0244,
0:         -1.0657, -1.0791, -1.0776, -1.0611, -1.0426, -1.0894, -1.0942, -1.0280, -1.0203, -1.0218, -1.0446, -1.0639,
0:         -1.0643], device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.0876, -0.1178, -0.1240, -0.1544, -0.1992, -0.2255, -0.2313, -0.2140, -0.2191, -0.2170, -0.2185, -0.2189,
0:         -0.2135, -0.2035, -0.1741, -0.1602, -0.0925,  0.0114, -0.1272, -0.1820, -0.1968, -0.1962, -0.2225, -0.2455,
0:         -0.2538], device='cuda:0')
0:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([ 0.7948,  0.7873,  0.7978,  0.7426,  0.6907,  0.6125,  0.5411,  0.4687,  0.4332,  0.4084,  0.3576,  0.1449,
0:         -0.0517, -0.1038, -0.0513,  0.0647,  0.0997, -0.0719,  0.8569,  0.8722,  0.7517,  0.6404,  0.4923,  0.4127,
0:          0.3210], device='cuda:0')
0:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-1.3187, -0.7117, -0.5386,  0.4390,  0.1472,  0.1261,  0.0562,  0.1272,  0.2171,  0.0595, -0.1957, -0.0259,
0:          0.4390,  0.2304,  1.0560, -0.0070,  0.5500,  2.5030, -2.9410, -1.4407, -1.4219, -0.4032,  0.1971,  0.1683,
0:          0.4457], device='cuda:0')
0:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([-0.1054,  0.2379,  0.6101,  0.8157,  0.7663,  0.5144,  0.2225,  0.0699, -0.1243, -0.4066, -0.6701, -0.7019,
0:         -0.6169, -0.6698, -0.8297, -0.9852, -0.9023, -1.0036, -1.3646, -1.3156, -1.1060, -1.2563, -1.3731, -1.1440,
0:         -1.0418], device='cuda:0')
0:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([-1.3822e-02,  5.8876e-01, -2.8101e-04, -2.4628e-01, -2.3500e-01, -2.3951e-01, -2.5305e-01, -2.5305e-01,
0:         -2.5305e-01,  1.1710e+00,  2.5816e+00, -1.1565e-02, -2.5079e-01, -2.5192e-01, -2.5192e-01, -2.5305e-01,
0:         -2.5305e-01, -2.5305e-01,  3.6784e+00,  3.7032e+00, -1.7293e-01, -2.4854e-01, -2.4741e-01, -2.5079e-01,
0:         -2.5305e-01], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([ 5.6889e-01,  5.2650e-01,  7.6118e-01,  1.5549e-01, -5.0420e-01, -2.5089e-01,  8.5676e-02,  1.1710e-01,
0:          1.9154e-01,  2.3342e-01,  2.4879e-04,  3.4989e-01,  1.7542e+00,  1.7937e+00,  1.7498e+00,  1.7425e+00,
0:          1.8168e+00,  1.8694e+00,  1.7106e+00,  1.7373e+00,  1.7496e+00,  1.8315e+00,  1.7697e+00,  1.4321e+00,
0:          1.2292e+00], device='cuda:0')
0: [DEBUG] TARGET BATCH
0: Epoch 3, batch 0 - Sparse-masked 'total_precip' shape target data: torch.Size([13824, 243])
0: [DEBUG] First 243 batch values:
0: tensor([-0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531,
0:         -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531,
0:         -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531,
0:         -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531,
0:         -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531,
0:         -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531,
0:         -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531,
0:         -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531,
0:         -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531,
0:         -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531,
0:         -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531,
0:         -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531,
0:         -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531,
0:         -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531,
0:         -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531,
0:         -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531,
0:         -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531,
0:         -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531,
0:         -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531,
0:         -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531, -0.2531,
0:         -0.2531, -0.2531, -0.2531])
0: [DEBUG] PREDICTIONS TRAIN BATCH
0: Epoch 3, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([17280, 972])
0:      first 25 pred values: tensor([-0.9457, -0.9495, -0.9505, -0.9422, -0.9150, -0.8914, -0.8670, -0.8438, -0.8333, -0.8329, -0.8452, -0.8414,
0:         -0.8341, -0.8289, -0.8182, -0.8090, -0.8108, -0.8120, -0.9572, -0.9689, -0.9723, -0.9607, -0.9344, -0.9062,
0:         -0.8728], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([17280, 972])
0:      first 25 pred values: tensor([-0.1994, -0.1858, -0.1992, -0.2234, -0.2528, -0.2829, -0.3138, -0.3359, -0.3489, -0.3492, -0.3382, -0.3220,
0:         -0.3079, -0.3068, -0.2984, -0.2865, -0.2574, -0.2250, -0.2241, -0.2180, -0.2358, -0.2792, -0.3190, -0.3556,
0:         -0.3824], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([17280, 972])
0:      first 25 pred values: tensor([0.1224, 0.1168, 0.0981, 0.1037, 0.1231, 0.1487, 0.2002, 0.2794, 0.4050, 0.5429, 0.6809, 0.7924, 0.8578, 0.8740,
0:         0.8341, 0.7570, 0.6598, 0.5669, 0.1220, 0.0795, 0.0502, 0.0251, 0.0025, 0.0024, 0.0241], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([17280, 972])
0:      first 25 pred values: tensor([ 0.2039,  0.1390,  0.0871,  0.0761,  0.0622,  0.0073, -0.0580, -0.1394, -0.1367, -0.0641, -0.0247,  0.0422,
0:          0.1336,  0.0846,  0.0100,  0.1451,  0.2395,  0.1325,  0.1047,  0.0971,  0.0542,  0.0266,  0.0510,  0.0124,
0:         -0.1067], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([7680, 2187])
0:      first 25 pred values: tensor([-0.2111, -0.2842, -0.3378, -0.3785, -0.4236, -0.4979, -0.6047, -0.7331, -0.8932, -1.0597, -1.2168, -1.3204,
0:         -1.3465, -1.2960, -1.1976, -1.0569, -0.9088, -0.7547, -0.6083, -0.4997, -0.4307, -0.4204, -0.4409, -0.4676,
0:         -0.4730], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([13824, 243])
0:      first 25 pred values: tensor([-0.0381, -0.0384, -0.0231, -0.0480, -0.0495, -0.0438, -0.0428, -0.0345, -0.0253, -0.0075, -0.0179, -0.0321,
0:         -0.0474, -0.0294, -0.0310, -0.0077,  0.0121,  0.0284,  0.0119,  0.0161, -0.0020, -0.0003, -0.0082,  0.0249,
0:          0.0462], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([1536, 2187])
0:      first 25 pred values: tensor([-0.0429, -0.1473,  0.0044, -0.2415, -0.0135, -0.0676,  0.0180, -0.1682,  0.0628, -0.0309,  0.0251,  0.0594,
0:          0.1585, -0.0316,  0.0632, -0.0337,  0.1266,  0.0070,  0.0821, -0.0815,  0.0608,  0.0683, -0.0114,  0.1299,
0:          0.1676], device='cuda:0', grad_fn=<SliceBackward0>)
0: epoch: 3 [1/5 (20%)]	Loss: 0.22142 : 0.39217 :: 0.05136 (1.75 s/sec)
0: epoch: 3 [2/5 (40%)]	Loss: 0.19399 : 0.33451 :: 0.04685 (10.54 s/sec)
0: epoch: 3 [3/5 (60%)]	Loss: 0.20702 : 0.40557 :: 0.04435 (10.54 s/sec)
0: epoch: 3 [4/5 (80%)]	Loss: 0.18693 : 0.30927 :: 0.04503 (10.54 s/sec)
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_idp4qadjd8_epoch3.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_embeds_token_info_idp4qadjd8_epoch3.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_encoder_velocity_u_idp4qadjd8_epoch3.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_encoder_velocity_v_idp4qadjd8_epoch3.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_encoder_specific_humidity_idp4qadjd8_epoch3.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_encoder_velocity_z_idp4qadjd8_epoch3.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_encoder_temperature_idp4qadjd8_epoch3.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_encoder_total_precip_idp4qadjd8_epoch3.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_encoder_t2m_idp4qadjd8_epoch3.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_decoder_velocity_u_idp4qadjd8_epoch3.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_decoder_velocity_v_idp4qadjd8_epoch3.mod
0: Model file: /work/ab1412/atmorep/atmorep/config/../../models/idp4qadjd8/AtmoRep_decoder_specific_humidity_idp4qadjd8_epoch3.mod
0: > /work/ab1412/atmorep/pyenv/lib/python3.10/site-packages/torch/serialization.py(690)__exit__()
0: -> self.file_like.write_end_of_file()
0: (Pdb) 
0: [1;34mwandb[0m:
0: [1;34mwandb[0m: You can sync this run to the cloud by running:
0: [1;34mwandb[0m: [1mwandb sync /work/ab1412/atmorep/wandb/offline-run-20250714_143414-p4qadjd8[0m
0: [1;34mwandb[0m: Find logs at: [1;35mwandb/offline-run-20250714_143414-p4qadjd8/logs[0m
0: l50133:404896:405308 [0] NCCL INFO [Service thread] Connection closed by localRank 0
0: l50133:404896:407295 [0] NCCL INFO comm 0x55555f294060 rank 0 nranks 2 cudaDev 0 busId 3000 - Abort COMPLETE
