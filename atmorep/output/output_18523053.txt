0: Wandb run: atmorep-kd7o891o-18523053
0: l50024:1943580:1943580 [0] NCCL INFO Bootstrap : Using ib0:10.128.11.122<0>
0: l50024:1943580:1943580 [0] NCCL INFO NET/Plugin: No plugin found (libnccl-net.so)
0: l50024:1943580:1943580 [0] NCCL INFO NET/Plugin: Plugin load returned 2 : libnccl-net.so: cannot open shared object file: No such file or directory : when loading libnccl-net.so
0: l50024:1943580:1943580 [0] NCCL INFO NET/Plugin: Using internal network plugin.
0: l50024:1943580:1943580 [0] NCCL INFO cudaDriverVersion 12060
0: NCCL version 2.21.5+cuda12.4
1: l50045:1943447:1943447 [0] NCCL INFO cudaDriverVersion 12060
1: l50045:1943447:1943447 [0] NCCL INFO Bootstrap : Using ib0:10.128.11.136<0>
1: l50045:1943447:1943447 [0] NCCL INFO NET/Plugin: No plugin found (libnccl-net.so)
1: l50045:1943447:1943447 [0] NCCL INFO NET/Plugin: Plugin load returned 2 : libnccl-net.so: cannot open shared object file: No such file or directory : when loading libnccl-net.so
1: l50045:1943447:1943447 [0] NCCL INFO NET/Plugin: Using internal network plugin.
0: l50024:1943580:1943981 [0] NCCL INFO NET/IB : Using [0]mlx5_0:1/IB [1]mlx5_1:1/IB [RO]; OOB ib0:10.128.11.122<0>
0: l50024:1943580:1943981 [0] NCCL INFO Using non-device net plugin version 0
0: l50024:1943580:1943981 [0] NCCL INFO Using network IB
1: l50045:1943447:1943599 [0] NCCL INFO NET/IB : Using [0]mlx5_0:1/IB [1]mlx5_1:1/IB [RO]; OOB ib0:10.128.11.136<0>
1: l50045:1943447:1943599 [0] NCCL INFO Using non-device net plugin version 0
1: l50045:1943447:1943599 [0] NCCL INFO Using network IB
0: l50024:1943580:1943981 [0] NCCL INFO DMA-BUF is available on GPU device 0
1: l50045:1943447:1943599 [0] NCCL INFO DMA-BUF is available on GPU device 0
0: l50024:1943580:1943981 [0] NCCL INFO ncclCommInitRank comm 0x55555f0e6d20 rank 0 nranks 2 cudaDev 0 nvmlDev 0 busId 3000 commId 0x651d5e84b61cfb22 - Init START
1: l50045:1943447:1943599 [0] NCCL INFO ncclCommInitRank comm 0x55555ec9ca00 rank 1 nranks 2 cudaDev 0 nvmlDev 0 busId 3000 commId 0x651d5e84b61cfb22 - Init START
1: l50045:1943447:1943599 [0] NCCL INFO Setting affinity for GPU 0 to ffff0000,00000000,00000000,00000000,ffff0000,00000000
0: l50024:1943580:1943981 [0] NCCL INFO Setting affinity for GPU 0 to ffff0000,00000000,00000000,00000000,ffff0000,00000000
1: l50045:1943447:1943599 [0] NCCL INFO comm 0x55555ec9ca00 rank 1 nRanks 2 nNodes 2 localRanks 1 localRank 0 MNNVL 0
1: l50045:1943447:1943599 [0] NCCL INFO Trees [0] -1/-1/-1->1->0 [1] -1/-1/-1->1->0 [2] 0/-1/-1->1->-1 [3] 0/-1/-1->1->-1
1: l50045:1943447:1943599 [0] NCCL INFO P2P Chunksize set to 131072
0: l50024:1943580:1943981 [0] NCCL INFO comm 0x55555f0e6d20 rank 0 nRanks 2 nNodes 2 localRanks 1 localRank 0 MNNVL 0
0: l50024:1943580:1943981 [0] NCCL INFO Channel 00/04 :    0   1
0: l50024:1943580:1943981 [0] NCCL INFO Channel 01/04 :    0   1
0: l50024:1943580:1943981 [0] NCCL INFO Channel 02/04 :    0   1
0: l50024:1943580:1943981 [0] NCCL INFO Channel 03/04 :    0   1
0: l50024:1943580:1943981 [0] NCCL INFO Trees [0] 1/-1/-1->0->-1 [1] 1/-1/-1->0->-1 [2] -1/-1/-1->0->1 [3] -1/-1/-1->0->1
0: l50024:1943580:1943981 [0] NCCL INFO P2P Chunksize set to 131072
1: l50045:1943447:1943599 [0] NCCL INFO Channel 00/0 : 0[0] -> 1[0] [receive] via NET/IB/0
1: l50045:1943447:1943599 [0] NCCL INFO Channel 01/0 : 0[0] -> 1[0] [receive] via NET/IB/1
1: l50045:1943447:1943599 [0] NCCL INFO Channel 02/0 : 0[0] -> 1[0] [receive] via NET/IB/0
1: l50045:1943447:1943599 [0] NCCL INFO Channel 03/0 : 0[0] -> 1[0] [receive] via NET/IB/1
1: l50045:1943447:1943599 [0] NCCL INFO Channel 00/0 : 1[0] -> 0[0] [send] via NET/IB/0
0: l50024:1943580:1943981 [0] NCCL INFO Channel 00/0 : 1[0] -> 0[0] [receive] via NET/IB/0
1: l50045:1943447:1943599 [0] NCCL INFO Channel 01/0 : 1[0] -> 0[0] [send] via NET/IB/1
1: l50045:1943447:1943599 [0] NCCL INFO Channel 02/0 : 1[0] -> 0[0] [send] via NET/IB/0
0: l50024:1943580:1943981 [0] NCCL INFO Channel 01/0 : 1[0] -> 0[0] [receive] via NET/IB/1
1: l50045:1943447:1943599 [0] NCCL INFO Channel 03/0 : 1[0] -> 0[0] [send] via NET/IB/1
0: l50024:1943580:1943981 [0] NCCL INFO Channel 02/0 : 1[0] -> 0[0] [receive] via NET/IB/0
0: l50024:1943580:1943981 [0] NCCL INFO Channel 03/0 : 1[0] -> 0[0] [receive] via NET/IB/1
0: l50024:1943580:1943981 [0] NCCL INFO Channel 00/0 : 0[0] -> 1[0] [send] via NET/IB/0
0: l50024:1943580:1943981 [0] NCCL INFO Channel 01/0 : 0[0] -> 1[0] [send] via NET/IB/1
0: l50024:1943580:1943981 [0] NCCL INFO Channel 02/0 : 0[0] -> 1[0] [send] via NET/IB/0
0: l50024:1943580:1943981 [0] NCCL INFO Channel 03/0 : 0[0] -> 1[0] [send] via NET/IB/1
0: l50024:1943580:1943984 [0] NCCL INFO NCCL_IB_TIMEOUT set by environment to 250.
0: l50024:1943580:1943984 [0] NCCL INFO NCCL_IB_RETRY_CNT set by environment to 50.
1: l50045:1943447:1943602 [0] NCCL INFO NCCL_IB_TIMEOUT set by environment to 250.
1: l50045:1943447:1943602 [0] NCCL INFO NCCL_IB_RETRY_CNT set by environment to 50.
0: l50024:1943580:1943981 [0] NCCL INFO Connected all rings
1: l50045:1943447:1943599 [0] NCCL INFO Connected all rings
0: l50024:1943580:1943981 [0] NCCL INFO Connected all trees
1: l50045:1943447:1943599 [0] NCCL INFO Connected all trees
1: l50045:1943447:1943599 [0] NCCL INFO threadThresholds 8/8/64 | 16/8/64 | 512 | 512
1: l50045:1943447:1943599 [0] NCCL INFO 4 coll channels, 4 collnet channels, 0 nvls channels, 4 p2p channels, 2 p2p channels per peer
0: l50024:1943580:1943981 [0] NCCL INFO threadThresholds 8/8/64 | 16/8/64 | 512 | 512
0: l50024:1943580:1943981 [0] NCCL INFO 4 coll channels, 4 collnet channels, 0 nvls channels, 4 p2p channels, 2 p2p channels per peer
1: l50045:1943447:1943599 [0] NCCL INFO TUNER/Plugin: Plugin load returned 11 : libnccl-net.so: cannot open shared object file: No such file or directory : when loading libnccl-tuner.so
1: l50045:1943447:1943599 [0] NCCL INFO TUNER/Plugin: Using internal tuner plugin.
1: l50045:1943447:1943599 [0] NCCL INFO ncclCommInitRank comm 0x55555ec9ca00 rank 1 nranks 2 cudaDev 0 nvmlDev 0 busId 3000 commId 0x651d5e84b61cfb22 - Init COMPLETE
0: l50024:1943580:1943981 [0] NCCL INFO TUNER/Plugin: Plugin load returned 11 : libnccl-net.so: cannot open shared object file: No such file or directory : when loading libnccl-tuner.so
0: l50024:1943580:1943981 [0] NCCL INFO TUNER/Plugin: Using internal tuner plugin.
0: l50024:1943580:1943981 [0] NCCL INFO ncclCommInitRank comm 0x55555f0e6d20 rank 0 nranks 2 cudaDev 0 nvmlDev 0 busId 3000 commId 0x651d5e84b61cfb22 - Init COMPLETE
0: with_ddp : True
0: num_accs_per_task : 1
0: par_rank : 0
0: par_size : 2
0: fields : [['velocity_u', [1, 1024, ['velocity_v', 'temperature'], 0, ['j8dwr5qj', -2]], [96, 105, 114, 123, 137], [12, 3, 6], [3, 18, 18], [0.5, 0.9, 0.2, 0.05]], ['velocity_v', [1, 1024, ['velocity_u', 'temperature'], 0, ['0tlnm5up', -2]], [96, 105, 114, 123, 137], [12, 3, 6], [3, 18, 18], [0.5, 0.9, 0.2, 0.05]], ['specific_humidity', [1, 1024, ['velocity_u', 'velocity_v', 'temperature'], 0, ['v63l01zu', -2]], [96, 105, 114, 123, 137], [12, 3, 6], [3, 18, 18], [0.5, 0.9, 0.2, 0.05]], ['velocity_z', [1, 1024, ['velocity_u', 'velocity_v', 'temperature'], 0, ['9l1errbo', -2]], [96, 105, 114, 123, 137], [12, 3, 6], [3, 18, 18], [0.5, 0.9, 0.2, 0.05]], ['temperature', [1, 1024, ['velocity_u', 'velocity_v', 'specific_humidity'], 0, ['7ojls62c', -2]], [96, 105, 114, 123, 137], [12, 2, 4], [3, 27, 27], [0.5, 0.9, 0.2, 0.05], 'Local'], ['total_precip', [1, 1024, ['velocity_u', 'velocity_v', 'velocity_z', 'specific_humidity'], 0], [0], [12, 6, 12], [3, 9, 9], [0.25, 0.9, 0.1, 0.05]], ['t2m', [1, 1024, ['velocity_u', '
0: velocity_v', 'velocity_z', 'specific_humidity'], 0], [0], [12, 2, 4], [3, 27, 27], [0.5, 0.9, 0.2, 0.05], 'Local']]
0: fields_prediction : [['velocity_u', 0.225], ['velocity_v', 0.225], ['specific_humidity', 0.1125], ['velocity_z', 0.01875], ['temperature', 0.15], ['total_precip', 0.01875], ['t2m', 0.25]]
0: fields_targets : []
0: years_train : [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]
0: years_val : [2021]
0: month : None
0: geo_range_sampling : [[0.0, 360.0], [0.0, 360.0]]
0: time_sampling : 1
0: torch_seed : 5521420987310380410
0: batch_size_validation : 1
0: batch_size : 96
0: num_epochs : 128
0: num_samples_per_epoch : 480
0: num_samples_validate : 128
0: num_loader_workers : 5
0: size_token_info : 8
0: size_token_info_net : 16
0: grad_checkpointing : True
0: with_cls : False
0: with_mixed_precision : True
0: with_layernorm : True
0: coupling_num_heads_per_field : 1
0: dropout_rate : 0.05
0: with_qk_lnorm : True
0: encoder_num_layers : 6
0: encoder_num_heads : 16
0: encoder_num_mlp_layers : 2
0: encoder_att_type : dense
0: decoder_num_layers : 6
0: decoder_num_heads : 16
0: decoder_num_mlp_layers : 2
0: decoder_self_att : False
0: decoder_cross_att_ratio : 0.5
0: decoder_cross_att_rate : 1.0
0: decoder_att_type : dense
0: net_tail_num_nets : 16
0: net_tail_num_layers : 0
0: losses : ['mse_ensemble']
0: optimizer_zero : False
0: lr_start : 1e-05
0: lr_max : 2e-05
0: lr_min : 1e-05
0: weight_decay : 0.025
0: lr_decay_rate : 1.025
0: lr_start_epochs : 3
0: model_log_frequency : 256
0: BERT_strategy : BERT
0: forecast_num_tokens : 2
0: BERT_fields_synced : False
0: BERT_mr_max : 2
0: log_test_num_ranks : 0
0: save_grads : False
0: profile : False
0: test_initial : False
0: attention : False
0: rng_seed : None
0: with_wandb : True
0: slurm_job_id : 18523053
0: wandb_id : kd7o891o
0: file_path : /work/ab1412/atmorep/data/era5_y2010_2020_res25_with_t2m.zarr
0: n_size : [36, 13.5, 27.0]
0: model_id : wc5e2i3t
0: years_test : [2021]
1: Available keys in the Zarr dataset: ['data', 'data_sfc', 'lats', 'lons', 'time']
0: Available keys in the Zarr dataset: ['data', 'data_sfc', 'lats', 'lons', 'time']
0: self.ds['data'] : (105192, 7, 5, 721, 1440) :: (105192,)
0: self.lats : (721,)
0: self.lons : (1440,)
1: self.ds['data'] : (105192, 7, 5, 721, 1440) :: (105192,)
1: self.lats : (721,)
1: self.lons : (1440,)
1: Available keys in the Zarr dataset: ['data', 'data_sfc', 'lats', 'lons', 'time']
0: Available keys in the Zarr dataset: ['data', 'data_sfc', 'lats', 'lons', 'time']
1: self.ds['data'] : (105192, 7, 5, 721, 1440) :: (105192,)
1: self.lats : (721,)
1: self.lons : (1440,)
0: self.ds['data'] : (105192, 7, 5, 721, 1440) :: (105192,)
0: self.lats : (721,)
0: self.lons : (1440,)
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
1: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: ['cuda:0', 'cuda:1', 'cuda:2', 'cuda:3'] 0
0: Loaded AtmoRep: ignoring 208 elements: ['embeds_token_info.6.weight', 'embeds_token_info.6.bias', 'embeds.6.weight', 'embeds.6.bias', 'encoders.6.embed.weight', 'encoders.6.embed.bias', 'encoders.6.heads.0.proj_out.weight', 'encoders.6.heads.0.proj_heads.weight', 'encoders.6.heads.0.proj_heads_other.0.weight', 'encoders.6.heads.0.proj_heads_other.1.weight', 'encoders.6.heads.0.proj_heads_other.2.weight', 'encoders.6.heads.0.proj_heads_other.3.weight', 'encoders.6.heads.0.proj_heads_other.4.weight', 'encoders.6.heads.1.proj_out.weight', 'encoders.6.heads.1.proj_heads.weight', 'encoders.6.heads.1.proj_heads_other.0.weight', 'encoders.6.heads.1.proj_heads_other.1.weight', 'encoders.6.heads.1.proj_heads_other.2.weight', 'encoders.6.heads.1.proj_heads_other.3.weight', 'encoders.6.heads.1.proj_heads_other.4.weight', 'encoders.6.heads.2.proj_out.weight', 'encoders.6.heads.2.proj_heads.weight', 'encoders.6.heads.2.proj_heads_other.0.weight', 'encoders.6.heads.2.proj_heads_other.1.weight', 'encoders.6.heads.2.proj_hea
0: ds_other.2.weight', 'encoders.6.heads.2.proj_heads_other.3.weight', 'encoders.6.heads.2.proj_heads_other.4.weight', 'encoders.6.heads.3.proj_out.weight', 'encoders.6.heads.3.proj_heads.weight', 'encoders.6.heads.3.proj_heads_other.0.weight', 'encoders.6.heads.3.proj_heads_other.1.weight', 'encoders.6.heads.3.proj_heads_other.2.weight', 'encoders.6.heads.3.proj_heads_other.3.weight', 'encoders.6.heads.3.proj_heads_other.4.weight', 'encoders.6.heads.4.proj_out.weight', 'encoders.6.heads.4.proj_heads.weight', 'encoders.6.heads.4.proj_heads_other.0.weight', 'encoders.6.heads.4.proj_heads_other.1.weight', 'encoders.6.heads.4.proj_heads_other.2.weight', 'encoders.6.heads.4.proj_heads_other.3.weight', 'encoders.6.heads.4.proj_heads_other.4.weight', 'encoders.6.heads.5.proj_out.weight', 'encoders.6.heads.5.proj_heads.weight', 'encoders.6.heads.5.proj_heads_other.0.weight', 'encoders.6.heads.5.proj_heads_other.1.weight', 'encoders.6.heads.5.proj_heads_other.2.weight', 'encoders.6.heads.5.proj_heads_other.3.weight', 'e
0: ncoders.6.heads.5.proj_heads_other.4.weight', 'encoders.6.mlps.0.blocks.0.weight', 'encoders.6.mlps.0.blocks.0.bias', 'encoders.6.mlps.0.blocks.3.weight', 'encoders.6.mlps.0.blocks.3.bias', 'encoders.6.mlps.1.blocks.0.weight', 'encoders.6.mlps.1.blocks.0.bias', 'encoders.6.mlps.1.blocks.3.weight', 'encoders.6.mlps.1.blocks.3.bias', 'encoders.6.mlps.2.blocks.0.weight', 'encoders.6.mlps.2.blocks.0.bias', 'encoders.6.mlps.2.blocks.3.weight', 'encoders.6.mlps.2.blocks.3.bias', 'encoders.6.mlps.3.blocks.0.weight', 'encoders.6.mlps.3.blocks.0.bias', 'encoders.6.mlps.3.blocks.3.weight', 'encoders.6.mlps.3.blocks.3.bias', 'encoders.6.mlps.4.blocks.0.weight', 'encoders.6.mlps.4.blocks.0.bias', 'encoders.6.mlps.4.blocks.3.weight', 'encoders.6.mlps.4.blocks.3.bias', 'encoders.6.mlps.5.blocks.0.weight', 'encoders.6.mlps.5.blocks.0.bias', 'encoders.6.mlps.5.blocks.3.weight', 'encoders.6.mlps.5.blocks.3.bias', 'decoders.6.blocks.0.proj_heads.weight', 'decoders.6.blocks.0.proj_heads_o_q.weight', 'decoders.6.blocks.0.proj_he
0: ads_o_kv.weight', 'decoders.6.blocks.0.ln_q.weight', 'decoders.6.blocks.0.ln_q.bias', 'decoders.6.blocks.0.ln_k.weight', 'decoders.6.blocks.0.ln_k.bias', 'decoders.6.blocks.0.proj_out.weight', 'decoders.6.blocks.1.blocks.0.weight', 'decoders.6.blocks.1.blocks.0.bias', 'decoders.6.blocks.1.blocks.3.weight', 'decoders.6.blocks.1.blocks.3.bias', 'decoders.6.blocks.2.proj_heads.weight', 'decoders.6.blocks.2.proj_heads_o_q.weight', 'decoders.6.blocks.2.proj_heads_o_kv.weight', 'decoders.6.blocks.2.ln_q.weight', 'decoders.6.blocks.2.ln_q.bias', 'decoders.6.blocks.2.ln_k.weight', 'decoders.6.blocks.2.ln_k.bias', 'decoders.6.blocks.2.proj_out.weight', 'decoders.6.blocks.3.blocks.0.weight', 'decoders.6.blocks.3.blocks.0.bias', 'decoders.6.blocks.3.blocks.3.weight', 'decoders.6.blocks.3.blocks.3.bias', 'decoders.6.blocks.4.proj_heads.weight', 'decoders.6.blocks.4.proj_heads_o_q.weight', 'decoders.6.blocks.4.proj_heads_o_kv.weight', 'decoders.6.blocks.4.ln_q.weight', 'decoders.6.blocks.4.ln_q.bias', 'decoders.6.blocks.4
0: .ln_k.weight', 'decoders.6.blocks.4.ln_k.bias', 'decoders.6.blocks.4.proj_out.weight', 'decoders.6.blocks.5.blocks.0.weight', 'decoders.6.blocks.5.blocks.0.bias', 'decoders.6.blocks.5.blocks.3.weight', 'decoders.6.blocks.5.blocks.3.bias', 'decoders.6.blocks.6.proj_heads.weight', 'decoders.6.blocks.6.proj_heads_o_q.weight', 'decoders.6.blocks.6.proj_heads_o_kv.weight', 'decoders.6.blocks.6.ln_q.weight', 'decoders.6.blocks.6.ln_q.bias', 'decoders.6.blocks.6.ln_k.weight', 'decoders.6.blocks.6.ln_k.bias', 'decoders.6.blocks.6.proj_out.weight', 'decoders.6.blocks.7.blocks.0.weight', 'decoders.6.blocks.7.blocks.0.bias', 'decoders.6.blocks.7.blocks.3.weight', 'decoders.6.blocks.7.blocks.3.bias', 'decoders.6.blocks.8.proj_heads.weight', 'decoders.6.blocks.8.proj_heads_o_q.weight', 'decoders.6.blocks.8.proj_heads_o_kv.weight', 'decoders.6.blocks.8.ln_q.weight', 'decoders.6.blocks.8.ln_q.bias', 'decoders.6.blocks.8.ln_k.weight', 'decoders.6.blocks.8.ln_k.bias', 'decoders.6.blocks.8.proj_out.weight', 'decoders.6.blocks.
0: 9.blocks.0.weight', 'decoders.6.blocks.9.blocks.0.bias', 'decoders.6.blocks.9.blocks.3.weight', 'decoders.6.blocks.9.blocks.3.bias', 'decoders.6.blocks.10.proj_heads.weight', 'decoders.6.blocks.10.proj_heads_o_q.weight', 'decoders.6.blocks.10.proj_heads_o_kv.weight', 'decoders.6.blocks.10.ln_q.weight', 'decoders.6.blocks.10.ln_q.bias', 'decoders.6.blocks.10.ln_k.weight', 'decoders.6.blocks.10.ln_k.bias', 'decoders.6.blocks.10.proj_out.weight', 'decoders.6.blocks.11.blocks.0.weight', 'decoders.6.blocks.11.blocks.0.bias', 'decoders.6.blocks.11.blocks.3.weight', 'decoders.6.blocks.11.blocks.3.bias', 'tails.6.tail_nets.0.0.weight', 'tails.6.tail_nets.0.0.bias', 'tails.6.tail_nets.0.1.weight', 'tails.6.tail_nets.0.1.bias', 'tails.6.tail_nets.1.0.weight', 'tails.6.tail_nets.1.0.bias', 'tails.6.tail_nets.1.1.weight', 'tails.6.tail_nets.1.1.bias', 'tails.6.tail_nets.2.0.weight', 'tails.6.tail_nets.2.0.bias', 'tails.6.tail_nets.2.1.weight', 'tails.6.tail_nets.2.1.bias', 'tails.6.tail_nets.3.0.weight', 'tails.6.tail_ne
0: ts.3.0.bias', 'tails.6.tail_nets.3.1.weight', 'tails.6.tail_nets.3.1.bias', 'tails.6.tail_nets.4.0.weight', 'tails.6.tail_nets.4.0.bias', 'tails.6.tail_nets.4.1.weight', 'tails.6.tail_nets.4.1.bias', 'tails.6.tail_nets.5.0.weight', 'tails.6.tail_nets.5.0.bias', 'tails.6.tail_nets.5.1.weight', 'tails.6.tail_nets.5.1.bias', 'tails.6.tail_nets.6.0.weight', 'tails.6.tail_nets.6.0.bias', 'tails.6.tail_nets.6.1.weight', 'tails.6.tail_nets.6.1.bias', 'tails.6.tail_nets.7.0.weight', 'tails.6.tail_nets.7.0.bias', 'tails.6.tail_nets.7.1.weight', 'tails.6.tail_nets.7.1.bias', 'tails.6.tail_nets.8.0.weight', 'tails.6.tail_nets.8.0.bias', 'tails.6.tail_nets.8.1.weight', 'tails.6.tail_nets.8.1.bias', 'tails.6.tail_nets.9.0.weight', 'tails.6.tail_nets.9.0.bias', 'tails.6.tail_nets.9.1.weight', 'tails.6.tail_nets.9.1.bias', 'tails.6.tail_nets.10.0.weight', 'tails.6.tail_nets.10.0.bias', 'tails.6.tail_nets.10.1.weight', 'tails.6.tail_nets.10.1.bias', 'tails.6.tail_nets.11.0.weight', 'tails.6.tail_nets.11.0.bias', 'tails.6.tai
0: l_nets.11.1.weight', 'tails.6.tail_nets.11.1.bias', 'tails.6.tail_nets.12.0.weight', 'tails.6.tail_nets.12.0.bias', 'tails.6.tail_nets.12.1.weight', 'tails.6.tail_nets.12.1.bias', 'tails.6.tail_nets.13.0.weight', 'tails.6.tail_nets.13.0.bias', 'tails.6.tail_nets.13.1.weight', 'tails.6.tail_nets.13.1.bias', 'tails.6.tail_nets.14.0.weight', 'tails.6.tail_nets.14.0.bias', 'tails.6.tail_nets.14.1.weight', 'tails.6.tail_nets.14.1.bias', 'tails.6.tail_nets.15.0.weight', 'tails.6.tail_nets.15.0.bias', 'tails.6.tail_nets.15.1.weight', 'tails.6.tail_nets.15.1.bias']
1: Loaded AtmoRep: ignoring 208 elements: ['embeds_token_info.6.weight', 'embeds_token_info.6.bias', 'embeds.6.weight', 'embeds.6.bias', 'encoders.6.embed.weight', 'encoders.6.embed.bias', 'encoders.6.heads.0.proj_out.weight', 'encoders.6.heads.0.proj_heads.weight', 'encoders.6.heads.0.proj_heads_other.0.weight', 'encoders.6.heads.0.proj_heads_other.1.weight', 'encoders.6.heads.0.proj_heads_other.2.weight', 'encoders.6.heads.0.proj_heads_other.3.weight', 'encoders.6.heads.0.proj_heads_other.4.weight', 'encoders.6.heads.1.proj_out.weight', 'encoders.6.heads.1.proj_heads.weight', 'encoders.6.heads.1.proj_heads_other.0.weight', 'encoders.6.heads.1.proj_heads_other.1.weight', 'encoders.6.heads.1.proj_heads_other.2.weight', 'encoders.6.heads.1.proj_heads_other.3.weight', 'encoders.6.heads.1.proj_heads_other.4.weight', 'encoders.6.heads.2.proj_out.weight', 'encoders.6.heads.2.proj_heads.weight', 'encoders.6.heads.2.proj_heads_other.0.weight', 'encoders.6.heads.2.proj_heads_other.1.weight', 'encoders.6.heads.2.proj_hea
1: ds_other.2.weight', 'encoders.6.heads.2.proj_heads_other.3.weight', 'encoders.6.heads.2.proj_heads_other.4.weight', 'encoders.6.heads.3.proj_out.weight', 'encoders.6.heads.3.proj_heads.weight', 'encoders.6.heads.3.proj_heads_other.0.weight', 'encoders.6.heads.3.proj_heads_other.1.weight', 'encoders.6.heads.3.proj_heads_other.2.weight', 'encoders.6.heads.3.proj_heads_other.3.weight', 'encoders.6.heads.3.proj_heads_other.4.weight', 'encoders.6.heads.4.proj_out.weight', 'encoders.6.heads.4.proj_heads.weight', 'encoders.6.heads.4.proj_heads_other.0.weight', 'encoders.6.heads.4.proj_heads_other.1.weight', 'encoders.6.heads.4.proj_heads_other.2.weight', 'encoders.6.heads.4.proj_heads_other.3.weight', 'encoders.6.heads.4.proj_heads_other.4.weight', 'encoders.6.heads.5.proj_out.weight', 'encoders.6.heads.5.proj_heads.weight', 'encoders.6.heads.5.proj_heads_other.0.weight', 'encoders.6.heads.5.proj_heads_other.1.weight', 'encoders.6.heads.5.proj_heads_other.2.weight', 'encoders.6.heads.5.proj_heads_other.3.weight', 'e
1: ncoders.6.heads.5.proj_heads_other.4.weight', 'encoders.6.mlps.0.blocks.0.weight', 'encoders.6.mlps.0.blocks.0.bias', 'encoders.6.mlps.0.blocks.3.weight', 'encoders.6.mlps.0.blocks.3.bias', 'encoders.6.mlps.1.blocks.0.weight', 'encoders.6.mlps.1.blocks.0.bias', 'encoders.6.mlps.1.blocks.3.weight', 'encoders.6.mlps.1.blocks.3.bias', 'encoders.6.mlps.2.blocks.0.weight', 'encoders.6.mlps.2.blocks.0.bias', 'encoders.6.mlps.2.blocks.3.weight', 'encoders.6.mlps.2.blocks.3.bias', 'encoders.6.mlps.3.blocks.0.weight', 'encoders.6.mlps.3.blocks.0.bias', 'encoders.6.mlps.3.blocks.3.weight', 'encoders.6.mlps.3.blocks.3.bias', 'encoders.6.mlps.4.blocks.0.weight', 'encoders.6.mlps.4.blocks.0.bias', 'encoders.6.mlps.4.blocks.3.weight', 'encoders.6.mlps.4.blocks.3.bias', 'encoders.6.mlps.5.blocks.0.weight', 'encoders.6.mlps.5.blocks.0.bias', 'encoders.6.mlps.5.blocks.3.weight', 'encoders.6.mlps.5.blocks.3.bias', 'decoders.6.blocks.0.proj_heads.weight', 'decoders.6.blocks.0.proj_heads_o_q.weight', 'decoders.6.blocks.0.proj_he
1: ads_o_kv.weight', 'decoders.6.blocks.0.ln_q.weight', 'decoders.6.blocks.0.ln_q.bias', 'decoders.6.blocks.0.ln_k.weight', 'decoders.6.blocks.0.ln_k.bias', 'decoders.6.blocks.0.proj_out.weight', 'decoders.6.blocks.1.blocks.0.weight', 'decoders.6.blocks.1.blocks.0.bias', 'decoders.6.blocks.1.blocks.3.weight', 'decoders.6.blocks.1.blocks.3.bias', 'decoders.6.blocks.2.proj_heads.weight', 'decoders.6.blocks.2.proj_heads_o_q.weight', 'decoders.6.blocks.2.proj_heads_o_kv.weight', 'decoders.6.blocks.2.ln_q.weight', 'decoders.6.blocks.2.ln_q.bias', 'decoders.6.blocks.2.ln_k.weight', 'decoders.6.blocks.2.ln_k.bias', 'decoders.6.blocks.2.proj_out.weight', 'decoders.6.blocks.3.blocks.0.weight', 'decoders.6.blocks.3.blocks.0.bias', 'decoders.6.blocks.3.blocks.3.weight', 'decoders.6.blocks.3.blocks.3.bias', 'decoders.6.blocks.4.proj_heads.weight', 'decoders.6.blocks.4.proj_heads_o_q.weight', 'decoders.6.blocks.4.proj_heads_o_kv.weight', 'decoders.6.blocks.4.ln_q.weight', 'decoders.6.blocks.4.ln_q.bias', 'decoders.6.blocks.4
1: .ln_k.weight', 'decoders.6.blocks.4.ln_k.bias', 'decoders.6.blocks.4.proj_out.weight', 'decoders.6.blocks.5.blocks.0.weight', 'decoders.6.blocks.5.blocks.0.bias', 'decoders.6.blocks.5.blocks.3.weight', 'decoders.6.blocks.5.blocks.3.bias', 'decoders.6.blocks.6.proj_heads.weight', 'decoders.6.blocks.6.proj_heads_o_q.weight', 'decoders.6.blocks.6.proj_heads_o_kv.weight', 'decoders.6.blocks.6.ln_q.weight', 'decoders.6.blocks.6.ln_q.bias', 'decoders.6.blocks.6.ln_k.weight', 'decoders.6.blocks.6.ln_k.bias', 'decoders.6.blocks.6.proj_out.weight', 'decoders.6.blocks.7.blocks.0.weight', 'decoders.6.blocks.7.blocks.0.bias', 'decoders.6.blocks.7.blocks.3.weight', 'decoders.6.blocks.7.blocks.3.bias', 'decoders.6.blocks.8.proj_heads.weight', 'decoders.6.blocks.8.proj_heads_o_q.weight', 'decoders.6.blocks.8.proj_heads_o_kv.weight', 'decoders.6.blocks.8.ln_q.weight', 'decoders.6.blocks.8.ln_q.bias', 'decoders.6.blocks.8.ln_k.weight', 'decoders.6.blocks.8.ln_k.bias', 'decoders.6.blocks.8.proj_out.weight', 'decoders.6.blocks.
1: 9.blocks.0.weight', 'decoders.6.blocks.9.blocks.0.bias', 'decoders.6.blocks.9.blocks.3.weight', 'decoders.6.blocks.9.blocks.3.bias', 'decoders.6.blocks.10.proj_heads.weight', 'decoders.6.blocks.10.proj_heads_o_q.weight', 'decoders.6.blocks.10.proj_heads_o_kv.weight', 'decoders.6.blocks.10.ln_q.weight', 'decoders.6.blocks.10.ln_q.bias', 'decoders.6.blocks.10.ln_k.weight', 'decoders.6.blocks.10.ln_k.bias', 'decoders.6.blocks.10.proj_out.weight', 'decoders.6.blocks.11.blocks.0.weight', 'decoders.6.blocks.11.blocks.0.bias', 'decoders.6.blocks.11.blocks.3.weight', 'decoders.6.blocks.11.blocks.3.bias', 'tails.6.tail_nets.0.0.weight', 'tails.6.tail_nets.0.0.bias', 'tails.6.tail_nets.0.1.weight', 'tails.6.tail_nets.0.1.bias', 'tails.6.tail_nets.1.0.weight', 'tails.6.tail_nets.1.0.bias', 'tails.6.tail_nets.1.1.weight', 'tails.6.tail_nets.1.1.bias', 'tails.6.tail_nets.2.0.weight', 'tails.6.tail_nets.2.0.bias', 'tails.6.tail_nets.2.1.weight', 'tails.6.tail_nets.2.1.bias', 'tails.6.tail_nets.3.0.weight', 'tails.6.tail_ne
1: ts.3.0.bias', 'tails.6.tail_nets.3.1.weight', 'tails.6.tail_nets.3.1.bias', 'tails.6.tail_nets.4.0.weight', 'tails.6.tail_nets.4.0.bias', 'tails.6.tail_nets.4.1.weight', 'tails.6.tail_nets.4.1.bias', 'tails.6.tail_nets.5.0.weight', 'tails.6.tail_nets.5.0.bias', 'tails.6.tail_nets.5.1.weight', 'tails.6.tail_nets.5.1.bias', 'tails.6.tail_nets.6.0.weight', 'tails.6.tail_nets.6.0.bias', 'tails.6.tail_nets.6.1.weight', 'tails.6.tail_nets.6.1.bias', 'tails.6.tail_nets.7.0.weight', 'tails.6.tail_nets.7.0.bias', 'tails.6.tail_nets.7.1.weight', 'tails.6.tail_nets.7.1.bias', 'tails.6.tail_nets.8.0.weight', 'tails.6.tail_nets.8.0.bias', 'tails.6.tail_nets.8.1.weight', 'tails.6.tail_nets.8.1.bias', 'tails.6.tail_nets.9.0.weight', 'tails.6.tail_nets.9.0.bias', 'tails.6.tail_nets.9.1.weight', 'tails.6.tail_nets.9.1.bias', 'tails.6.tail_nets.10.0.weight', 'tails.6.tail_nets.10.0.bias', 'tails.6.tail_nets.10.1.weight', 'tails.6.tail_nets.10.1.bias', 'tails.6.tail_nets.11.0.weight', 'tails.6.tail_nets.11.0.bias', 'tails.6.tai
1: l_nets.11.1.weight', 'tails.6.tail_nets.11.1.bias', 'tails.6.tail_nets.12.0.weight', 'tails.6.tail_nets.12.0.bias', 'tails.6.tail_nets.12.1.weight', 'tails.6.tail_nets.12.1.bias', 'tails.6.tail_nets.13.0.weight', 'tails.6.tail_nets.13.0.bias', 'tails.6.tail_nets.13.1.weight', 'tails.6.tail_nets.13.1.bias', 'tails.6.tail_nets.14.0.weight', 'tails.6.tail_nets.14.0.bias', 'tails.6.tail_nets.14.1.weight', 'tails.6.tail_nets.14.1.bias', 'tails.6.tail_nets.15.0.weight', 'tails.6.tail_nets.15.0.bias', 'tails.6.tail_nets.15.1.weight', 'tails.6.tail_nets.15.1.bias']
1: Loaded model id = wc5e2i3t.
1: Loaded run 'wc5e2i3t' at epoch -2.
0: Loaded model id = wc5e2i3t.
0: Loaded run 'wc5e2i3t' at epoch -2.
1: -1 : 22:34:55 :: batch_size = 96, lr = 1e-05
0: Number of trainable parameters: 886,234,640
0: -1 : 22:34:55 :: batch_size = 96, lr = 1e-05
0: [DEBUG] INPUT BATCH
0: Epoch -1, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([0.5871, 0.6416, 0.6996, 0.7534, 0.8160, 0.8876, 0.9637, 1.0353, 1.0709, 1.0517, 0.9898, 0.9004, 0.7972, 0.7028,
0:         0.6350, 0.5955, 0.5726, 0.5535, 0.7023, 0.7458, 0.7783, 0.8041, 0.8513, 0.9166, 0.9869], device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.5991, -0.6265, -0.6276, -0.5906, -0.5137, -0.4224, -0.3393, -0.2539, -0.1496, -0.0304,  0.0896,  0.1992,
0:          0.2993,  0.3961,  0.4817,  0.5501,  0.6109,  0.6553, -0.4923, -0.5381, -0.5798, -0.5849, -0.5441, -0.4829,
0:         -0.4275], device='cuda:0')
0:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.5348, -0.5321, -0.5400, -0.5552, -0.5662, -0.5678, -0.5656, -0.5575, -0.4860, -0.3733, -0.2408, -0.0980,
0:         -0.0175,  0.0114,  0.0042, -0.0216, -0.0433, -0.0670, -0.5658, -0.5591, -0.5485, -0.5482, -0.5580, -0.5651,
0:         -0.5666], device='cuda:0')
0:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-1.5838, -1.9698, -1.6969, -1.2144, -1.0036, -1.0059, -1.1922, -1.5549, -1.7191, -1.6858, -1.8467, -2.0109,
0:         -1.8999, -1.7502, -1.6648, -1.5871, -1.5028, -1.2865, -0.9715, -0.7108, -0.8694, -1.3098, -1.5427, -1.5305,
0:         -1.3752], device='cuda:0')
0:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([-0.2365, -0.2395, -0.2430, -0.2718, -0.3107, -0.3435, -0.3881, -0.4397, -0.4723, -0.4790, -0.4597, -0.4175,
0:         -0.3686, -0.3266, -0.2960, -0.2766, -0.2576, -0.2347, -0.2191, -0.2182, -0.2256, -0.2347, -0.2509, -0.2706,
0:         -0.2823], device='cuda:0')
0:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([-0.2417, -0.2417, -0.2417, -0.2417, -0.2417, -0.2417, -0.2417, -0.2417, -0.2417, -0.2417, -0.2417, -0.2417,
0:         -0.2417, -0.2417, -0.2417, -0.2417, -0.2417, -0.2417, -0.2417, -0.2417, -0.2417, -0.2417, -0.2417, -0.2417,
0:         -0.2417], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([ 1.2152,  0.2884, -0.4583, -1.1169, -1.2303, -1.2980, -1.3578, -1.4093, -1.3814, -1.2074, -0.9489, -0.5943,
0:         -0.5232, -0.4984, -0.4707, -0.4274, -0.3391, -0.2386, -0.1766, -0.1809, -0.2049, -0.2349, -0.2572, -0.2456,
0:         -0.1995], device='cuda:0')
0: [DEBUG] TARGET BATCH
0: Epoch -1, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2224, 2187])
0:     First 25 batch values:
0: tensor([-1.3457, -1.3996, -1.4888, -2.0249, -2.1858, -2.2373, -2.2628, -2.3074, -2.2676, -2.1827, -2.0912, -2.0081,
0:         -1.8216, -1.5392, -1.2222, -1.0513, -1.1266, -1.2002, -1.2972, -1.4735, -1.4615, -1.4645, -1.3995, -1.2155,
0:         -1.1845])
0: [DEBUG] PREDICTIONS TRAIN BATCH
0: Epoch -1, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([25635, 972])
0:      first 25 pred values: tensor([0.9485, 0.8653, 0.7849, 0.7181, 0.6727, 0.6438, 0.6221, 0.6014, 0.5767, 0.5503, 0.5253, 0.5034, 0.4850, 0.4745,
0:         0.4650, 0.4618, 0.4627, 0.4603, 0.9620, 0.8726, 0.7848, 0.7159, 0.6710, 0.6455, 0.6264], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([26239, 972])
0:      first 25 pred values: tensor([ 0.4766,  0.4759,  0.4628,  0.4332,  0.3859,  0.3228,  0.2524,  0.1839,  0.1199,  0.0606,  0.0102, -0.0268,
0:         -0.0399, -0.0218,  0.0201,  0.0620,  0.0785,  0.0637,  0.3572,  0.3774,  0.3946,  0.4012,  0.3925,  0.3707,
0:          0.3398], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([26715, 972])
0:      first 25 pred values: tensor([-0.5856, -0.6059, -0.6270, -0.6441, -0.6553, -0.6608, -0.6640, -0.6664, -0.6683, -0.6702, -0.6732, -0.6721,
0:         -0.6704, -0.6662, -0.6648, -0.6626, -0.6632, -0.6640, -0.5764, -0.6000, -0.6256, -0.6472, -0.6620, -0.6697,
0:         -0.6738], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([26183, 972])
0:      first 25 pred values: tensor([ 0.6923,  1.1684,  1.3432,  1.1392,  0.8687,  0.9250,  0.9631,  0.7842,  0.8184,  1.1314,  1.2445,  0.9237,
0:          0.3536, -0.1520, -0.0782, -0.0261, -0.5390, -0.6381,  0.7713,  1.0428,  1.2695,  1.2937,  1.1038,  1.1902,
0:          1.1981], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([11887, 2187])
0:      first 25 pred values: tensor([-0.6335, -0.6472, -0.6589, -0.6710, -0.6891, -0.7104, -0.7283, -0.7395, -0.7412, -0.7338, -0.7202, -0.7003,
0:         -0.6782, -0.6547, -0.6305, -0.6072, -0.5877, -0.5727, -0.5595, -0.5469, -0.5307, -0.5114, -0.4925, -0.4821,
0:         -0.4811], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([8995, 243])
0:      first 25 pred values: tensor([-0.2450, -0.2422, -0.2418, -0.2399, -0.2396, -0.2396, -0.2390, -0.2383, -0.2400, -0.2437, -0.2431, -0.2424,
0:         -0.2427, -0.2395, -0.2394, -0.2385, -0.2383, -0.2390, -0.2427, -0.2439, -0.2422, -0.2413, -0.2396, -0.2382,
0:         -0.2373], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([2224, 2187])
0:      first 25 pred values: tensor([ 0.1480, -0.0178,  0.0875,  0.0884,  0.0810,  0.0490,  0.1900, -0.0486,  0.0020,  0.0607, -0.1075,  0.3293,
0:          0.2768,  0.0377, -0.0272,  0.1105,  0.0289, -0.0338,  0.0606, -0.0150,  0.4172,  0.0263, -0.2223, -0.1067,
0:          0.2946], device='cuda:0', grad_fn=<SliceBackward0>)
1: [DEBUG] INPUT BATCH
1: Epoch -1, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([0.5871, 0.6416, 0.6996, 0.7534, 0.8160, 0.8876, 0.9637, 1.0353, 1.0709, 1.0517, 0.9898, 0.9004, 0.7972, 0.7028,
1:         0.6350, 0.5955, 0.5726, 0.5535, 0.7023, 0.7458, 0.7783, 0.8041, 0.8513, 0.9166, 0.9869], device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.5991, -0.6265, -0.6276, -0.5906, -0.5137, -0.4224, -0.3393, -0.2539, -0.1496, -0.0304,  0.0896,  0.1992,
1:          0.2993,  0.3961,  0.4817,  0.5501,  0.6109,  0.6553, -0.4923, -0.5381, -0.5798, -0.5849, -0.5441, -0.4829,
1:         -0.4275], device='cuda:0')
1:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.5348, -0.5321, -0.5400, -0.5552, -0.5662, -0.5678, -0.5656, -0.5575, -0.4860, -0.3733, -0.2408, -0.0980,
1:         -0.0175,  0.0114,  0.0042, -0.0216, -0.0433, -0.0670, -0.5658, -0.5591, -0.5485, -0.5482, -0.5580, -0.5651,
1:         -0.5666], device='cuda:0')
1:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-1.5838, -1.9698, -1.6969, -1.2144, -1.0036, -1.0059, -1.1922, -1.5549, -1.7191, -1.6858, -1.8467, -2.0109,
1:         -1.8999, -1.7502, -1.6648, -1.5871, -1.5028, -1.2865, -0.9715, -0.7108, -0.8694, -1.3098, -1.5427, -1.5305,
1:         -1.3752], device='cuda:0')
1:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([-0.2365, -0.2395, -0.2430, -0.2718, -0.3107, -0.3435, -0.3881, -0.4397, -0.4723, -0.4790, -0.4597, -0.4175,
1:         -0.3686, -0.3266, -0.2960, -0.2766, -0.2576, -0.2347, -0.2191, -0.2182, -0.2256, -0.2347, -0.2509, -0.2706,
1:         -0.2823], device='cuda:0')
1:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
1:      first 25 values: tensor([-0.2417, -0.2417, -0.2417, -0.2417, -0.2417, -0.2417, -0.2417, -0.2417, -0.2417, -0.2417, -0.2417, -0.2417,
1:         -0.2417, -0.2417, -0.2417, -0.2417, -0.2417, -0.2417, -0.2417, -0.2417, -0.2417, -0.2417, -0.2417, -0.2417,
1:         -0.2417], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([ 1.2152,  0.2884, -0.4583, -1.1169, -1.2303, -1.2980, -1.3578, -1.4093, -1.3814, -1.2074, -0.9489, -0.5943,
1:         -0.5232, -0.4984, -0.4707, -0.4274, -0.3391, -0.2386, -0.1766, -0.1809, -0.2049, -0.2349, -0.2572, -0.2456,
1:         -0.1995], device='cuda:0')
1: [DEBUG] TARGET BATCH
1: Epoch -1, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2550, 2187])
1:     First 25 batch values:
1: tensor([ 0.3604,  0.3590,  0.3466,  0.4344,  0.3469,  0.0696, -0.2743, -0.2015, -0.2012, -0.3295, -0.5853, -0.7364,
1:         -1.0658, -1.0823, -0.5853,  0.2458,  0.3712, -0.1281, -0.7098, -0.9105, -0.7566, -0.8457, -0.6008, -0.1390,
1:          0.1485])
1: [DEBUG] PREDICTIONS TRAIN BATCH
1: Epoch -1, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([27246, 972])
1:      first 25 pred values: tensor([0.1633, 0.1602, 0.1578, 0.1560, 0.1560, 0.1565, 0.1564, 0.1583, 0.1629, 0.1734, 0.1854, 0.1953, 0.2013, 0.2026,
1:         0.2072, 0.2156, 0.2314, 0.2517, 0.1975, 0.1992, 0.2015, 0.2079, 0.2138, 0.2182, 0.2206], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([25903, 972])
1:      first 25 pred values: tensor([-1.4920, -1.5276, -1.5021, -1.4105, -1.2457, -1.0265, -0.7867, -0.5617, -0.3880, -0.2871, -0.2589, -0.2885,
1:         -0.3521, -0.4213, -0.4747, -0.4901, -0.4632, -0.3890, -1.4817, -1.5278, -1.5117, -1.4306, -1.2777, -1.0713,
1:         -0.8371], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([26326, 972])
1:      first 25 pred values: tensor([-0.5948, -0.5962, -0.5962, -0.5972, -0.6017, -0.6092, -0.6198, -0.6306, -0.6357, -0.6386, -0.6372, -0.6320,
1:         -0.6249, -0.6174, -0.6084, -0.5986, -0.5861, -0.5741, -0.5874, -0.5911, -0.5939, -0.5960, -0.6010, -0.6097,
1:         -0.6202], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([25525, 972])
1:      first 25 pred values: tensor([-1.3783, -1.8622, -2.4687, -2.6323, -2.2921, -1.7845, -1.5372, -1.4614, -1.1222, -1.0237, -1.2037, -0.9706,
1:         -0.5798, -0.2268, -0.0341, -0.1046, -0.0057,  0.1757, -1.6395, -1.8481, -2.1917, -2.3464, -2.2189, -1.9562,
1:         -1.8167], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([11309, 2187])
1:      first 25 pred values: tensor([-0.6823, -0.6508, -0.6221, -0.6006, -0.5879, -0.5812, -0.5798, -0.5778, -0.5742, -0.5654, -0.5510, -0.5327,
1:         -0.5148, -0.5026, -0.4985, -0.5062, -0.5246, -0.5455, -0.5597, -0.5596, -0.5404, -0.5045, -0.4569, -0.4032,
1:         -0.3460], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([9084, 243])
1:      first 25 pred values: tensor([-0.2010, -0.2002, -0.2034, -0.2038, -0.2060, -0.2059, -0.2089, -0.2114, -0.2107, -0.2120, -0.2126, -0.2144,
1:         -0.2146, -0.2171, -0.2202, -0.2231, -0.2199, -0.2203, -0.2219, -0.2221, -0.2258, -0.2264, -0.2265, -0.2281,
1:         -0.2291], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([2550, 2187])
1:      first 25 pred values: tensor([ 0.1833, -0.0018,  0.0779,  0.0765,  0.1382,  0.0878,  0.1593,  0.0540,  0.0225,  0.0726, -0.1627,  0.4454,
1:          0.3502, -0.1734, -0.0108,  0.0953, -0.0649,  0.0383,  0.0341,  0.0578,  0.2641,  0.0361, -0.1829, -0.0568,
1:          0.0967], device='cuda:0', grad_fn=<SliceBackward0>)
0: epoch: -1 [1/5 (20%)]	Loss: 0.38210 : 0.23318 :: 0.05123 (1.69 s/sec)
0: epoch: -1 [2/5 (40%)]	Loss: 0.35782 : 0.21177 :: 0.04063 (10.14 s/sec)
0: epoch: -1 [3/5 (60%)]	Loss: 0.32213 : 0.18649 :: 0.03813 (10.17 s/sec)
0: epoch: -1 [4/5 (80%)]	Loss: 0.33044 : 0.20264 :: 0.03870 (10.18 s/sec)
0: validation loss for strategy=BERT at epoch -1 : 0.19329479336738586
0: validation loss for velocity_u : 0.004159973002970219
0: validation loss for velocity_v : 0.00551796518266201
0: validation loss for specific_humidity : 0.00650058314204216
0: validation loss for velocity_z : 0.1062338799238205
0: validation loss for temperature : 0.017804082483053207
0: validation loss for total_precip : 0.23246604204177856
0: validation loss for t2m : 0.9803812503814697
1: 0 : 22:41:16 :: batch_size = 96, lr = 1e-05
0: 0 : 22:41:23 :: batch_size = 96, lr = 1e-05
1: [DEBUG] INPUT BATCH
1: Epoch 0, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.0063, -0.0030, -0.0020, -0.0049, -0.0133, -0.0285, -0.0507, -0.0796, -0.1142, -0.1529, -0.1943, -0.2363,
1:         -0.2777, -0.3164, -0.3505, -0.3789, -0.4021, -0.4230, -0.0394, -0.0374, -0.0394, -0.0465, -0.0593, -0.0786,
1:         -0.1040], device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([ 0.0489,  0.0729,  0.1028,  0.1359,  0.1689,  0.1980,  0.2194,  0.2288,  0.2209,  0.1888,  0.1268,  0.0319,
1:         -0.0917, -0.2321, -0.3704, -0.4853, -0.5592, -0.5826,  0.0355,  0.0650,  0.0962,  0.1257,  0.1508,  0.1689,
1:          0.1771], device='cuda:0')
1:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.5667, -0.5921, -0.6201, -0.6481, -0.6711, -0.6923, -0.7136, -0.7235, -0.7335, -0.7394, -0.7383, -0.7373,
1:         -0.7270, -0.7121, -0.6969, -0.6693, -0.6416, -0.6097, -0.6055, -0.6316, -0.6558, -0.6801, -0.6975, -0.7115,
1:         -0.7272], device='cuda:0')
1:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([0.2727, 0.2662, 0.2943, 0.3525, 0.4215, 0.4819, 0.5272, 0.5618, 0.5898, 0.6135, 0.6330, 0.6416, 0.6416, 0.6373,
1:         0.6416, 0.6502, 0.6524, 0.6330, 0.2188, 0.2490, 0.3158, 0.4021, 0.4819, 0.5359, 0.5618], device='cuda:0')
1:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([0.5931, 0.6191, 0.6478, 0.6780, 0.7090, 0.7394, 0.7674, 0.7922, 0.8117, 0.8247, 0.8296, 0.8262, 0.8165, 0.8041,
1:         0.7941, 0.7917, 0.7998, 0.8196, 0.8487, 0.8841, 0.9222, 0.9606, 0.9979, 1.0339, 1.0695], device='cuda:0')
1:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
1:      first 25 values: tensor([-0.2092, -0.2137, -0.2181, -0.2203, -0.2203, -0.2181, -0.2159, -0.2114, -0.2092, -0.2003, -0.2048, -0.2114,
1:         -0.2181, -0.2181, -0.2159, -0.2137, -0.2114, -0.2070, -0.1959, -0.2003, -0.2070, -0.2137, -0.2203, -0.2181,
1:         -0.2159], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([0.8853, 0.8497, 0.8361, 0.8235, 0.7873, 0.7407, 0.6919, 0.6306, 0.5672, 0.5104, 0.4717, 0.4273, 0.3955, 0.3639,
1:         0.3337, 0.3363, 0.3373, 0.3560, 0.3997, 0.4461, 0.4732, 0.4927, 0.5095, 0.5370, 0.5627], device='cuda:0')
1: [DEBUG] TARGET BATCH
1: Epoch 0, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2550, 2187])
1:     First 25 batch values:
1: tensor([-0.1861, -0.1948, -0.2031, -0.2180, -0.2304, -0.2437, -0.2572, -0.2712, -0.2847, -0.2980, -0.3152, -0.3461,
1:         -0.3764, -0.4078, -0.4292, -0.4506, -0.4717, -0.4925, -0.5065, -0.5216, -0.5365, -0.5499, -0.5446, -0.5387,
1:         -0.5325])
1: [DEBUG] PREDICTIONS TRAIN BATCH
1: Epoch 0, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([27246, 972])
1:      first 25 pred values: tensor([-0.3356, -0.3487, -0.3646, -0.3815, -0.3958, -0.4099, -0.4182, -0.4209, -0.4250, -0.4305, -0.4385, -0.4494,
1:         -0.4581, -0.4746, -0.4859, -0.5021, -0.5224, -0.5403, -0.3038, -0.3151, -0.3293, -0.3384, -0.3485, -0.3609,
1:         -0.3664], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([25903, 972])
1:      first 25 pred values: tensor([-0.7306, -0.7266, -0.7264, -0.7261, -0.7240, -0.7238, -0.7245, -0.7239, -0.7223, -0.7180, -0.7133, -0.7008,
1:         -0.6888, -0.6746, -0.6598, -0.6484, -0.6410, -0.6362, -0.6401, -0.6378, -0.6349, -0.6410, -0.6413, -0.6432,
1:         -0.6449], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([26326, 972])
1:      first 25 pred values: tensor([-0.6067, -0.6001, -0.6058, -0.6093, -0.6097, -0.6133, -0.6165, -0.6174, -0.6163, -0.6149, -0.6156, -0.6139,
1:         -0.6132, -0.6135, -0.6141, -0.6156, -0.6121, -0.6075, -0.6180, -0.6216, -0.6220, -0.6255, -0.6276, -0.6270,
1:         -0.6309], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([25525, 972])
1:      first 25 pred values: tensor([-0.4964, -0.4795, -0.4570, -0.4530, -0.3977, -0.3790, -0.3690, -0.3436, -0.3507, -0.3978, -0.4398, -0.4646,
1:         -0.4519, -0.4485, -0.4544, -0.4488, -0.5300, -0.6217, -0.8898, -0.8915, -0.9046, -0.9118, -0.8528, -0.8271,
1:         -0.8229], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([11309, 2187])
1:      first 25 pred values: tensor([1.0145, 1.0107, 1.0079, 1.0063, 1.0105, 1.0147, 1.0166, 1.0180, 1.0116, 1.0035, 0.9936, 0.9862, 0.9799, 0.9715,
1:         0.9540, 0.9339, 0.9099, 0.8874, 0.8659, 0.8427, 0.8193, 0.7919, 0.7673, 0.7433, 0.7233], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([9084, 243])
1:      first 25 pred values: tensor([-0.1950, -0.2001, -0.1903, -0.1644, -0.1575, -0.1330, -0.0804, -0.0259,  0.0054, -0.0992, -0.0935, -0.0658,
1:         -0.0337, -0.0206,  0.0325,  0.0909,  0.1356,  0.1826,  0.0841,  0.1285,  0.1678,  0.1999,  0.2450,  0.2908,
1:          0.3292], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([2550, 2187])
1:      first 25 pred values: tensor([ 0.1110,  0.1180,  0.0741,  0.0620,  0.0677,  0.0625,  0.1114,  0.0061, -0.0453,  0.0471, -0.0748,  0.2788,
1:          0.1886, -0.2065, -0.0792,  0.0398,  0.0161, -0.0619,  0.0870,  0.0316,  0.1516, -0.0168, -0.1299,  0.0334,
1:          0.1600], device='cuda:0', grad_fn=<SliceBackward0>)
0: [DEBUG] INPUT BATCH
0: Epoch 0, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.5863, -0.5850, -0.5850, -0.5861, -0.5885, -0.5924, -0.5975, -0.6040, -0.6116, -0.6202, -0.6297, -0.6396,
0:         -0.6500, -0.6607, -0.6717, -0.6826, -0.6932, -0.7030, -0.5321, -0.5334, -0.5362, -0.5401, -0.5455, -0.5520,
0:         -0.5598], device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.2911, -0.2977, -0.3048, -0.3120, -0.3197, -0.3275, -0.3354, -0.3430, -0.3505, -0.3575, -0.3643, -0.3712,
0:         -0.3782, -0.3859, -0.3941, -0.4032, -0.4132, -0.4241, -0.2796, -0.2905, -0.3018, -0.3134, -0.3253, -0.3374,
0:         -0.3493], device='cuda:0')
0:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.4354, -0.4366, -0.4374, -0.4378, -0.4384, -0.4385, -0.4394, -0.4399, -0.4406, -0.4412, -0.4429, -0.4445,
0:         -0.4463, -0.4489, -0.4550, -0.4625, -0.4702, -0.4761, -0.4429, -0.4425, -0.4422, -0.4422, -0.4427, -0.4431,
0:         -0.4434], device='cuda:0')
0:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.1033, -0.0922, -0.0765, -0.0564, -0.0319, -0.0073,  0.0150,  0.0328,  0.0395,  0.0395,  0.0328,  0.0217,
0:          0.0105, -0.0006, -0.0096, -0.0207, -0.0274, -0.0319, -0.2372, -0.2238, -0.2060, -0.1881, -0.1658, -0.1435,
0:         -0.1212], device='cuda:0')
0:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([-0.1971, -0.2054, -0.2128, -0.2185, -0.2235, -0.2272, -0.2304, -0.2333, -0.2358, -0.2382, -0.2406, -0.2425,
0:         -0.2446, -0.2466, -0.2485, -0.2506, -0.2529, -0.2550, -0.2575, -0.2596, -0.2610, -0.2627, -0.2637, -0.2647,
0:         -0.2657], device='cuda:0')
0:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([-0.1690, -0.1643, -0.1619, -0.1619, -0.1619, -0.1619, -0.1596, -0.1525, -0.1454, -0.1690, -0.1643, -0.1619,
0:         -0.1596, -0.1549, -0.1430, -0.1312, -0.1242, -0.1147, -0.1383, -0.1430, -0.1430, -0.1383, -0.1289, -0.1171,
0:         -0.1053], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([ 0.1517,  0.1289,  0.0628, -0.0435, -0.1633, -0.2482, -0.3320, -0.3498, -0.3673, -0.3845, -0.3905, -0.3980,
0:         -0.4042, -0.3960, -0.3502, -0.3027, -0.2499, -0.2055, -0.1983, -0.1935, -0.1829, -0.1938, -0.2640, -0.3365,
0:         -0.4108], device='cuda:0')
0: [DEBUG] TARGET BATCH
0: Epoch 0, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2224, 2187])
0:     First 25 batch values:
0: tensor([0.1936, 0.1620, 0.1278, 0.0868, 0.0374, 0.0133, 0.0108, 0.0257, 0.0412, 0.0570, 0.0639, 0.0712, 0.0787, 0.0431,
0:         0.0562, 0.0819, 0.1111, 0.1337, 0.1331, 0.1348, 0.1289, 0.1059, 0.1032, 0.1030, 0.1027])
0: [DEBUG] PREDICTIONS TRAIN BATCH
0: Epoch 0, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([25635, 972])
0:      first 25 pred values: tensor([-1.1311, -1.1374, -1.1404, -1.1463, -1.1475, -1.1481, -1.1420, -1.1330, -1.1273, -1.1222, -1.1206, -1.1193,
0:         -1.1140, -1.1132, -1.1086, -1.1083, -1.1072, -1.1065, -1.1569, -1.1640, -1.1741, -1.1809, -1.1860, -1.1892,
0:         -1.1864], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([26239, 972])
0:      first 25 pred values: tensor([-1.1159, -1.1174, -1.1127, -1.0952, -1.0673, -1.0399, -1.0101, -0.9788, -0.9460, -0.9093, -0.8727, -0.8290,
0:         -0.7849, -0.7420, -0.6948, -0.6575, -0.6275, -0.6097, -1.0946, -1.0931, -1.0818, -1.0712, -1.0502, -1.0283,
0:         -1.0041], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([26715, 972])
0:      first 25 pred values: tensor([-0.5319, -0.5218, -0.5269, -0.5307, -0.5326, -0.5360, -0.5383, -0.5355, -0.5324, -0.5312, -0.5362, -0.5392,
0:         -0.5460, -0.5506, -0.5581, -0.5643, -0.5671, -0.5690, -0.5155, -0.5127, -0.5102, -0.5152, -0.5183, -0.5192,
0:         -0.5246], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([26183, 972])
0:      first 25 pred values: tensor([-0.3940, -0.3890, -0.3976, -0.3753, -0.3417, -0.3273, -0.2975, -0.2693, -0.2306, -0.1959, -0.1500, -0.1091,
0:         -0.0735, -0.0636, -0.0586, -0.0229, -0.0329, -0.0672, -0.3596, -0.3262, -0.3108, -0.2855, -0.2586, -0.2322,
0:         -0.2013], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([11887, 2187])
0:      first 25 pred values: tensor([-1.0698, -1.0601, -1.0477, -1.0338, -1.0177, -1.0039, -0.9882, -0.9681, -0.9504, -0.9338, -0.9183, -0.9020,
0:         -0.8825, -0.8561, -0.8307, -0.8032, -0.7807, -0.7597, -0.7371, -0.7118, -0.6799, -0.6492, -0.6169, -0.5930,
0:         -0.5725], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([8995, 243])
0:      first 25 pred values: tensor([-0.2402, -0.2436, -0.2434, -0.2409, -0.2422, -0.2430, -0.2398, -0.2401, -0.2338, -0.2441, -0.2425, -0.2459,
0:         -0.2431, -0.2443, -0.2410, -0.2376, -0.2370, -0.2347, -0.2433, -0.2447, -0.2412, -0.2414, -0.2406, -0.2388,
0:         -0.2395], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([2224, 2187])
0:      first 25 pred values: tensor([ 0.1171,  0.1075,  0.0071,  0.1154,  0.0577,  0.0565,  0.1067, -0.1418, -0.0076,  0.0475, -0.0748,  0.1483,
0:          0.0930,  0.0259, -0.0685,  0.1167,  0.0459, -0.0801,  0.1569,  0.0177,  0.2806, -0.0432, -0.1163, -0.0475,
0:          0.2194], device='cuda:0', grad_fn=<SliceBackward0>)
0: epoch: 0 [1/5 (20%)]	Loss: 0.30749 : 0.20134 :: 0.03660 (1.87 s/sec)
0: epoch: 0 [2/5 (40%)]	Loss: 0.36145 : 0.24785 :: 0.03648 (10.19 s/sec)
0: epoch: 0 [3/5 (60%)]	Loss: 0.32706 : 0.19438 :: 0.03491 (10.20 s/sec)
0: epoch: 0 [4/5 (80%)]	Loss: 0.35077 : 0.21642 :: 0.03717 (10.19 s/sec)
0: validation loss for strategy=BERT at epoch 0 : 0.1974649429321289
0: validation loss for velocity_u : 0.0039046602323651314
0: validation loss for velocity_v : 0.005222064442932606
0: validation loss for specific_humidity : 0.00698146503418684
0: validation loss for velocity_z : 0.10475265234708786
0: validation loss for temperature : 0.019810639321804047
0: validation loss for total_precip : 0.2199295461177826
0: validation loss for t2m : 1.021653413772583
1: 1 : 22:47:12 :: batch_size = 96, lr = 1.5000000000000002e-05
0: 1 : 22:47:12 :: batch_size = 96, lr = 1.5000000000000002e-05
1: [DEBUG] INPUT BATCH
1: Epoch 1, first input batch shapes / sample data:
1:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.5790, -0.5947, -0.6222, -0.6517, -0.6730, -0.6788, -0.6679, -0.6445, -0.6147, -0.5837, -0.5531, -0.5215,
1:         -0.4869, -0.4495, -0.4111, -0.3736, -0.3375, -0.2998, -0.5069, -0.5073, -0.5268, -0.5586, -0.5903, -0.6098,
1:         -0.6096], device='cuda:0')
1:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([2.7986, 2.7644, 2.7203, 2.6690, 2.6193, 2.5788, 2.5481, 2.5192, 2.4803, 2.4249, 2.3586, 2.2957, 2.2507, 2.2296,
1:         2.2267, 2.2310, 2.2330, 2.2300, 2.8526, 2.8275, 2.7868, 2.7266, 2.6529, 2.5798, 2.5214], device='cuda:0')
1:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.3369, -0.3162, -0.3062, -0.2953, -0.2684, -0.2673, -0.2699, -0.2752, -0.2819, -0.2973, -0.3049, -0.3124,
1:         -0.3176, -0.3115, -0.3102, -0.3010, -0.2895, -0.2794, -0.2921, -0.2671, -0.2287, -0.1885, -0.1612, -0.1601,
1:         -0.1481], device='cuda:0')
1:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
1:      first 25 values: tensor([-0.8811, -1.1256, -1.2835, -1.2446, -0.9698, -0.5479, -0.1520,  0.0341, -0.0589, -0.3445, -0.6301, -0.7513,
1:         -0.6799, -0.5327, -0.4527, -0.4851, -0.5414, -0.4830, -0.1584, -0.4613, -0.8335, -1.0931, -1.1061, -0.8638,
1:         -0.4873], device='cuda:0')
1:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([1.3189, 1.3205, 1.3263, 1.3375, 1.3524, 1.3663, 1.3757, 1.3802, 1.3831, 1.3892, 1.3998, 1.4118, 1.4180, 1.4140,
1:         1.3998, 1.3814, 1.3671, 1.3626, 1.3675, 1.3766, 1.3846, 1.3884, 1.3885, 1.3867, 1.3849], device='cuda:0')
1:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
1:      first 25 values: tensor([ 0.2378,  0.3299,  0.4331,  0.5005,  0.4960,  0.4219,  0.3254,  0.2154,  0.1077,  0.1750,  0.2446,  0.2513,
1:          0.2311,  0.2266,  0.1525,  0.1256,  0.1144,  0.0538, -0.0831, -0.0315, -0.0248, -0.0584, -0.0719, -0.0607,
1:         -0.0517], device='cuda:0')
1:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
1:      first 25 values: tensor([2.0737, 2.0239, 1.9861, 1.9748, 1.9843, 2.0439, 2.0723, 2.0966, 2.1289, 2.1634, 2.2637, 2.3226, 2.3120, 2.1285,
1:         2.0534, 2.0820, 2.1032, 2.0504, 2.0554, 2.1482, 2.1989, 2.2006, 2.1736, 2.1280, 2.0392], device='cuda:0')
1: [DEBUG] TARGET BATCH
1: Epoch 1, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2550, 2187])
1:     First 25 batch values:
1: tensor([-0.8792, -0.8790, -0.8482, -0.8282, -0.8104, -0.8055, -0.7870, -0.7798, -0.7683, -0.7464, -0.7202, -0.7153,
1:         -0.6945, -0.6911, -0.7071, -0.6859, -0.6779, -0.6418, -0.5906, -0.5337, -0.4862, -0.4540, -0.4162, -0.3669,
1:         -0.2922])
1: [DEBUG] PREDICTIONS TRAIN BATCH
1: Epoch 1, first predictions sample:
1:   └─ Predictions for 'velocity_u' shape: torch.Size([27246, 972])
1:      first 25 pred values: tensor([0.6376, 0.5975, 0.5550, 0.5139, 0.4820, 0.4551, 0.4397, 0.4319, 0.4277, 0.4215, 0.4157, 0.4071, 0.4021, 0.3879,
1:         0.3719, 0.3543, 0.3331, 0.3216, 0.6939, 0.6486, 0.5992, 0.5562, 0.5213, 0.4912, 0.4753], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_v' shape: torch.Size([25903, 972])
1:      first 25 pred values: tensor([2.7529, 2.7202, 2.6915, 2.6918, 2.7142, 2.7584, 2.8201, 2.9095, 3.0111, 3.1256, 3.2382, 3.3425, 3.4134, 3.4419,
1:         3.4174, 3.3321, 3.2070, 3.0626, 2.8173, 2.7560, 2.7150, 2.6856, 2.6913, 2.7196, 2.7710], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'specific_humidity' shape: torch.Size([26326, 972])
1:      first 25 pred values: tensor([ 0.1629,  0.1438,  0.0993,  0.0608,  0.0281, -0.0023, -0.0250, -0.0527, -0.0849, -0.1213, -0.1515, -0.1578,
1:         -0.1342, -0.0862, -0.0335,  0.0141,  0.0462,  0.0712,  0.1097,  0.0785,  0.0417, -0.0011, -0.0289, -0.0491,
1:         -0.0774], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'velocity_z' shape: torch.Size([25525, 972])
1:      first 25 pred values: tensor([-3.7138e-04, -3.5062e-02, -8.6530e-02, -1.4263e-01, -1.9357e-01, -2.7095e-01, -3.4059e-01, -3.8513e-01,
1:         -4.2390e-01, -4.7013e-01, -4.7929e-01, -4.9039e-01, -4.6093e-01, -3.9506e-01, -3.2398e-01, -2.0177e-01,
1:         -1.0874e-01, -4.8076e-02, -2.6839e-02, -4.5998e-02, -9.7508e-02, -1.4940e-01, -2.0077e-01, -2.8537e-01,
1:         -3.7697e-01], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'temperature' shape: torch.Size([11309, 2187])
1:      first 25 pred values: tensor([1.5363, 1.5442, 1.5516, 1.5554, 1.5562, 1.5527, 1.5493, 1.5504, 1.5482, 1.5442, 1.5367, 1.5310, 1.5271, 1.5243,
1:         1.5177, 1.5169, 1.5187, 1.5260, 1.5397, 1.5475, 1.5580, 1.5634, 1.5727, 1.5808, 1.5923], device='cuda:0',
1:        grad_fn=<SliceBackward0>)
1:   └─ Predictions for 'total_precip' shape: torch.Size([9084, 243])
1:      first 25 pred values: tensor([ 0.4107,  0.4101,  0.3882,  0.3467,  0.2960,  0.2402,  0.1908,  0.1388,  0.1155,  0.2350,  0.2386,  0.2210,
1:          0.1907,  0.1490,  0.1072,  0.0761,  0.0497,  0.0282,  0.0586,  0.0481,  0.0378,  0.0198, -0.0013, -0.0217,
1:         -0.0371], device='cuda:0', grad_fn=<SliceBackward0>)
1:   └─ Predictions for 't2m' shape: torch.Size([2550, 2187])
1:      first 25 pred values: tensor([ 0.0562,  0.2359,  0.1290, -0.0541, -0.0506,  0.0723,  0.0052,  0.1554,  0.0763, -0.0709, -0.0650,  0.1837,
1:          0.1675, -0.1696,  0.0348,  0.0332, -0.0104, -0.0474,  0.1183,  0.1031,  0.1061, -0.0210, -0.1011, -0.0550,
1:          0.1899], device='cuda:0', grad_fn=<SliceBackward0>)
0: [DEBUG] INPUT BATCH
0: Epoch 1, first input batch shapes / sample data:
0:   └─ Field: 'velocity_u' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([0.1220, 0.1457, 0.1685, 0.1896, 0.2090, 0.2259, 0.2401, 0.2526, 0.2638, 0.2751, 0.2867, 0.2986, 0.3112, 0.3250,
0:         0.3417, 0.3607, 0.3815, 0.4048, 0.1679, 0.1899, 0.2105, 0.2294, 0.2471, 0.2635, 0.2773], device='cuda:0')
0:   └─ Field: 'velocity_v' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([0.2771, 0.2879, 0.2972, 0.3049, 0.3100, 0.3124, 0.3130, 0.3134, 0.3146, 0.3161, 0.3175, 0.3205, 0.3246, 0.3286,
0:         0.3331, 0.3377, 0.3428, 0.3497, 0.3276, 0.3394, 0.3491, 0.3566, 0.3613, 0.3637, 0.3645], device='cuda:0')
0:   └─ Field: 'specific_humidity' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([-0.1873, -0.2091, -0.2264, -0.2412, -0.2532, -0.2614, -0.2670, -0.2710, -0.2731, -0.2740, -0.2750, -0.2758,
0:         -0.2767, -0.2783, -0.2817, -0.2853, -0.2886, -0.2934, -0.1999, -0.2194, -0.2335, -0.2442, -0.2531, -0.2594,
0:         -0.2613], device='cuda:0')
0:   └─ Field: 'velocity_z' shape: torch.Size([96, 5, 12, 3, 6, 3, 18, 18])
0:      first 25 values: tensor([0.2762, 0.2795, 0.2905, 0.3312, 0.3290, 0.3147, 0.3268, 0.3147, 0.2938, 0.2861, 0.2861, 0.3015, 0.3004, 0.2982,
0:         0.3180, 0.3081, 0.2982, 0.3421, 0.2476, 0.2454, 0.2212, 0.2300, 0.2190, 0.2146, 0.2058], device='cuda:0')
0:   └─ Field: 'temperature' shape: torch.Size([96, 5, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([-0.1917, -0.1461, -0.1000, -0.0577, -0.0193,  0.0152,  0.0498,  0.0879,  0.1243,  0.1592,  0.2002,  0.2432,
0:          0.2843,  0.3231,  0.3599,  0.3898,  0.4112,  0.4306,  0.4500,  0.4601,  0.4637,  0.4658,  0.4585,  0.4413,
0:          0.4249], device='cuda:0')
0:   └─ Field: 'total_precip' shape: torch.Size([96, 1, 12, 6, 12, 3, 9, 9])
0:      first 25 values: tensor([-0.2441, -0.2441, -0.2441, -0.2441, -0.2441, -0.2441, -0.2429, -0.2429, -0.2429, -0.2429, -0.2381, -0.2429,
0:         -0.2417, -0.2405, -0.2441, -0.2357, -0.2381, -0.2405, -0.2429, -0.2429, -0.2417, -0.2405, -0.2297, -0.2094,
0:         -0.2022], device='cuda:0')
0:   └─ Field: 't2m' shape: torch.Size([96, 1, 12, 2, 4, 3, 27, 27])
0:      first 25 values: tensor([1.1261, 1.1889, 1.1062, 1.0400, 0.9767, 0.9213, 0.9461, 0.9880, 1.0415, 1.0981, 1.0805, 1.0316, 0.9217, 0.7344,
0:         0.6470, 0.7019, 0.7934, 0.8166, 0.6554, 0.3828, 0.1792, 0.2370, 0.3153, 0.2866, 0.2339], device='cuda:0')
0: [DEBUG] TARGET BATCH
0: Epoch 1, batch 0 - Sparse-masked 't2m' shape target data: torch.Size([2224, 2187])
0:     First 25 batch values:
0: tensor([1.3736, 1.3569, 1.3020, 1.2791, 1.2659, 1.2464, 1.2589, 1.2690, 1.2680, 1.2337, 1.1581, 1.1242, 1.1248, 1.1402,
0:         1.0694, 0.9172, 0.7625, 0.7033, 0.8155, 0.8426, 0.8086, 0.7430, 0.7387, 0.7513, 0.7877])
0: [DEBUG] PREDICTIONS TRAIN BATCH
0: Epoch 1, first predictions sample:
0:   └─ Predictions for 'velocity_u' shape: torch.Size([25635, 972])
0:      first 25 pred values: tensor([0.0719, 0.0738, 0.0715, 0.0638, 0.0571, 0.0502, 0.0491, 0.0531, 0.0589, 0.0582, 0.0577, 0.0527, 0.0551, 0.0551,
0:         0.0618, 0.0722, 0.0835, 0.1003, 0.1144, 0.1122, 0.1046, 0.0975, 0.0911, 0.0827, 0.0872], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_v' shape: torch.Size([26239, 972])
0:      first 25 pred values: tensor([-0.0433,  0.0049,  0.0402,  0.0659,  0.0856,  0.0902,  0.0816,  0.0704,  0.0567,  0.0384,  0.0220,  0.0135,
0:         -0.0058, -0.0363, -0.0745, -0.1210, -0.1617, -0.1935, -0.1217, -0.0777, -0.0363, -0.0040,  0.0257,  0.0391,
0:          0.0458], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'specific_humidity' shape: torch.Size([26715, 972])
0:      first 25 pred values: tensor([0.0828, 0.0936, 0.0835, 0.0807, 0.0777, 0.0840, 0.0928, 0.1167, 0.1489, 0.1864, 0.2278, 0.2736, 0.3154, 0.3525,
0:         0.3751, 0.3861, 0.3945, 0.4010, 0.0978, 0.1043, 0.1023, 0.0951, 0.0927, 0.1007, 0.1067], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'velocity_z' shape: torch.Size([26183, 972])
0:      first 25 pred values: tensor([0.7173, 0.7690, 0.7621, 0.7870, 0.7861, 0.6831, 0.5577, 0.4125, 0.3145, 0.2905, 0.3454, 0.4534, 0.5725, 0.6346,
0:         0.6499, 0.6776, 0.6274, 0.5369, 0.7613, 0.8581, 0.8517, 0.8766, 0.8979, 0.8507, 0.7737], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'temperature' shape: torch.Size([11887, 2187])
0:      first 25 pred values: tensor([0.1400, 0.1592, 0.1744, 0.1898, 0.2037, 0.2148, 0.2288, 0.2519, 0.2748, 0.2989, 0.3189, 0.3366, 0.3503, 0.3649,
0:         0.3708, 0.3791, 0.3812, 0.3811, 0.3823, 0.3793, 0.3834, 0.3852, 0.3889, 0.3830, 0.3750], device='cuda:0',
0:        grad_fn=<SliceBackward0>)
0:   └─ Predictions for 'total_precip' shape: torch.Size([8995, 243])
0:      first 25 pred values: tensor([-0.1511, -0.1578, -0.1617, -0.1567, -0.1608, -0.1731, -0.1802, -0.1896, -0.1820, -0.1635, -0.1612, -0.1591,
0:         -0.1538, -0.1600, -0.1672, -0.1736, -0.1882, -0.1889, -0.1550, -0.1559, -0.1471, -0.1450, -0.1492, -0.1542,
0:         -0.1601], device='cuda:0', grad_fn=<SliceBackward0>)
0:   └─ Predictions for 't2m' shape: torch.Size([2224, 2187])
0:      first 25 pred values: tensor([ 0.0167,  0.2199,  0.1316, -0.0452, -0.0654,  0.0089,  0.0490, -0.0111,  0.0039, -0.0050, -0.0819,  0.1068,
0:          0.0932, -0.0085, -0.0257,  0.0442, -0.0319, -0.1060,  0.1887,  0.0822,  0.1794, -0.0975, -0.0890, -0.1316,
0:          0.3309], device='cuda:0', grad_fn=<SliceBackward0>)
0: epoch: 1 [1/5 (20%)]	Loss: 0.27729 : 0.20406 :: 0.03529 (1.91 s/sec)
0: epoch: 1 [2/5 (40%)]	Loss: 0.37049 : 0.23476 :: 0.03074 (10.13 s/sec)
0: epoch: 1 [3/5 (60%)]	Loss: 0.29062 : 0.21302 :: 0.03135 (10.14 s/sec)
0: epoch: 1 [4/5 (80%)]	Loss: 0.27440 : 0.16765 :: 0.03123 (10.14 s/sec)
